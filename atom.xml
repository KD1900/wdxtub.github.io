<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小土刀</title>
  <subtitle>Agony is my triumph</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wdxtub.com/"/>
  <updated>2016-11-17T13:57:13.000Z</updated>
  <id>http://wdxtub.com/</id>
  
  <author>
    <name>wdxtub</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【度心术全解】读书笔记</title>
    <link href="http://wdxtub.com/2016/11/17/read-heart-clip/"/>
    <id>http://wdxtub.com/2016/11/17/read-heart-clip/</id>
    <published>2016-11-17T13:18:02.000Z</published>
    <updated>2016-11-17T13:57:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>在一读书公众号的推荐下陆陆续续看完了这本『奇书』，里面的套路不难，但怎么灵活掌握，就需要时间了。当然，还是少一点套路，多一些真诚</p>
<a id="more"></a>
<hr>
<h2 id="度心第一"><a href="#度心第一" class="headerlink" title="度心第一"></a>度心第一</h2><ul>
<li>揣摩第一，行为第二。</li>
<li>过分信任与一味姑息从来都是弊大利小的下策。</li>
<li>制约下属的权力，是避免他们滥用权力而违法的诀窍。</li>
<li>当谋划攻心得不偿失，强硬手段便立刻生效。</li>
<li>对能干的部属只要不吝啬褒奖，他便有知遇之感，便能卖命。</li>
<li>小人曲欲望，永远是伤人的利器。</li>
</ul>
<blockquote>
<p>仁者，鲜也，却之弗厚焉。</p>
</blockquote>
<p>品德高尚的人，是很少的，治理官吏不能宽厚。</p>
<blockquote>
<p>志大不朝，欲寡眷野。</p>
</blockquote>
<p>志向大的人不会入朝为官，欲望少的会留恋民间。</p>
<p>缺乏对官吏的本质认识，就难免活吏乏术。在封建官场的特定环境下，正人君子是难有作为的，一般人也抗拒不了钱权的诱惑，这就决定了为官者的价值取向和君子所求势必格格不入，是以真君子自不愿舍弃操守而混迹其中了。由此观之，官场中人不管唱何高调、做何辩解，他们的志向终是有限的，他们的欲望终是不衰的，这也是他们的共同弱点。</p>
<blockquote>
<p>才高不羁，德薄善诈。</p>
</blockquote>
<p>才能突出的人不受拘束，品德低下的人善于欺诈。</p>
<blockquote>
<p>民之所畏，吏无惧矣。 </p>
</blockquote>
<p>百姓不敢做的事，官吏不会惧怕。</p>
<blockquote>
<p>狡吏恃智，其勇必缺，迫之可也。</p>
</blockquote>
<p>狡猾的官吏倚仗他的智慧，他的勇气一定是缺乏的，强迫他可以将他制住。</p>
<blockquote>
<p>悍吏少谋，其行多疏，挟之可也。</p>
</blockquote>
<p>凶狠的官吏往往智谋不足，他的行为多有疏忽之处，挟制他可以令他屈服。</p>
<p>嚣张难制的官吏，看似不好驾驭，其实这正是他们拙于心计的表现。没有了智谋，他的短处自然会过多地暴露出来，当权者只要抓住这些把柄来挟制他，这些人却足最易收服。任何官吏都有他的短处，如何利用他们的短处为己所用，这也正是封建官场的腐朽所在：在不损当权者私利的前提下，官吏即使干了再多的坏事，只要对主子表示归顺，他们就未必会得到应有的惩罚。</p>
<blockquote>
<p>廉吏固傲，其心系名，誉之可也。</p>
</blockquote>
<p>正直的官吏会很孤傲，他的身心为名声所累，赞誉他就可以役使他。</p>
<p>有正义感的官吏，由于他们不贪不占、心存仁义，在封建官场中显得十分另类。他们以圣贤为榜样，自瞧不起官场中的那些势利小人，他们的孤傲也就不难理解了。聪明的当权者并不会计较廉吏的这个特性，相反，他们会利用廉吏爱惜名声这一点入手，表面上多加夸奖，满足他们在这方面的嗜求。廉吏在自以为知遇之时，他们便会不道余力地为当权者卖命了</p>
<blockquote>
<p>治吏治心，明主不弃背己之人也。</p>
</blockquote>
<p>管理官吏要研究他们的内心，明智的君主不会抛弃曾背叛自己的人。</p>
<p>人都是有私心的，官场上的人更是如此。如果当权者不了解人的这一本性，一味求全责备，斤斤计较，那么就无人为他所用了。背叛自己其实并不是太大的罪恶，可怕的是他不知悔改，屡屡背叛。只要不是天生的反骨，明智的当权者若能敞开心胸，容忍别人的一次不忠，他的美名和收益远过于杀之泄愤。</p>
<blockquote>
<p>知人知欲，智者善使败德之人焉。</p>
</blockquote>
<p>识别人要了解他的欲望，有智慧的人善于驱使德行有亏的人。</p>
<p>品德不好的人在封建官场大有人在，要想把他们彻底清除是难以做到的事。这一点当权者心知肚明，他们尽力做的只是如何让他们为已致命罢了。德行有亏自然欲望多多，在此谤使他们，当权者就可以驱使他们干任何事了。这些人只要满足了他们的欲望，是无不敢为的，做为当权者整人弄权的工具，他们往往是最合适的人选。</p>
<h2 id="御心第二"><a href="#御心第二" class="headerlink" title="御心第二"></a>御心第二</h2><ul>
<li>比惩罚更有力的是仁慈。</li>
<li>上智御心，下智御力。</li>
<li>先谋后事者昌，先事后谋者亡</li>
</ul>
<blockquote>
<p>民所求者，生也；君所畏者，乱也。</p>
</blockquote>
<p>百姓所追求的，是生存，君主所畏惧的，是叛乱。</p>
<blockquote>
<p>无生则乱，仁厚则安。</p>
</blockquote>
<p>百姓无法生存就会产生叛乱，君主仁爱宽厚就能使天下安定。</p>
<blockquote>
<p>民心所向，善用者王也。</p>
</blockquote>
<p>老百姓都向往的事，善于利用这一点的人可以成就王霸之业。</p>
<p>老百姓像水，君王像舟船。水能载舟也能覆舟。如果老百姓一致认定的事，不是靠行政手段和武力镇压所能阻止、改变得了的。而善于利用这一点的人，就可以成就王霸之业。</p>
<blockquote>
<p>不礼于士，国之害也，治国固厚士焉。</p>
</blockquote>
<p>对读书人不尊敬，是国家的灾害，治理国家 定要优待读书人。</p>
<p>读书人作为民众中的精英人物，他们的态度和立场对民众有很大的影响力。一旦征服了他们，让他们俯首帖耳，统治者御民的阻力就消减了许多，也消除了御民中的最大难题。读书人向来是难以驾驭的，礼待他们作为一种手段，在历朝历代都被证明颇有功效。读书人虽不怕社会的不公和环境的残酷，但他们脆弱的感恩心理却往往会使自己陷入“知遇”的迷团，面对突如其来的好处而不知所措了。</p>
<blockquote>
<p>士子骄纵，非民之福，有国者患之。</p>
</blockquote>
<p>读书人的骄傲和放荡，对老百姓没有好处，治理国家的人对这些人应该警惕。</p>
<p>读书人有许多缺点，骄傲和放荡不羁，虽不是他们的致命伤，但在一味让人顺从的君主眼里，就是大毛病了。百姓往往出于愚昧无知，所以极好愚弄哄骗，而读书人知书明理，统治者要欺骗他们就不是件易事。对此，统治者在无法利用收买读书人的时候，对他们的戒备自是无疑：一旦恼羞成怒，读书人的霉运就避无可避了，</p>
<blockquote>
<p>士不怨上，民心堪定矣。</p>
</blockquote>
<p>读书人不怨恨朝廷，百姓的心意就可以稳定了。</p>
<p>封建统治者轻视民意，他们往往白作聪明地笼络读书人，认为这样就握住了御民的窍要。尽管读书人的变节和屈从会对百姓产生强烈的震撼和负面影响，但民众的觉醒和识见是不可低估的；老百姓虽可受欺于一时的蒙骗，却终舍放弃对任何人的幻想，用自己的力量说话。如果统治者不顺应民意，无论他的手法多么“高明”，最后终归破产.</p>
<blockquote>
<p>严刑峻法，秦之亡也，三代盛典，德之化也。</p>
</blockquote>
<p>秦朝施行的是严酷的刑法，结果很快就灭亡了，夏禹、商汤、周文、武实现了长治久安，就是因为施行了仁德的政治。</p>
<p>愚蠢残暴的统治者为了维护自己的统治，常把严刑重法作为御民的利器，频频祭出。他们幻想百姓在严酷的打压之下，便会乖乖顺从了，永不反叛了。历史的事实反复证明这只是统治者的梦呓，官逼民反的铁律只能让残暴者自作自受。其实，刑与法都是人定的，再好的刑与法如果无好人执行，也一无所用。只有施行德政，让百姓仁爱知礼，天下才会大治。</p>
<blockquote>
<p>权重勿恃，名高勿寄，树威以信也。</p>
</blockquote>
<p>权力大不可以倚仗，名望高不可以托付，树立威严要讲究信用。</p>
<p>信用是最能让人诚服的法宝，无信则是所有失败的原因之一。统治者往往自恃位高权重，朝令夕改，言行不一，这就从根本上失去了民众对他的信赖之情，自不会诚心服从他的号令了。如此，上下离心，令不能行，凡事只能向坏的方向发展，一旦危难来临，便无药可救。高明的统治者总是在取信于民上树立自己的威望，利用一切机会彰显他的诚意。</p>
<h2 id="擒心第三"><a href="#擒心第三" class="headerlink" title="擒心第三"></a>擒心第三</h2><ul>
<li>擒心术为统治者手中的王牌。</li>
<li>用情感打动，这是最好的操纵术。</li>
<li>上位者凭好恶而澶用人，小则必失，大则必乱。</li>
<li>使用人才看是否忠心，才能应属第二。</li>
<li>大才大用，小才小用，不可因其才微而不用。</li>
<li>用人所长，亦为笼络之道，长久之计也。</li>
<li>屈人之心用大赏</li>
</ul>
<blockquote>
<p>德不悦上，上赏其才也。</p>
</blockquote>
<p>品德好不能让君主高兴，君主尊重的是人的才能。</p>
<blockquote>
<p>才不服下，下敬其恕也。</p>
</blockquote>
<p>才能大不能让属下诚服，属下敬畏的是君主的宽恕。</p>
<p>本领越大的统治者就越容易犯下苛求于人的错误，不能宽恕别人。这样，人们就会对他敬而远之，有才能的人更不会为他效力了。原谅别人的过失，为他人着想，是收纳人才的常胜之道；在情感上和别人拉近距离，别人才会抛弃利益和世俗，真正做到生死与共。有才能者都是自尊心极强的，他们也最易被感情所打动，对他们不</p>
<blockquote>
<p>才不服下，下敬其恕也。</p>
</blockquote>
<p>才能大不能让属下诚服，属下敬畏的是君主的宽恕。</p>
<p>本领越大的统治者就越容易犯下苛求于人的错误，不能宽恕别人。这样，人们就会对他敬而远之，有才能的人更不会为他效力了。原谅别人的过失，为他人着想，是收纳人才的常胜之道；在情感上和别人拉近距离，别人才会抛弃利益和世俗，真正做到生死与共。有才能者都是自尊心极强的，他们也最易被感情所打动，对他们不斤斤计较，大度宽容，就是最有力的操纵。</p>
<blockquote>
<p>才高不堪贱用，贱则失之。</p>
</blockquote>
<p>才能高的人不可以让他们担任低贱的职务，轻视他们就会失去他们。</p>
<p>对人才的尊重不能停留在口头上的夸赞，不把人才放到关键的位置上大胆使用，不仅不能让人才发挥作用，而且只能让自己的苦心付之东流。大才之人志大能力强，非高位不能让他们安心效命，这就要求统治者要放开眼光，破格使用他们。如果遵循常理，对他们不特殊优待，大才之人只会感到有志难伸，弃而别走了。</p>
<blockquote>
<p>能微莫付贵权，贵则毁己。</p>
</blockquote>
<p>本领低微的人不要让他们掌握显要的权力，重用他们就会毁灭自己。</p>
<p>对人才的误判和误用，其致命的后果总会显现出来。把不是人才的小人引为知己，授以重权，常常是自毁的开始。没有真本事的人从来不承认自己的无能，他们擅用卑劣的手段打击有才能者，而置国家危难于不顾。统治者没有一个是自愿毁灭的，可他们的极端自私和喜听媚言却少有改变，这样就决定了他们在用人上必有缺失，是无力自拔的。</p>
<blockquote>
<p>才大无忠者，用之祸烈也。</p>
</blockquote>
<p>有大才但无忠心的人，重用他们会招致很大的祸患。</p>
<p>招纳人才的目的，不外乎要使用他们，为自己谋利。如果人才并不忠于自己，那么他的才能就不可能贡献出来：一旦他们倒戈相向，其危险性就远比常人为最了。因此，在招纳使用人才时，只把目光盯在其才能的大小上是愚蠢的，片面强调才能的高低也是不妥的，如果不考察其是否忠心</p>
<blockquote>
<p>人不乏其能，贤者不拒小智。</p>
</blockquote>
<p>人们都有一定的才能，德行好的人不会疏远本领低的人。</p>
<p>不绝对排斥本领低的人，有时会有意外的收获。其实，不同的人都是可以不同使用的，只要善于利用每个人的长处，就会增加自己的胜算，多了一份力量。在非常时期，看似微不足道的本领，却是别有大用的；看似平凡无奇的人，却可救人于危难。审视人才不仅要有大的眼光，吏要改变对人才的狭隘认识，不好高骛远。</p>
<blockquote>
<p>智或存其失，明者或弃大谋。</p>
</blockquote>
<p>智计有时会存有失误，明智的人有时会不用大的谋划。</p>
<p>人才多是善使智计的，智计多寡、优劣，往往是判定人才高低的重要标准。同时，人才又不是完美无缺的，再突出的人才也有智计有失的时候。正因如此，明智的统治者在招纳人才之时，并不会对人才的智计一味听从，并不会对人才盲目地依赖，在重大问题上，他们总有自己的观点和立场，甚至完全不用一切智计。凡事都讲究智计是人才的缺点，只有了解他们，才能更好地驾驭和用好他们。</p>
<blockquote>
<p>不患无才，患无用焉。</p>
</blockquote>
<p>不要担忧没有人才，担忧的是不会使用他们。</p>
<p>抱怨找不到人才的人，无疑是不真心爱才敬才的人。在求才若渴者的眼里，他们总能在芸芸众生中发掘出人的长处，看到人的闪光的东西。觅到人才而不用，或是用而不当，也是许多人的缺失之一，他们空有爱才的名声，却无形中把人才贬值，直至把人才拱手让人，使本身固有的仇势一下消减。把人才真正地使用起来，才能真正地笼络住他们。</p>
<blockquote>
<p>技显莫敌禄厚，堕志也。</p>
</blockquote>
<p>才技突出不能抵挡报酬的丰厚，金钱销蚀人的志向。</p>
<p>用全钱来招纳和收买人才，是从古到今十分有效的方法。才能再高也要穿衣吃饭，志向再高也要养家糊口，在金钱和物质上诱惑他们，满足他们，就不怕人才不乖乖就范。其实，人才和平常人一样，他们不会天生地仇视金钱，他们中的有志者，只不过鄙视不义之财罢了。只要给予的方法适当，赏赐的借口好听，不侵犯他们的自尊心，人才就会心安理得地接受了。</p>
<blockquote>
<p>情坚无及义重，败心矣。</p>
</blockquote>
<p>情感深厚比不上节义重要，节义改变人的思想。</p>
<p>人才是要争取的，人才坐等不来。对人才晓以大义，能使他们放下情感的包袱，转投到自己的门下。和其他方法相比，用大义来感召人才，可促人猛醒，令最固执的人放弃成见。情感的培养非一日之功，免不了夹杂着私利，要把这个关节打通，有时一般的方法是全然无用的。唤起人才的良知和正义感，一切就迎刃而解了。</p>
<p>对愚人用欺骗，对智者用柔诚。 尊敬智者，作为一种策略，虽不出于真心但有效。 游说者夸夸其谈或言过其实，必会引起别人警惕，故说者必慎其辞。 不为外物左右，这是不受欺诈的根本之道，受骗的机会就少。 上当受骗，不愠不怒，沉着冷静才能反击有力。</p>
<blockquote>
<p>愚人难教，欺而有功也。 </p>
</blockquote>
<p>愚蠢的人不能教导他，欺骗他却有成效。</p>
<p>说服别人一定要明确对象，区别对待。愚蠢的人由于不明事理，白以为是，要想说服他们就不能一味依靠说教。骗人的把戏是不光彩的行为，总有人为达目的屡屡施之，而上当最多的又恰是愚音，这从反面也印证了对付愚人是有效方法。喜听谎言的人总是对自己缺乏真正的认识，也蔑视他人的能量，他们不辨是非，孤陋寡闻，不可避免地要吞吃苦果了。</p>
<blockquote>
<p>智者亦俗，敬而增益也。</p>
</blockquote>
<p>有智慧的人也会庸俗，尊敬他可增加收益。</p>
<p>对智者的敬爱，就是对自己的最大负责。反之，对智者也有心愚弄，着意蒙骗，最后蒙受损失的一定是自己。所以有头脑的人是不会处处撒谎的，因为在真人智者面前，谎言全然无用。尊敬智者，这是说服智者的高明手段；尊敬作为一种策略，尽管有时并不是出于真心，但智者还是乐于接受的。这是智者的一个“弱点”，是征服他们的突破口。</p>
<blockquote>
<p>身危者骇，人勿责之。</p>
</blockquote>
<p>身处险境的人恐惧，人们不要指责他。</p>
<p>人在难处之时，极易走向极端，做出大逆不道之事。这个时候，为了避免不测的事件发生，还是要顾全大局，控制自己的情绪，以安抚他们为佳。让人无法察觉自己的真实心境，是高明者掌控局势和他人的要件之一，如果不分青红皂白地直抒胸臆，只能把人推向敌方的阵营，削弱自己的力量。在此，不给落难之人雪上加霜，甚至假作慰勉，都是不促其变节的良方，</p>
<blockquote>
<p>无信者疑，人休蔽之。</p>
</blockquote>
<p>没有信义的人多疑，人们不必蒙蔽他。</p>
<p>用智重在收取功效，其形式固不能拘于定式。把别人蒙在鼓里，使其中我之计，在外表上只讲欺骗是单一的，也不是对所有人都有效的。不讲信义的人从来是多疑的，也是极为敏感的，如果就此故作声张，不加掩饰，以他们的性格定会妄加猜测，疑虑重重。在本该隐蔽处大反其道，需要对目标对象的准确把握；堂而皇之的行为，有时更能让人们产生错觉。</p>
<blockquote>
<p>诡不惑圣，其心静焉。</p>
</blockquote>
<p>欺诈之术不能迷惑圣人，圣人内心安详。</p>
<p>欺诈之术之所以能够得逞，并不见得是欺诈之术有多么高明，而是人们内心躁动贪念的结果。和圣人相比，人们都是世俗的，他们贪心旺盛，心怀侥幸，欺人者便利用人们的这一弱点，投其所好，巧设骗局。对世间万物万事不存偏执，不为外物左右，这是不受欺诈的根本之道，只有向圣人的境界靠拢，骗子的机会才会越来越少。</p>
<blockquote>
<p>正不屈敌，其意谲焉。</p>
</blockquote>
<p>正义不能让敌人自动屈服，因为敌人本性奸诈。</p>
<p>在对敌斗争中，欺诈之术是非使不可的。任何时候都讲究光明正大的人，无疑是天真和幼稚的。奸诈是敌人的本性，和他们讲正义之道，并不能战胜他们；以其人之道还治其人之身，这是最好的选择。诈术是智慧的一个重要内容，智慧不足的人无击发挥诈术的作用，使用不当更会反遭其殃。</p>
<blockquote>
<p>诚不悦人，其神媚焉。</p>
</blockquote>
<p>诚实不能讨人欢心，人们在骨子里都喜欢谄媚。</p>
<p>人都有虚伪的一面，认清这个本质，就不能一味指责别人的欺诈了。欺诈成风往往是由人们自身的好恶和人性弱点所造成的，人们在责怨自己为人欺诈的同时，总免不了也要欺诈别人。事实上，如果诚实无欺的人不屡屡碰壁，如果欺诈之人得不到半点好处，谁会偏好欺诈呢？不反省自己和没有奖赏诚实的社会机制，欺诈就难以根绝。</p>
<blockquote>
<p>自欺少忧，醒而愁剧也。</p>
</blockquote>
<p>自我欺骗能减少忧虑，清醒却使愁苦加剧。</p>
<p>俗话说，难得糊涂，让自己糊涂起来，不欺骗自己是不行的。欺骗自己并不全是“罪恶”，它是把自己从困境和迷惑中解脱出来的可行之法；有了这种善意的欺骗，人们才会不事事较真，不执迷不悟。清醒的人是痛苦的，看透世相与人生，却无力摆脱，这种痛苦会更加剧烈。在理想与现实之间，自欺不失为一种调和剂，为了更大意义上的生存和发展，就该对自己和别人多些“宽容”与“曲解”。</p>
<blockquote>
<p>人欺不怒，忿而再失矣。</p>
</blockquote>
<p>被人欺骗不要发怒，愤怒只能让人失去的更多。</p>
<p>在受骗上当面前，保持理智和良好的心态，就不会意气用事，从而可以避免更大的损失，也就可能了。受骗上当并不是特别难堪的事，难堪的是一再被人欺骗而不觉。愤怒是对自己的惩罚，它对改变现状毫无用处。一旦因为愤怒让自己思雉混乱，行为偏激，这第二次伤害就只能算在自己的头上。不愠不怒，才能沉着冷静，反击有力。</p>
<p>让强敌自我削弱，膨胀其野心是一妙着。 想弃之便放纵他，想使用就收拢他。 砍擒故纵，可以获得更大的胜果。 控制小人要利用他的欲望，如皮影戏艺人手中的线。 在别人的怂恿诱骗下畅所欲言，就要招致大祸。</p>
<blockquote>
<p>国盛势衰，纵其强损焉。</p>
</blockquote>
<p>强国的势头是走向衰落，放任它的强大会损伤它。</p>
<p>物极必反的道理是人所共知的，而让强者更强，进而达到有损它的思想，却不是人人都知晓的：强国少不了自大的雄心，若能推波逐澜，使其野心加剧，它势必要不惜国力，盲目扩张，在各方面都耗费巨大，由此造成的恶果便是国力削损，强大也只是虚张声势的表面了。不正面和强敌相抗，让强敌自我削弱，能从根本上改变敌我的态势，</p>
<blockquote>
<p>人贵势弱，骄其志折焉。</p>
</blockquote>
<p>贵人的势头是转向弱小，促使他志趣骄横能折损它。</p>
<p>有权势有地位的人，免不了心存骄傲，自以为是。位低职微的人和这些人直接对抗，胜算是不多的。反其道而行之，在他们的骄傲处极力吹捧，放言狂赞，这些人在得意之时，只能助长他们的骄横之心，也就免不了干下种种不法之事；一旦积怨甚多，他们的好日子便小多了。故意使人在错误的道路上越走越远，就不能指出前路的暗淡。</p>
<blockquote>
<p>功高者抑其权，不抑其位。</p>
</blockquote>
<p>对功劳大的人要限制他们的实权，而不降低他们的地位。 </p>
<p>放纵是有条件的，在某些方面，该放的就要放；而在另一些方面，该收的也一定要收。收放结合，才能把人牢牢制住。功臣在历史上所起的作用是巨大的，可功臣若走向反面，他们的影响力和破坏力也是惊人的。对待他们，社会地位不能降低，以示荣宠，但不给其实权，就可防患于未然了。在要害处只收不放，这是放纵的首要前提。</p>
<blockquote>
<p>名显者重其德，不重其名。</p>
</blockquote>
<p>对名声显赫的人要看重他们的品德，而不看重他们的名望。</p>
<p>名声大的人并不见得有什么真才实学；名望高的人也不见得都是品德优良之士。由此，对待名人不能一概轻信，放纵他们无拘无束；也不能为他们的名望所系，不识别他们为人的优劣。名人都是不好驾驭的，也是难以收服的，如果重其德而不重其名，真正的名人才会深服你的知人，而不再倨傲了。在品德上倡导推崇，奸滑的小人方能无机可乘。</p>
<blockquote>
<p>败寇者纵之远，不纵之近。</p>
</blockquote>
<p>失败的敌人可以放纵他们逃向远处，不可以放纵他们留在身边。</p>
<p>任何事情都不是绝对的，纵敌远逃表面上与歼敌务尽相违，实际上它只是欲擒故纵的缓招，是应变的灵活措施。给敌人留一条生路，他们便没有了顽抗拼死的决心，逃之愈远，他们的军心就会愈加涣散，他日歼灭他们也就愈加容易。不把敌人留在身边，眼前的危险就消除了；最直接的威胁一旦不在，方能从容不迫地安排未来。</p>
<blockquote>
<p>君子勿拘，其心无拘也。</p>
</blockquote>
<p>君子不要束缚他们，他们的心志是不受束缚的。</p>
<p>对他人无知，就不可能与人相处融洽，更谈不上征服和制服他人了。人都是不会轻易爱制于人的，让君子屈服就更难。君子的心志无拘无束，这是他们的显著特点，也是他们内心最坚韧的东西，不在这方面尊重他们，成全他们，他们会认为受了最大的侵犯，抗拒之心自然强烈。给君子广阔的空间，他们才能心情舒畅，尽心做事。</p>
<blockquote>
<p>小人纵欲，其心惟欲也。</p>
</blockquote>
<p>小人不节制欲望，他们的心思全在满足欲望上。</p>
<p>利欲熏心的小人随处即有，要想彻底排斥他们既无可能，有时也无必要。善于利用小人为自己做事谋利。是封建统治者的一大特色，他们为了自己的私利，常常是放纵小人的贪欲而不管，借以笼络和驱使他们。为欲望笼罩牵绊的人，不给他们好处是难以使用的；让他们欲望满足，他们就是一条疯狗，随时听从主人的号令。</p>
<blockquote>
<p>利己纵之，利人束之，莫以情易耳。</p>
</blockquote>
<p>有利于自己的就放纵它，有利于他人的就约束它，不要因为情感的好恶而改变。</p>
<p>情感的好恶，常能让人改变原则，把标准扭曲。这是成大事者最忌讳的，也是人们常犯的错误。在收放之间，对自已有利无利，往往是人们判定取舍的首要问题，可以说，这是人性自私的正常表现。人都不愿干对自己无利的事，关心别人总不像关心自己，这就决定了放纵什么是不能以危害自己为前提的，一旦失去了这个保证，任何人的承诺都不可相信。</p>
<blockquote>
<p>心可纵，言勿滥也。</p>
</blockquote>
<p>想法可以有很多，但言语不能随便。</p>
<p>社会对人的制约是不能漠视的，人际关系的复杂也决定了一个人不可能真正地放纵自己，随心所欲。人有思想的自由，但言语的随便无忌却可带来灾害，因言成祸的事总在警醒人们在此谨慎为好。自己不能束缚自己的心灵，压抑自己只能趋向保守和僵化；言语不能信口开河，它暴露出的东西会让别有用心的人利用。许多人往往在别人的鼓励下畅所欲言而致祸，这方面的教训是深刻的。</p>
<blockquote>
<p>行可偏，名固正也。</p>
</blockquote>
<p>行为可以有偏失，但名义一定要守正。</p>
<p>保持名义的正当性，是任何人都不敢掉以轻心的事。那些、说一套、做一套的人，虽然他们胆大心黑，言行绝不一致，但他们仍是不忘欺骗世人，用正当的名义掩饰卑劣的丑行。名义有很大的欺骗性，许许多多见不得人的事，都是在堂而皇之的名义下进行的。如果不从根本上制约人的错误行为，不着眼于实际解决问题，再好的名义和措施也只能是一纸空文了。</p>
<p>构心第六 本卷精要 不要轻易向对手发动攻击，看全局的人笑在最后， 打击政敌，又不暴露自己。躲在暗处达到目的，是最高明者。 吹捧小人，让他得意忘形，落入君子的陷阱。 捧杀小人远比棒杀更有效，虽是小人伎俩，但君子的这种做法无可指责。</p>
<blockquote>
<p>富贵乃争，人相构也。</p>
</blockquote>
<p>富贵是争取来的，所以人们互相构陷。</p>
<p>富贵荣华从来不会凭空得到，人们为了它向来是争夺不休的：各种手段和位俩应运而生，人与人之间的互相攻击和陷害也愈演愈烈了。为富贵而争，常是掩饰无耻行为的借口：智计谋划，有时只为了赚取富贵更加快捷。在貌似高尚的征伐中，有许多是为富贵而战的；人们绞尽脑汁，无数人至死也无法实现富贵之梦。</p>
<blockquote>
<p>生死乃命，心相忌也。</p>
</blockquote>
<p>生死是天命造成的，所以人们心里互相忌恨。</p>
<p>生死命运的不同，是人们心有忌恨的原因之一，也是人们互相伤害的潜动力。没有人甘心平庸与失败，在逆境中的人们最易产生怨天尤人的情绪，把愤怒和无奈友泄到无端的人身上。对生活和命运的抱怨，许多人在无击自拔中，只能陷入更深的误区；对天命的指责和反抗，没有人能保持平和的心态。如果目光充满仇视，任何人都可以成为他攻击的对象。</p>
<blockquote>
<p>构人以短，莫毁其长。</p>
</blockquote>
<p>用他人的短处来构陷他，不要抵毁他的长处。</p>
<p>在构陷者看来，找准对象是第一位的；谁都可以找出构陷的理由，除非他不在构陷者的目标之内。人都有他的长处和短处，真正的完人是不存在的，这就为构陷者行使阴谋手段提供了契机与空间。把他人的短处、缺点无限夸大，上纲上线，罪名的成立也就有了“坚实”的基础；对他人的长处无端攻击，只能暴露自己的不良居心。</p>
<blockquote>
<p>伤人于窘，勿击其强。</p>
</blockquote>
<p>在他人窘迫的时候中伤他，他人强势之时不要攻击。</p>
<p>向对手发起冲击，把握恰当的时机是致胜的关键。落水绚打来容易，而得势者却难以损伤了。对风头正劲的人物，不要轻易发动责难，这固是避免失败的良策，亦是保存自己的无奈之举，只有自己不首先倒下，才有战胜对手的可能。不顾现实和背景而一味冲锋的人，常是他人的靶子和垫脚石；注重策略与着眼大局的人，总能笑到最后。</p>
<blockquote>
<p>敌之不觉，吾必隐真矣。</p>
</blockquote>
<p>若让敌人无所察觉，自己就一定要隐藏真实。</p>
<p>打击他人，把自己完全暴露是愚蠢的；把自己的真实状况和意图隐藏起来，才能迷惑他人，占据主动，出其不意。不露真客的人最为可怕，他将自己置身暗处，在对手分不清敌友的状态下，他的所有防范也就形同虚设了。不会掩饰自己的人缺乏智慧，而处处戴着假面具的人却是智慧走偏了：对所有人都隐藏真实，他的真实一定是见不得人的。</p>
<blockquote>
<p>贬之非贬，君子之谋也。</p>
</blockquote>
<p>贬损的目的不是贬损，这是君子的谋略。</p>
<p>贬损他，是为了重用和解脱他，作为一种谋略，贬损只是一种假象而已，这是人们不该忽略的。在特定时期，特别在小人当政之时，君子的这种技能远比正面抗争有效。小人是幸灾乐祸的，让他们这种阴暗心理有了满足，他们便会丧失警惕，而钻进君子所布下的陷阱。只要对事业和他人有利，说法并不重要，关键还在实效</p>
<blockquote>
<p>誉之非誉，小人之术也。</p>
</blockquote>
<p>赞誉的目的不是赞誉，这是小人的手段。</p>
<p>陷害他人并不一定要用卑劣的言词，言不由衷的赞誉同样可以将人置于死地。不识别人的用心，过分的颂词绝不可轻信。对自高自大的愚顽之辈，捧杀他远比棒杀他更直接有效。违心地赞誉别人，虽是小人常用的伎俩，但君子拿来对付小人，也是无可指责的。事实上，由于小人的本性使然，死于捧杀的小人是最多的，他们更容易在赞誉面前飘飘然了。</p>
<blockquote>
<p>主臣相疑，其后谤成焉。</p>
</blockquote>
<p>君主和臣子互相猜疑，这之后诽谤的事才能有咸。</p>
<p>宠臣是难以中伤的，因为他们和君主关系亲密，君主自会护着他，不肯轻易相信他人之言。如此缘故，历史上那些搞阴谋的人对君主关爱的宠臣的伤害，总是从离间宠臣和君主的关系入手，设法让他们产生矛盾，产生猜疑，有了这个铺垫，接下来的馋言才会发生作用。宠臣少不了自视过高的毛病，如果能让君主感受到这一点，猜疑之心便油然而起。</p>
<blockquote>
<p>人害者众，弃利者免患也。</p>
</blockquote>
<p>被人陷害的人很多，能舍弃利益的人可免除祸患。</p>
<p>无端的陷害随处即来，没有人能够永远躲避。在陷害面前，如果无法解脱，就应该舍弃既得的利益而保住自己的根本了。这是明智者的聪明抉择，也是以退求进的处世之法。把利益抛出，损失虽然惨重，但不足以致命；有了利益的牺牲，害人者才会有所满足，或可罢手。俗话说，留得青山在，不怕没柴烧，只要保全根本，就不是最坏的结果。</p>
<blockquote>
<p>无妒者稀，容人者释忿哉。</p>
</blockquote>
<p>没有忌妒心的人很少，能宽容他人的人可消融愤恨。</p>
<p>宽容心虽不能根绝人们的互相攻击，但它至少能使攻击减弱，化解仇恨。在充满竞争和争斗的社会，如果只知攻击和反攻击，斗争就会愈演愈烈，到头来只会两败俱伤，仇恨加剧。要求别人大多是一厢情愿，首先使自己静下心来，原谅他人，才是解决问题的可行之道。如果抛开私心，那么就没有不可原谅的人与事；自己主动解除武装，再野蛮的对手也会失去攻击的对象了。</p>
<h2 id="逆心第七"><a href="#逆心第七" class="headerlink" title="逆心第七"></a>逆心第七</h2><ul>
<li>大忠者善于权变，愚忠者作茧自缚。</li>
<li>征服人心是治乱之本，以德服人重枉付诸行动，不怕慢，而怕不为。</li>
<li>身居高位，不能在奉承中忘却隐藏的杀机。</li>
<li>甘于“平庸”无欲无求最让对手放心，这是大智者的远虑。</li>
</ul>
<blockquote>
<p>利厚生逆，善者亦为也。</p>
</blockquote>
<p>利益丰厚让人发生背叛，善良的人也会这样做。</p>
<p>在巨大的利益面前，本性良善的人，也会禁不住诱惑而蜕变，这不是利益的罪过，而是良善的本身有时并不足以信赖。善良是相对的，它不是一成不变的。在复杂的社会和多变的环境下，在利益至上的氛围中，单纯的善良是十分脆弱的；在扭曲的世界里，人的尴尬处境和不幸遭遇，也促使人们信念动摇，进而滑向泥潭，向罪恶屈服。在时代的大背景下，能够坚守善良实属不易了。</p>
<blockquote>
<p>势大起异，慎者亦趋焉。</p>
</blockquote>
<p>势力大的人容易产生异心，谨慎的人也有这种趋向。</p>
<p>地位的变化可以让人干出许多看似不可思议的事来。这是人心不满足使然，也是权势让人盲目自大的结果。富贵已极保持平和是很难的，谨慎的人在迷信自己的权势之时，也能做出不理智的判断，虚荣心一旦有增无减，人的行为就绝非他人可以控制了。不甘驯服的人总是自以为有力量的人，尽管这种力量纯属虚幻，他们也会冒险一搏。</p>
<blockquote>
<p>主暴而臣诤，逆之为忠。</p>
</blockquote>
<p>君主残暴臣子诤谏，臣子违背君主是忠心。</p>
<p>忠逆的判定因人而异，但真正的忠心是不以君主的好恶为好恶的。君主虽有绝对的权力，任意定人罪名，但事情的本来面目却非人力所能改变。大忠和愚忠是截然不同的，满足君子的心愿只是个人行为，不违正义和大道却合天地人心。所以明智的君主勇于否定自己，而昏庸的君主只知否定他人，在违逆和顺从之间，仁君总能放下自尊和偏见，超越情感的爱憎而客观待人的。</p>
<blockquote>
<p>主昏而臣媚，顺之为逆。 </p>
</blockquote>
<p>君主昏庸臣子谄媚，臣子顺从君主是背逆。</p>
<p>历史上的奸人小人，在当时多是以“忠臣”面目出现的。他们不问是非，惟君命是从，即使助纣为虐，也无一丝犹豫，他们实质上把君主推向不可回头的深渊，无疑是典型的背叛。没有公德心和正义感的人，只能沦为罪恶的帮凶；在权势和权威面前低头的人，绝不是真正可信赖的人。有了顾虑和阴谋，不背叛别人是不可能的：对这种人不欣赏迁就， 自己才不舍被出卖愚弄。</p>
<blockquote>
<p>忠奸莫以言辨，善恶无以智分。</p>
</blockquote>
<p>忠臣奸臣不能用他们的言语来分辨，善人恶人不能用他们的智慧来区分。</p>
<p>言语的表白、智慧的高低，都不足以让人识别和判定一个人的真伪，心怀异志的人不会高喊谋逆，智慧不足的人也不一定没有野心。考察一个人的忠贞是要剔除假象的，而要揭穿一十人的奸计就必须直指其心，从他的本质行为上寻找蛛丝马迹。没有人是天生的叛逆者，他们的人生轨迹便是最好的说明。在小事上印证，在细节处研析，对人的认识就不会有大的差错。</p>
<blockquote>
<p>谋逆先谋信也，信成则逆就。</p>
</blockquote>
<p>谋划反叛的事首先要谋取对手的信任，有了信任事情才能成功。</p>
<p>谋划对手重要的是不暴露自己，以其亲信的面目施展手段，再强的对手也不堪一击了。把自己的真实用心掩藏起来，有时要付出血的代价；不做必要的牺牲，狡猾的对手就难以消除疑虑。在对手意想不到之处打动他，用最忠心的个也难以做到的事触动他，任何人都会失去理智。潜伏在对手的身边，最致命的攻击才可一举完成。</p>
<blockquote>
<p>制逆先制心也，心服则逆止。</p>
</blockquote>
<p>制止背叛首先要制服人的心灵，心灵畏服背叛才会停止。</p>
<p>征服人心是治乱的根本之道，强权和高压无法消除叛乱之原。让人从心里畏服是最难的，也是短视者与强硬派不愿施行的，这是他们智慧不足的表现，也是他们德望低下、自信心不强的体现，其实，在正逆之间，有时界限并不分明，如果盲目以正义自居，监施淫威，在道义上便失去了正义的力量。以德服人重在付诸行动，不能因噎废食。</p>
<blockquote>
<p>主明奸匿，上莫怠焉。</p>
</blockquote>
<p>君主英明奸臣才会隐藏，君主不能松懈。</p>
<p>一切的阴谋和背叛，时刻都在孕育中，统治者如果疏于防范，过度自信，终要自食其果，对英明的统治者而言，他们的英明和睿智，奸臣的伎俩不能欺骗他们，奸臣的收敛是迫不得已；一旦他们有所松懈，奸臣便会按捺不住了。盛世潜伏着危机，明君环侍着奸小；不给奸人行奸的机会，统治者不仅需要保持清醒，更要有制约奸人的机制。</p>
<blockquote>
<p>成不足喜，尊者人的也。</p>
</blockquote>
<p>成功不值得欢喜，地位高的人是人们攻击的对象。</p>
<p>高高在上的人，很难让人们和他保持一心，永不背叛，他们处在人们忌羡的位置上，他们的特权和地位，时刻让人觊觎，这是任何人都无法阻止的。所谓树大招风，只要身处高位，便有被人颠覆的危险。正因如此，看透世事的人在成功面前不舍得意忘形，更不会在人们的奉承声中忘却隐忧。有得必有失，成功也不例外。</p>
<blockquote>
<p>败不足虞，庸者人恕耳。</p>
</blockquote>
<p>失败不值得忧虑，平庸的人是人们宽恕的目标。</p>
<p>野心会成就大事，也会招来大祸。在失败之时，仍野心勃勃的人是最危险的，对手是不容许不甘于失败之人存在的。承认失败只是承认事实，由不得人死不认账，但在无力改变局面下，甘于平庸，彻底抛弃不臣之心，却是有智者才能做到的。从高处跌落容易让人同情怜悯，无欲无求也最让对手放心，乐于高抬贵手。在胜利者面前，曾违逆他可以原谅，反心不死就绝无宽恕了。</p>
<h2 id="夺心第八"><a href="#夺心第八" class="headerlink" title="夺心第八"></a>夺心第八</h2><ul>
<li>以一人之心，制万人之心，短时有效，长久必败。</li>
<li>君子为名而不为利，知恩而图报，夺心易也；小人为利而不计名誉，忘恩负义，不易夺心。</li>
<li>把敌人制服在未动之时，把恶人的歹意直指出来，是赢取主动和胜利的智者谋略。</li>
<li>用温和手段征服人心，这是智者首选之术。</li>
<li>让人屈服不如让人敬服。</li>
<li>任何人都有他的低谷，然而保待内心的沉静，在屈辱中乐观向上，就不是真正的屈辱了。</li>
</ul>
<blockquote>
<p>众心异，王者一。</p>
</blockquote>
<p>众人的思想是不相同的，君王要把它们统一起来。</p>
<p>统一人们的思想，把个人的意念加诸于人，是封建统治者不道余力要做的头等大事。夺人心志，让民顺从，是统冶的根基；在思想上剥夺民众的自由，封建统治者才好兜售其奸。只要不利于封建统治的思想，都可被斥为异端邪说；思想上的殉难者，所受的迫害和摧残也是最重的。封建专制让人们不能自由思考和提出质疑，这是社会发展的一大阻力。</p>
<blockquote>
<p>慑其魄，神鬼服。</p>
</blockquote>
<p>让人的精神恐惧，任何人都会屈服。</p>
<p>人的精神一倒，其意志和雄心便会土崩瓦解。再刚强和难制的人，也抵御不了精神的打击；抓住了这一攻击点，也就是掌握了人的最薄弱环节。制造精神紧张首先要制造恐怖气氛，在人人自危的环境下，人们总是本能地加倍小心。了解别人的内心想法，也是必不可少的，如果把别人的潜在意图都一一点明，谁都会心惊肉跳，不敢妄动了。</p>
<blockquote>
<p>君子难不丧志，释其难改之。</p>
</blockquote>
<p>君子受难不会丧失志向，帮助他解除苦难却能改变他。</p>
<p>君子的志向不会因环境的残酷而动摇，这是令人崇敬的。打击和迫害只能成全君子的美名，这也是君子甘心承受的。君子最难消受他人之恩，在他们难时伸出援助之手，君子就摆脱不掉报恩的“阴影”了，这是征服他们的上上之策，不管出于什么用心，君子在情感的亏欠中总会有所改变、不琢磨人的心理，就不能征服人心</p>
<blockquote>
<p>小人贵则气盛，举其污泄之。</p>
</blockquote>
<p>小人得势就气焰嚣张，检举他的罪行就会使他泄气。</p>
<p>小人身上的污迹肯定是很多的，没有劣行也就称不上小人了。收冶小人不是件易事，但只要握住他的罪行铁证，色厉内荏的小人还是会惧怕的。小人的能量不可轻视，他们的狡辩和抵赖之术，化黑为白之功，常让人反遭暗算，打虎不成。这就揭示人们不要过于相信铁证，更要配以智慧和时机，这也许才是最重要的。</p>
<blockquote>
<p>穷堪固守，凶危不待也。</p>
</blockquote>
<p>贫穷可以让人坚守节操，而凶险和危难之时就不容等待了。</p>
<p>陷于贫穷境地的人们，只要不贪图富贵，甘于清贫，保持本色仍是不难；可在凶险来临之际，面对危难之时，要化解这一切，就绝非单凭骨气便能做到。人被逼到身不由己的时候，他的选择往往是违心的；尽管他是多么的不情愿，但已是非情感和对间所能决定的了。人的改变有时是不可预知的，在重压下，改变往往是注定的</p>
<blockquote>
<p>察伪言真，恶不敢为。</p>
</blockquote>
<p>察觉出伪装说出真意，恶人也不敢做恶了。</p>
<p>识敌在先，才能防范在后，打压敌人的心志。任何人只要他的真实用心被人识破，他就构不成大大的威胁。做坏事的人不会轻易暴露自己，他们把希望大多寄托在出其不意之上，如果能让这个幻想破灭，他们的斗志便大为削减。把敌人制服在未动之时，把恶人的歹心直指出来，是赢取主动和胜利的智者谋略，付出的代价是最少的。</p>
<blockquote>
<p>神褫之伤，愈明愈痛。</p>
</blockquote>
<p>心神被剥夺的创伤，越聪明的人就越会感到痛苦。</p>
<p>受制于人有时不仅是行为上的，也是精神上的，后者的痛苦尤为巨大，对聪明者更是如此。把自己变成行尸走肉，多是出于无知和无奈，而成为他人的玩偶，任其摆弄，且自知甚深，这才是最难忍受的。作为驭人和惩罚的手段，这个招法无疑是狠辣和残酷的，同样，作为人生中的一段经历，它给人的记忆和教训也是难忘和深刻的。</p>
<blockquote>
<p>苛法无功，情柔堪毕焉。</p>
</blockquote>
<p>严苛的刑法不能达到目的，情感安抚可以完成此事。</p>
<p>夺人心志离不开严刑峻法，但一味依赖它，也是无法让所有人都服帖的。同时，它的负作用十分强烈，表面上的安静终会被深处的愤恨所冲破。动之以情，用温和的手段征服人心，这是智者的首选之术，它能化解最因执者的戾气，而让所有人都乐于接受。只要能达到心愿，不讲方法可以，但这却决不是远虑者所为了</p>
<blockquote>
<p>治人者必人治也，治非善哉。</p>
</blockquote>
<p>惩处他人的人一定会为他人所惩处，惩处并不是好的方法。</p>
<p>一味整治别人的人，自食其果的事屡见不鲜；和天下人结怨，自己便没有了退路。让人屈服不如让人敬服，用大棒建立的威严一日便可崩塌。真正的智者不会把心思和精力全用在征服别人之上，他们更不会相信“征服”这回事。他们看似毫无用心的平淡交接，毫无所指，却能使任何人都心生感动，向之靠拢。这种凝聚力是无形的，也是最牢固的，它使所用的机巧都不攻白破。</p>
<blockquote>
<p>屈人者亦人屈也，屈弗耻矣。</p>
</blockquote>
<p>屈服于他人的人也会让他人屈服，屈服并不是耻辱的事。</p>
<p>任何人都有他的低谷，一时的屈服决定不了他的终生。不把屈服于人为耻，才可重振雄心，打好翻身仗：不在低谷中沉沦，才能接受教训，不以彻底的失败收场。最高尚的人也阻止不了他人做卑鄙的事，这是不以人的意志为转移的，只要保持自己内心的纯净，任何屈辱都无法让人失去对未来的信心。在屈服中乐观向上，就不是真正的屈服了。</p>
<blockquote>
<p>知世而后存焉。</p>
</blockquote>
<p>了解社会之后才能生存。</p>
<p>在社会上立足，认识不到社会的本质是不可想象的。社会是复杂的，也是残酷的，如果为其表面的现象所迷惑，就会处处受制，时时碰壁，其结果自是生存维艰，无以为继。对社会抱有警醒之心是生存的前提，对人世间怀有警戒之心是生存的根基，若要发展，就更离不开趋利避害，警觉当先了。对社会的人和事需有深刻的认识，对生存环境的无知和陌生，就无法适应和防范各种灾难</p>
<blockquote>
<p>识人而后幸焉。</p>
</blockquote>
<p>能鉴别人的优劣之后才有幸运。</p>
<p>人的善恶无法从外表上看出，也不可能由人当面告知，不能分辨好人坏人，所有的防线便形同虚设，注定要倒霉的。生活在人的世界上，人有时是最危险的“动物”，对人失去观察力和鉴别力，是最可怕的失败，它的后患是无穷的。细节是判定人优劣的可靠依据，关键时候是验证人的品质的最佳时期，把人性吃透，恶事便会远去。</p>
<blockquote>
<p>天警人者，示以灾也。</p>
</blockquote>
<p>苍天对人的警告，表现为天灾。</p>
<p>古人“天人感应”的学说，把自然灾害视为苍天的告警，从这个意义上说，人们也不该忽视警告的作用，在事情恶化之前，多做自我反思，吸取教训，以免错上加错，执迷不悟。事情都有它的内在联系，孤立地看人对事就会失之片面，存有误差：如果把矛盾消化在初始阶段，解决在萌芽状态，大的灾难就可避免了。</p>
<blockquote>
<p>神警人者，示以祸也。</p>
</blockquote>
<p>神灵对人的警告，表现为人祸。</p>
<p>面对突来的祸事，人们在应对的同时，最该深刻反省自己的行为。事情总有它的因果，不找出祸事发生的轨迹，更大的灾难便在后头。做恶事的人轻视“神灵”，迷信权势和暴力，这不仅与人民为敌，也违背了天理，是不会善终的。对“神灵”的敬畏，不是智者的软弱，而是他们最富有智慧之处；保有足够的谨慎之心，才会事事如意。</p>
<blockquote>
<p>人警人者，示以怨也。</p>
</blockquote>
<p>人们对他人的警告，表现为怨恨。</p>
<p>受到人们的怨恨，这个人就危机重重了，置人们的责难而不理不眯，怨恨只能增长；在仇视的目光下，调整自己的心态和行止是必须的。人没有无缘无故的恨意，认识到事态的严重性，才可弥补裂痕，防止事情进一步恶化。即使是坚持正义，一切缘于误会，及时疏导人们的怨气也不是可有可无。人的激行为，积怨大多是其一大主因。</p>
<blockquote>
<p>畏惩勿诫，语不足矣。</p>
</blockquote>
<p>害怕惩处的人不要告诫他，言语不能让他改过。</p>
<p>劝人改过要区分对象，那些不明是非的死硬分子，苦口婆心对他们无有效力，打击惩处便是惟一的选择。不撞南墙不回头的人，让他们吃点苦头是必要的，善意的言辞他们可以置若罔闻，但现实的伤痛却能把他们唤醒，片面强调教育作用解决不了所有问题，方法有所变通，手段多样，只要行之有效，尽可以一用。</p>
<blockquote>
<p>存悔莫罚，责于心乎。</p>
</blockquote>
<p>有了悔意的人不要体罚他，责罚在心是最痛苦的。</p>
<p>肉体的惩罚只是皮肉之痛，而良心的谴责让人一世难安。在追悔莫及的时候，人才会想到他人的好处和反省自己，在痛苦中沉思，远比棒打能让人成熟起来。泄愤的方式有多种，在他人悔恨之时不动声色，温情不惩，更会使人心有愧疚，痛不欲生。从正面的意义讲，对悔过之人不穷追猛打、揪住不放，其震慑力和警醒力是最大的。</p>
<blockquote>
<p>势强自威，人弱自惭耳。</p>
</blockquote>
<p>势力强大自然有威严，弱者会自感羞愧。</p>
<p>劝诫别人必须自有身价，让人重视不能仅凭言辞。实力的作用在任何时候都不可替代，实力强大的本身就是最好的警戒。智者有时无法战胜愚蠢的强者，强者的荒谬有时可以被人推崇为真理，这都是强势的作用使然。身份低微的人在世俗社会黯然无声，真知灼见淹没在人们的趋炎附势上，只有大智慧的人，才能目光向下，从社会最底层的小人物身上，吸取营养</p>
<blockquote>
<p>变不可测，小戒大安也。</p>
</blockquote>
<p>变乱是难以测度的，小事上谨慎才能确保平安。</p>
<p>小处放纵往往酿成大祸，在这方面绝不可任性而为。听从劝诫重在不分事情大小，都记取在心，认真改过。在自重上坚持始终，就不会有疏漏的时刻了。居安思危是回避凶险的要件，在小事上看出隐患的存在，便能把大局安定。对自己不负责任的人，是没有警戒之心的；对他人劝告不以为然的人，谁也保护不了他。</p>
<blockquote>
<p>意可曲之，言虚实利也。</p>
</blockquote>
<p>意图可以曲解，说假话为了获取实际的利益。</p>
<p>在特定的场合和时期，善意的谎言是不该被指责的。为了使人猛醒，从迷途中解脱出来，故意曲解他人的意图，牵强附会，以达到劝戒的目的，也是一种智谋。再好的忠言也有不被接受的时候，适时变换一个方法，加上一个全新的角度，效果就会大不一样了。正面猛攻的人不一定会得手，学会迂回之术，胜率就大增了。</p>
<h2 id="诛心第十"><a href="#诛心第十" class="headerlink" title="诛心第十"></a>诛心第十</h2><ul>
<li>对敌人肉体伤害，不如摧残他的灵魂。</li>
<li>没有底牌可打的对手是脆弱的。</li>
<li>让人不能心愿得偿，心灰意冷是伤害的至毒招法。</li>
<li>虚荣心只会让弱者自卑，让强敌就范。</li>
<li>以名誉地位做诱饵，不仅廉价有效，且能让人死而无怨。</li>
</ul>
<blockquote>
<p>诛人者死，诛心者生。</p>
</blockquote>
<p>杀死人的人有死罪，杀死人心的人却能活命。</p>
<p>公开的暴行和罪恶，可以得到法律的严惩，但那些隐形伤害，法律乱奈何不了它了。摧残人的心灵，在精神上打击迫害，是不少人玩弄的整人招去，这既逃脱了罪名，也最能将人置于死地。肉体的创伤可以愈合，而精神的折磨却没有尽时，一个人如果到了生不如死的境地，无疑是最悲惨的。</p>
<blockquote>
<p>征国易，征心难焉。</p>
</blockquote>
<p>征服国家容易，征服人心困难。</p>
<p>建立在武力之上的统治，是不会长久的。武力可以打压反抗，但无法让人心顺服：征服人心不能依靠武力，一味讨好百姓也不是绝佳之策，只要在百姓最关心的问题上保持公正，予民实惠，形象便可很快确立。百姓的要求向来无多，他们要求的内容也并不复杂苛刻，统治者若能仁慈一点，克制一点，就不该以民为敌了。</p>
<blockquote>
<p>不知其思，无以讨之。</p>
</blockquote>
<p>不知晓他人的内心想法，就没有办法治理他。</p>
<p>一个人的内心想法决定着他的行为举止，这个秘密不侦知，治理他就无的放矢，成效甚微。人的内心千变万化，但还是有迹可寻的，只要掌握住人的思想脉络，他便毫无秘密可言，制服他便会毫不费力。表面的东西是一定要认真识别的，如果为其伪装所迷惑，判断就会有误，方法也舍失当，所有的努力都会变得徒劳。</p>
<blockquote>
<p>不知其情，无以降之。</p>
</blockquote>
<p>不了解他人的真实状况，就不能及时降服他。</p>
<p>把对手的底细摸透，了如指掌，始终是战胜对手的一个重要前提。一个人的实际状况是不会轻易显现的，这需要耐心细致的调查和取证才能搞清，在此不下大工夫是不行的，没有捷径可走。没有底牌可打的对手是最脆弱的，在他们的要害处轻轻一击，也就致命了。清楚他们的虚实，便会掌握他们的动态，抢在他们之前出手，被动的就不会是自己。</p>
<blockquote>
<p>其欲弗逞，其人殆矣。</p>
</blockquote>
<p>人的欲望得不到满足，这个人就危险了。</p>
<p>人的欲望是多样的，也是十分强烈的，欲望失落的人，往往会丧失斗志，对一切都心灰意冷，不能自拔 破坏别人的好事，让人不能心愿得偿，这是伤害人的至毒招去，它足以把人的意志全盘摧毁，沦为行尸走肉 欲望愈强的人，愈容易受到这种暗算，受伤害的程度也愈深。不为欲望所左右，才能更好地保护自己。</p>
<blockquote>
<p>敌强不可言强，避其强也。</p>
</blockquote>
<p>在强大的敌人面前不可以说强硬的话，要回避它强劲的势头。</p>
<p>鸡蛋碰石头只能毁灭自己，不知道回避凶险便一事无成。人的勇气和雄心并不能取代实力的地位，弱者在强者面前撒泼斗狠，可笑又可悲的还是弱者、避开他人的强悍，以柔克刚，是以弱胜强的法则；不让他人的优势发挥出来，力量对比便失去了意义。在智计上乡下功夫，在言辞上不刺激强敌，双方才会维持均衡；</p>
<blockquote>
<p>敌弱不可言弱，攻其弱也。</p>
</blockquote>
<p>在弱小的敌人面前不可以说软弱的话，要攻击他虚弱的地方。</p>
<p>再弱小的敌人也不会自动屈服的，如果打击不到他的痛处，他很可能套成为一个难缠的对手，，对弱者不能示弱，弱者更有理由让人同情；极言恫吓尽管无礼，但只要说出了弱者的要害，摆明了可能出现的严重后果，弱者仍是可以不战而胜的。无人以弱者为荣，弱者也不该以弱为耻，虚荣心只会让弱者自卑，在强敌面前束手就范。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在一读书公众号的推荐下陆陆续续看完了这本『奇书』，里面的套路不难，但怎么灵活掌握，就需要时间了。当然，还是少一点套路，多一些真诚&lt;/p&gt;
    
    </summary>
    
      <category term="Reading" scheme="http://wdxtub.com/categories/Reading/"/>
    
    
      <category term="古文" scheme="http://wdxtub.com/tags/%E5%8F%A4%E6%96%87/"/>
    
      <category term="处世" scheme="http://wdxtub.com/tags/%E5%A4%84%E4%B8%96/"/>
    
  </entry>
  
  <entry>
    <title>【小土刀玩摄影】γ 从镜头到构图</title>
    <link href="http://wdxtub.com/2016/11/16/alpha-7-tour-3/"/>
    <id>http://wdxtub.com/2016/11/16/alpha-7-tour-3/</id>
    <published>2016-11-15T23:05:37.000Z</published>
    <updated>2016-11-16T15:33:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>前面我们已经了解了相机的基本操作和功能，现在是时候学一些摄影基础了，有了这些基本知识，就可以拿起相机开始拍拍拍了。</p>
<a id="more"></a>
<hr>
<p>更新历史</p>
<ul>
<li>2016.11.16: 完成初稿</li>
</ul>
<p>更新计划</p>
<ul>
<li>简单配图</li>
</ul>
<h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p>按下快门前应该懂的东西，当然，全自动傻瓜相机也不是不行。</p>
<h3 id="镜头"><a href="#镜头" class="headerlink" title="镜头"></a>镜头</h3><ul>
<li>焦距是最重要的镜头指标之一，表示镜头的光学中心到相机图像传感器的距离，单位是毫米</li>
<li>焦距决定了相机“看”到的物体大小以及镜头视角的广度</li>
<li>焦距越小，镜头视角越广；焦距越大，相机取景框中的物体越大</li>
<li>焦距和透视失真效果有密切关系，焦距越小，镜头前近物和远物呈现出的距离越大</li>
<li>微距镜头可以在极短的对焦距离上合焦</li>
</ul>
<p>根据镜头焦距的不同，我们把镜头分为几大类：</p>
<ul>
<li>鱼眼镜头：8-15mm，视角接近或等于 180 度，照片会出现明显的弯曲</li>
<li>广角镜头：14-35mm，视角从 52 到 82 度，常用于拍摄室内、风景、活动报道</li>
<li>标准镜头：35-60mm，约等于相机取景框的对角线长度，拍摄效果与人眼视觉效果十分相似</li>
<li>人像镜头：60-135mm，视野相对较窄，因为高感光度和软成像，能够更好地虚化背景以及突出主体，常用于拍摄（人像）特写</li>
<li>长焦镜头：135-800mm，视角小，会压缩空间纵身距离和夸大后景，常用于拍摄远距离物体</li>
</ul>
<h3 id="曝光"><a href="#曝光" class="headerlink" title="曝光"></a>曝光</h3><p>曝光指的是一定时间内到达相机的传感器的光的量，取决于『光圈』『快门速度』及『ISO』，根据参数的不同，可能会出现曝光不足（太暗）、曝光过度（太亮）和曝光正常。</p>
<p>『光圈』是以分数的形式来计算的，一般记为 <code>F2</code>, <code>F4</code> 等等，F 常常会被省略，并且 F 后面的数字（光圈值）是分母。也就是说，光圈值越大，光圈越小；反之，光圈值越小，光圈越大。一个从大到小的光圈序列可能是：<code>F1.2 F1.4 F1.8 F2.0 F2.8 F5.6 F10 F16</code>。</p>
<blockquote>
<p>『景深(DOF)』是指出物体看起来对焦清晰的区域，通常使用『调焦圈』来进行调整。景深取决于光圈的大小：光圈越大，景深越小，背景越模糊；反之，光圈越小，景深越大，清晰的区域更大。一般来说，拍摄建筑物和风景时，增加景深，保证清晰和纵深感；拍摄人像时，减少景深，虚化背景突出主体。</p>
</blockquote>
<p>『快门速度』则是快门打开的时间，在这个时间里光线得以到达图像传感器，所以快门速度越快，到达图像传感器的光越少，图像越暗；反之，快门速度越慢，到达图像传感器的光线越多，图像越亮。我们常说的安全快门，就是指焦距的倒数，比方说如果焦距是 70mm，那么快门速度至少要高于 1/70，才更能保证图片不因抖动而模糊。</p>
<blockquote>
<p>一般来说，在捕捉正在运动的物体时，我们需要尽可能提高快门速度来保证成像不模糊。但是也有特殊情况，比方说拍摄溪流和瀑布，通常会用较长的曝光时间来营造『水流』的效果。长时间曝光的时候，一定要注意稳定，最好使用牢固的三脚架。</p>
</blockquote>
<p>『ISO』越高，光传感器就越敏感，在其他条件相同的情况下，图片就越亮。通常情况下，ISO 小于 400 是比较好的选择，如果 ISO 太高，图像的噪点会非常严重。</p>
<p>而具体的曝光情况，则是由这三个因素共同决定的，所以如何去寻找最合适的组合就成了我们需要掌握的技能。光线充足的时候，寻找合适的曝光比较简单，但是在光线不好的时候，就需要一些技巧了。</p>
<h3 id="白平衡"><a href="#白平衡" class="headerlink" title="白平衡"></a>白平衡</h3><p>白平衡是让颜色『正常』的过程。这就需要了解色温，单位是开尔文(K)，参见下图：</p>
<p><img src="/images/14792939042853.jpg" alt=""></p>
<p>我们在设置相机白平衡的时候，是在设置光源的色温，也就是说，我们设置为多云，那么相机会认为此时是偏蓝，会往偏红的方向偏。一般来说，我们用人的肤色来作为调整白平衡的依据。但是有的时候，『正确』的白平衡值并没有办法表达摄影师的感觉，具体选用什么白平衡设置，就需要自己摸索了。</p>
<p>而用 RAW 格式保存的照片，因为保留了更多传感器原始的数据，所以后期调整的范围更大，一般我们都会用 RAW 格式。</p>
<h2 id="光"><a href="#光" class="headerlink" title="光"></a>光</h2><ul>
<li>灯光在摄影中非常重要</li>
<li>为光源定位和使用光源一样重要</li>
<li>光照的表面区域越大，光就越柔和</li>
<li>常见设备有：反光罩(R)、柔光箱(S)、雷达罩(B)</li>
</ul>
<p>每种光有不同的作用，比如：主光、补光、边缘光、背景光</p>
<ul>
<li>主光：创建主光效果</li>
<li>补光：补充因为主光造成的硬阴影和软阴影</li>
<li>边缘光：从后面照亮模特，突出整个或者部分轮廓，突出主题</li>
<li>背景光：将人物与背景分离开，创建更加三维的外形，放在主体后面，指向背景</li>
</ul>
<h2 id="构图"><a href="#构图" class="headerlink" title="构图"></a>构图</h2><p>基础原则</p>
<ul>
<li>新手须知的重要原则：水平对齐，照片不能歪</li>
<li>三分构图：把重要物体放在线条交叉点上</li>
<li>边缘整洁：照片边缘不要有什么杂物，可以通过缩放裁剪移动来控制</li>
</ul>
<p>引导眼睛</p>
<ul>
<li>人的眼睛会被照片中的线条所吸引<ul>
<li>水平线可以表现平静、稳定画面</li>
<li>垂直线条能让构图有前度，迫使观众从下往上研究构图</li>
<li>汇聚线可以创造角度并增加深度感</li>
<li>对角线使照片显得复杂和动态，引导观看者沿某一方向观察</li>
</ul>
</li>
<li>照片中有移动的物体也能引导视线，会跟随其运动路径</li>
<li>人的眼睛也是一个引导视线的方式，可以自动引导观看者的视线，在眼睛前面保留空白</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>看了一圈知乎，感觉大部分都是答主晒图，拍照这个东西，还是比较主观玄学的，基础的东西固然重要，更多的是需要多拍拍拍。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="http://www.thegreatphotoapp.com/" target="_blank" rel="external">The Great Photo App</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前面我们已经了解了相机的基本操作和功能，现在是时候学一些摄影基础了，有了这些基本知识，就可以拿起相机开始拍拍拍了。&lt;/p&gt;
    
    </summary>
    
      <category term="Life" scheme="http://wdxtub.com/categories/Life/"/>
    
    
      <category term="基础" scheme="http://wdxtub.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="拍摄" scheme="http://wdxtub.com/tags/%E6%8B%8D%E6%91%84/"/>
    
  </entry>
  
  <entry>
    <title>Javascript 编码风格指南</title>
    <link href="http://wdxtub.com/2016/11/14/javascript-style-guide/"/>
    <id>http://wdxtub.com/2016/11/14/javascript-style-guide/</id>
    <published>2016-11-14T11:26:27.000Z</published>
    <updated>2016-11-14T11:28:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>Javascript 作为一个非常灵活的脚本语言，光是比较流行的编码风格指南就有好几种。有 Google, NPM, Node.js, jQuery, Airbnb 等等。本文以 Airbnb 风格为基础来介绍 js 的编码风格，对原文的逻辑进行了梳理。</p>
<a id="more"></a>
<hr>
<p>更新历史</p>
<ul>
<li>2016.11.14: 初稿完成</li>
</ul>
<h2 id="格式规范"><a href="#格式规范" class="headerlink" title="格式规范"></a>格式规范</h2><ul>
<li><strong>命名规则：规范</strong><ul>
<li>避免单字母命名。命名应具备描述性</li>
<li>使用驼峰式命名对象、函数和实例（首字母小写）</li>
<li>使用帕斯卡式命名构造函数或类（首字母大写）</li>
<li>使用下划线 <code>_</code> 开头命名私有属性</li>
<li>别保存 <code>this</code> 的引用。使用箭头函数或 <code>Function#bind</code></li>
<li>如果你的文件只输出一个类，那你的文件名必须和类名完全保持一致</li>
<li>当你导出默认的函数时使用驼峰式命名。你的文件名必须和函数名完全保持一致</li>
<li>当你导出单例、函数库、空对象时使用帕斯卡式命名</li>
</ul>
</li>
<li><strong>代码块：规范</strong><ul>
<li>使用大括号包裹所有的多行代码块</li>
<li>如果通过 <code>if</code> 和 <code>else</code> 使用多行代码块，把 <code>else</code> 放在 <code>if</code> 代码块关闭括号的同一行</li>
</ul>
</li>
<li><strong>注释：规范</strong><ul>
<li>使用 <code>/** ... */</code> 作为多行注释。包含描述、指定所有参数和返回值的类型和值</li>
<li>使用 <code>//</code> 作为单行注释。在评论对象上面另起一行使用单行注释。在注释前插入空行</li>
<li>给注释增加 <code>FIXME</code> 或 <code>TODO</code> 的前缀可以帮助其他开发者快速了解这是一个需要复查的问题，或是给需要实现的功能提供一个解决方式。这将有别于常见的注释，因为它们是可操作的。使用 <code>FIXME -- need to figure this out</code> 或者 <code>TODO -- need to implement</code></li>
</ul>
</li>
<li><strong>空白：这个部分见仁见智保持一致即可</strong><ul>
<li>使用 2 个空格作为缩进</li>
<li>在花括号前放一个空格</li>
<li>在控制语句(<code>if</code>、<code>while</code>)等的小括号前放一个空格。在函数调用及声明中，不在函数的参数列表前加空格</li>
<li>使用空格把运算符隔开</li>
<li>在文件末尾插入一个空行</li>
<li>在使用长方法链时进行缩进。使用前面的点 <code>.</code> 强调这是方法调用而不是新语句</li>
<li>在块末和新语句前插入空行</li>
</ul>
</li>
<li><strong>逗号：规范</strong><ul>
<li>行首逗号：不需要</li>
<li>增加结尾的逗号: 需要。因为这会让 git diffs 更干净</li>
</ul>
</li>
<li><strong>分号：规范</strong><ul>
<li>使用分号，防止在极端情况下被合并   </li>
</ul>
</li>
</ul>
<h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><ul>
<li><strong>类型：核心思想是避免复杂类型的深浅复制</strong><ul>
<li>直接存取基本类型：字符串、数值、布尔类型、<code>null</code>、<code>undefined</code></li>
<li>通过引用的方式存取复杂类型：对象、数组、函数</li>
</ul>
</li>
<li><strong>引用：核心思想是最小化引用的影响范围，不要轻易变化</strong><ul>
<li>对所有的引用使用 <code>const</code>，不要使用 <code>var</code>。这能确保无法对引用重新赋值，避免出现 bug，减少理解成本</li>
<li>如果一定需要可变动的引用，使用 <code>let</code> 而不是 <code>var</code>。因为 <code>let</code> 是块级作用域，而 <code>var</code> 是函数作用域</li>
<li><code>let</code> 和 <code>const</code> 都是块级作用域</li>
</ul>
</li>
<li><strong>变量：</strong><ul>
<li>一直使用 <code>const</code> 来声明变量，如果不这样做就会产生全局变量。我们需要避免全局命名空间的污染</li>
<li>将所有的 <code>const</code> 和 <code>let</code> 分组，当你需要把已赋值变量赋值给未赋值变量时非常有用</li>
<li>在你需要的地方给变量赋值，但请把它们放在一个合理的位置。因为 <code>let</code> 和 <code>const</code> 是块级作用域而不是函数作用域</li>
</ul>
</li>
<li><strong>字符串：增加可读性</strong><ul>
<li>字符串使用单引号 <code>&#39;&#39;</code></li>
<li>字符串超过 80 个字节应该使用字符串连接号换行</li>
<li>过度使用字串连接符号可能会对性能造成影响</li>
<li>程序化生成字符串时，使用模板字符串代替字符串连接。因为模板字符串更为简洁，更具可读性</li>
</ul>
</li>
<li><strong>比较运算符 &amp; 等号：规范与代码可读性</strong><ul>
<li>优先使用 <code>===</code> 和 <code>!==</code> 而不是 <code>==</code> 和 <code>!=</code></li>
<li>条件表达式例如 <code>if</code> 语句通过抽象方法 <code>ToBoolean</code> 强制计算它们的表达式并且总是遵守下面的规则<ul>
<li><code>对象</code> 被计算为 <code>true</code></li>
<li><code>Undefined</code> 被计算为 <code>false</code></li>
<li><code>Null</code> 被计算为 <code>false</code></li>
<li><code>布尔值</code> 被计算为 <code>布尔的值</code></li>
<li><code>数字</code> 如果是 <code>+0</code>、<code>-0</code>、或 <code>NaN</code> 被计算为 <code>false</code>, 否则为 <code>true</code></li>
<li><code>字符串</code> 如果是空字符串 <code>&#39;&#39;</code> 被计算为 <code>false</code>，否则为 <code>true</code></li>
</ul>
</li>
<li>使用简写</li>
</ul>
</li>
<li><strong>类型转换：</strong><ul>
<li>在语句开始时执行类型转换</li>
<li>字符串不要用 <code>this.score + &#39;&#39;</code>，而是 <code>String(this.score)</code></li>
<li>对数字使用 <code>parseInt</code> 转换，并带上类型转换的基数</li>
<li>如果因为某些原因 parseInt 成为你所做的事的瓶颈而需要使用位操作解决<a href="http://jsperf.com/coercion-vs-casting/3" target="_blank" rel="external">性能问题</a>时，留个注释说清楚原因和你的目的</li>
<li>小心使用位操作运算符。数字会被当成 64 位值，但是位操作运算符总是返回 32 位的整数（<a href="http://es5.github.io/#x11.7" target="_blank" rel="external">参考</a>）。位操作处理大于 32 位的整数值时还会导致意料之外的行为。<a href="https://github.com/airbnb/javascript/issues/109" target="_blank" rel="external">关于这个问题的讨论</a>。最大的 32 位整数是 2,147,483,647</li>
<li>使用 <code>Boolean()</code> 或 <code>!!</code> 来进行布尔值的转换</li>
</ul>
</li>
<li><strong>存取器：一致性与规范</strong><ul>
<li>属性的存取函数不是必须的</li>
<li>如果你需要存取函数时使用 <code>getVal()</code> 和 <code>setVal(&#39;hello&#39;)</code></li>
<li>如果属性是布尔值，使用 <code>isVal()</code> 或 <code>hasVal()</code></li>
<li>创建 <code>get()</code> 和 <code>set()</code> 函数是可以的，但要保持一致</li>
</ul>
</li>
<li><strong>jQuery：明确指出使用 jQuery 的代码，优化性能</strong><ul>
<li>使用 <code>$</code> 作为存储 jQuery 对象的变量名前缀</li>
<li>缓存 jQuery 查询</li>
<li>对 DOM 查询使用层叠 <code>$(&#39;.sidebar ul&#39;)</code> 或 父元素 &gt; 子元素 <code>$(&#39;.sidebar &gt; ul&#39;)</code></li>
<li>对有作用域的 jQuery 对象查询使用 <code>find</code></li>
</ul>
</li>
</ul>
<h2 id="复杂结构"><a href="#复杂结构" class="headerlink" title="复杂结构"></a>复杂结构</h2><ul>
<li><strong>对象：考虑兼容性与可读性</strong><ul>
<li>使用字面值创造对象，如 <code>const item = {};</code> 而非 <code>const item = new Object();</code></li>
<li>浏览器环境中执行的代码不要使用 <a href="http://es5.github.io/#x7.6.1" target="_blank" rel="external">保留字</a> 作为键值（比如 <code>private</code> 这类就不要用），可以使用同义词替换所需要使用的保留字，比如说把 <code>class</code> 换成 <code>type</code></li>
<li>创建有动态属性名的对象时，使用可被计算的属性名称，这样就可以在一个地方定义所有的对象属性</li>
<li>使用对象方法和对象属性值的简写</li>
<li>在对象属性声明前把简写的属性分组，这样能清楚地看出哪些属性使用了简写</li>
</ul>
</li>
<li><strong>数组：可读性与操作简化</strong><ul>
<li>使用字面值创建数组，如 <code>const items = [];</code> 而非 <code>const items = new Array();</code></li>
<li>向数组添加元素时使用 <code>Arrary#push</code> 替代直接赋值</li>
<li>使用拓展运算符 <code>...</code> 复制数组，如 <code>const itemsCopy = [...items]</code></li>
<li>使用 <code>Array#from</code> 把一个类数组对象转换成数组</li>
</ul>
</li>
<li><strong>解构：减少操作开销</strong><ul>
<li>使用解构存取和使用多属性对象，这样能减少临时引用属性</li>
<li>对数组使用解构赋值</li>
<li>需要回传多个值时，使用对象解构，而不是数组解构。因为增加属性或者改变排序不会改变调用时的位置</li>
</ul>
</li>
<li><strong>函数：性能与可读性</strong><ul>
<li>使用函数声明代替函数表达式，如 <code>function foo() {}</code></li>
<li>永远不要在一个非函数代码块（if、while 等）中声明一个函数，把那个函数赋给一个变量。浏览器允许你这么做，但它们的解析表现不一致</li>
<li>ECMA-262 把 <code>block</code> 定义为一组语句。函数声明不是语句</li>
<li>永远不要把参数命名为 <code>arguments</code>。这将取代原来函数作用域内的 <code>arguments</code> 对象</li>
<li>不要使用 <code>arguments</code>。可以选择 rest 语法 <code>...</code> 替代。因为使用 <code>...</code> 能明确你要传入的参数。另外 rest 参数是一个真正的数组，而 <code>arguments</code> 是一个类数组</li>
<li>直接给函数的参数指定默认值，不要使用一个变化的函数参数</li>
<li>直接给函数参数赋值时需要避免副作用</li>
</ul>
</li>
<li><strong>箭头函数：简化代码，加强可读性</strong> <ul>
<li>当你必须使用函数表达式（或传递一个匿名函数）时，使用箭头函数符号</li>
<li>如果一个函数适合用一行写出并且只有一个参数，那就把花括号、圆括号和 return 都省略掉。如果不是，那就不要省略。如 <code>[1, 2, 3].map(x =&gt; x * x)</code></li>
</ul>
</li>
<li><strong>构造器：维持一致性，链式调用</strong><ul>
<li>总是使用 <code>class</code>，避免直接操作 <code>prototype</code>。因为 <code>class</code> 语法更有可读性</li>
<li>使用 <code>extends</code> 继承，因为 <code>extends</code> 是一个内建的原型继承方法并且不会破坏 <code>instanceof</code></li>
<li>方法可以返回 <code>this</code> 来帮助链式调用</li>
<li>可以写一个自定义的 <code>toString()</code> 方法，但要确保它能正常运行并且不会引起副作用</li>
</ul>
</li>
<li><strong>模块：确保模块化，符合规范</strong><ul>
<li>总是使用模组(<code>import</code>/<code>export</code>)而不是其他非标准模块系统。你可以编译为你喜欢的模块系统</li>
<li>不要使用通配符 <code>import</code>，这样能确保你只有一个默认 <code>export</code></li>
<li>不要从 <code>import</code> 中直接 <code>export</code>。虽然一行代码简洁明了，但让 import 和 export 各司其职让事情能保持一致</li>
</ul>
</li>
<li><strong>迭代器：往函数式编程上靠，减少副作用</strong><ul>
<li>不要使用 <code>iterators</code>。使用高阶函数例如 <code>map()</code> 和 <code>reduce()</code> 替代 <code>for-of</code>。因为处理纯函数的回调值更易读，这比它带来的副作用更重要</li>
</ul>
</li>
<li><strong>属性：区分是否通过变量来访问</strong><ul>
<li>使用 <code>.</code> 来访问对象的属性</li>
<li>当通过变量访问属性时使用中括号 <code>[]</code></li>
</ul>
</li>
<li><strong>事件：灵活性，降低判断成本</strong><ul>
<li>当给事件附加数据时（无论是 DOM 事件还是私有事件），传入一个哈希而不是原始值。这样可以让后面的贡献者增加更多数据到事件数据而无需找出并更新事件的每一个处理器</li>
</ul>
</li>
</ul>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://lzw.me/a/javascript-coding-style-reference.html/comment-page-1" target="_blank" rel="external">JavaScript 流行代码风格参考指南</a></li>
<li><a href="https://github.com/yuche/javascript" target="_blank" rel="external">Airbnb JavaScript 编码规范</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Javascript 作为一个非常灵活的脚本语言，光是比较流行的编码风格指南就有好几种。有 Google, NPM, Node.js, jQuery, Airbnb 等等。本文以 Airbnb 风格为基础来介绍 js 的编码风格，对原文的逻辑进行了梳理。&lt;/p&gt;
    
    </summary>
    
      <category term="Technique" scheme="http://wdxtub.com/categories/Technique/"/>
    
    
      <category term="风格" scheme="http://wdxtub.com/tags/%E9%A3%8E%E6%A0%BC/"/>
    
      <category term="Javascript" scheme="http://wdxtub.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>第二十二周 - 在梅边</title>
    <link href="http://wdxtub.com/2016/11/12/zai-mei-bian/"/>
    <id>http://wdxtub.com/2016/11/12/zai-mei-bian/</id>
    <published>2016-11-12T03:21:32.000Z</published>
    <updated>2016-11-12T06:16:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>春水望断，夏花宿妆残。谁闻秋蝉，谁知冬来。</p>
<a id="more"></a>
<hr>
<p>天气忽然转冷，总算有了些许冬天的意思。世界各地这周可是热火朝天发生着轰轰烈烈的大改变，从长征五号到歼20再到川普成为美国总统最后到双十一，朋友圈也是被各种刷屏。不过归根结底还是要努力把日子过好，用胡适的话说就是『多研究些问题，少谈些主义』。</p>
<p>本周跑步两次，值得说说的是第二次，最近因为路线调整，总距离差不多六公里，之前跑起来到最后还是有点辛苦的，可能是因为心情好，这次跑起来的感觉完全不一样，这个故事告诉我们，还是要每天开开心心的，不然跑起来都没劲儿。背后的隐含意思其实是，生活中总是有很多不如意的地方，那就要多试试看能不能扭转成如意，如果连一点努力都不做就自暴自弃，是不是自暴自弃得太廉价了一点。</p>
<p>一直在做的其中一个项目进入中后期，随着各个模块的完成，因为涉及的数据非常重要，如何保证准确性和安全性就成了最重要的工作内容，这需要拿到各种数据进行交叉验证，如何把这个做好，其实也是很有意思的。我要检讨自己之前的工作态度，看起来简单枯燥的工作背后其实也有门道，把工作越挖越深越做越细的时候，才是最能发挥聪明才智的时候。解决一个一个问题当然重要，但更重要的是在这个过程中理解问题背后的东西，下次尽量避免再出同样的问题。</p>
<p>前些天上班路上听到了机核网介绍五年前刚开始做这档节目时大家的回忆，所有看起来很酷的东西一开始都是简陋慌张的，但是只要坚持，一定会慢慢成长起来的。之前定下的各项工作从本周起也基本在逐步走上正轨，希望自己的作品能早一点跟大家见面。</p>
<p>双十一终于剁手买了一部全画幅相机，等待收货的中午就在想，相机记录的其实是我们对这个世界的观察，影像记录的质量取决于我们观察的角度，这样的角度会对应于相机的各种参数（焦距光圈构图色彩等等）并最终转化成为一种感觉，也就是审美。</p>
<p>热热闹闹的买买买把光棍节原来的气氛完全冲走了，但从一个小朋友的角度来说，能在光棍节的晚上和喜欢的人一起蹲在地上捣鼓新玩具，是特别幸福的事情，一想到就开心。</p>
<p>在梅边落花似雪纷纷绵绵谁人怜，在柳边风吹悬念生生死死随人愿。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;春水望断，夏花宿妆残。谁闻秋蝉，谁知冬来。&lt;/p&gt;
    
    </summary>
    
      <category term="Gossip" scheme="http://wdxtub.com/categories/Gossip/"/>
    
    
      <category term="周记" scheme="http://wdxtub.com/tags/%E5%91%A8%E8%AE%B0/"/>
    
      <category term="双十一" scheme="http://wdxtub.com/tags/%E5%8F%8C%E5%8D%81%E4%B8%80/"/>
    
  </entry>
  
  <entry>
    <title>【小土刀玩摄影】β 读说明书</title>
    <link href="http://wdxtub.com/2016/11/12/a7m2-tour-2/"/>
    <id>http://wdxtub.com/2016/11/12/a7m2-tour-2/</id>
    <published>2016-11-12T03:14:39.000Z</published>
    <updated>2016-11-12T15:37:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>先学会怎么用，再谈怎么用好，我作为第一次接触 α7II 的小白，还是老老实实从说明书学起，不然一开始就错了，后面就白瞎了。</p>
<a id="more"></a>
<hr>
<p>更新历史</p>
<ul>
<li>2016.11.12: 初稿完成</li>
</ul>
<h2 id="基本知识"><a href="#基本知识" class="headerlink" title="基本知识"></a>基本知识</h2><ul>
<li>型号：ILCE-7M2 指的是单机身，ILCE-7M2K 指附带 FE28-70 3.5-5.6 镜头的套机（俗称狗头）</li>
<li>QuickNavi（按下 Fn 键）非常好用，熟悉了之后可以极大提升操作效率</li>
<li>可以在『自定义设置』-&gt;『功能菜单设置』中自定义  QuickNavi 的顺序和选项</li>
<li>可以通过查看柱状图观察显示亮度分布，调整曝光补偿来避免柱状图出现在左右两段（即曝光过度/曝光不足）</li>
<li>左下角是对焦指示标，绿点表示对焦成功。对于不移动的物体，使用『单次 AF』；对于移动中的物体，使用『连续 AF』；想要选择区域时，使用『对焦区域』</li>
<li>直接手动对焦 DMF 指的是在自动对焦后，可以手动进行微调</li>
<li>眼控 AF 可以提高人像的效果，对焦之后点击中央按钮即可以对眼睛对焦</li>
<li>AEL 指的是锁定 AE，用于背景与被摄体的明暗反差较大的背光环境或在窗边拍摄，一般使用『点测光』，对焦后点按 AEL 按钮固定曝光</li>
<li>DOR 动态范围优化：相机将被摄体和背景的明暗差分成小区域进行分析，以用最佳亮度和层次表现影像</li>
</ul>
<h2 id="照相模式"><a href="#照相模式" class="headerlink" title="照相模式"></a>照相模式</h2><p>简单介绍一下各个模式，根据需要来进行测试</p>
<h3 id="自动"><a href="#自动" class="headerlink" title="自动"></a>自动</h3><ul>
<li>智能自动：以相机认为适当的数值拍摄</li>
<li>增强自动：以相机认为适当的数值拍摄，根据需要进行连拍，通过合成或抽取保存最佳影像</li>
</ul>
<p>场景选择</p>
<ul>
<li>肖像：虚化背景、突出人物。再现柔和皮肤。<ul>
<li>要进一步虚化，将镜头设在长焦端</li>
<li>对靠近镜头的眼睛对焦，会拍摄出生动的影像</li>
<li>背光时，使用镜头遮光罩</li>
<li>因为闪光灯眼睛变红，使用减轻红眼功能</li>
</ul>
</li>
<li>运动：用高速快门速度拍摄出移动物体仿佛静止的效果。按住快门按钮连续拍摄<ul>
<li>保持半按快门按钮的状态等待快门时机</li>
</ul>
</li>
<li>微距：近距离拍摄花卉和美食等<ul>
<li>在一米以内拍摄时，将闪光模式设定为禁止闪光</li>
<li>合焦的最短距离不变</li>
</ul>
</li>
<li>风景：从近到远以鲜艳的色彩清晰地拍摄风景<ul>
<li>要进一步强调景观的浩瀚时，将镜头设在广角端</li>
</ul>
</li>
<li>黄昏：拍摄晚霞和朝霞等的红色</li>
<li>夜景：拍摄夜景，且不会失去黑暗气氛<ul>
<li>由于快门速度变慢，最好使用三脚架</li>
<li>太暗了照片效果可能不理想</li>
</ul>
</li>
</ul>
<h3 id="P-Program"><a href="#P-Program" class="headerlink" title="P Program"></a>P Program</h3><p>程序自动设定曝光（快门速度和光圈），ISO 感光度、创意风格和动态范围优化等可以自行改变。</p>
<p>可以在保持相机设定的适当曝光的状态下，改变快门速度和光圈值的组合。在合焦的状态下装懂前/后转盘，选择光圈值和快门速度的组合（照相模式会显示为 <code>P*</code>）</p>
<p><img src="/images/14789463878309.jpg" alt=""></p>
<h3 id="A-Aperture"><a href="#A-Aperture" class="headerlink" title="A Aperture"></a>A Aperture</h3><p>光圈优先，改变对焦范围和背景虚化程度。</p>
<p>想要只让被摄体清晰，让前后模糊。光圈开放得越大，对焦范围变得越窄（景深变浅）。想要表现风景的深度。光圈越小，对焦范围前后越宽广（景深变深）。如果是为瀑布拍照，一般会用较小的光圈配合较长快门时间，使瀑布的水滴变得模糊</p>
<ul>
<li>根据设定的光圈值，快门速度可能变慢。快门速度较慢时，请使用三脚架</li>
<li>想要更加虚化的北京时，使用远摄镜头或明亮的镜头</li>
</ul>
<h3 id="S-Shutter"><a href="#S-Shutter" class="headerlink" title="S Shutter"></a>S Shutter</h3><p>快门优先，改变移动物体的表现进行拍摄。</p>
<p>想要拍摄仿佛瞬间静止的影像。快门速度越快，越能更好地拍摄瞬间动作。想要拍摄移动轨迹，表现跳动感或流动感。快门速度越慢，越能更好地拍摄轨迹。手持拍摄的时候，快门速度最好不要低于 1/60 秒，快门速度最好低于焦距的倒数。</p>
<ul>
<li>以较慢的快门速度拍摄时，请使用三脚架</li>
<li>拍摄室内运动时，设定较高的 ISO 感光度</li>
</ul>
<h3 id="M-Manual"><a href="#M-Manual" class="headerlink" title="M Manual"></a>M Manual</h3><p>手动曝光，用前/后转盘手动设定曝光（快门速度和光圈），这个模式下也可以设置为 ISO AUTO</p>
<p><strong>B 门拍摄</strong>适用于拍摄烟花光迹类的影像和星星的轨迹</p>
<ul>
<li>在 M 手动模式下，向左转动后转盘直到出现 BULB，这时 ISO 感光度会被固定为 ISO<br>AUTO 的下限值<br>然后半按快门进行对焦，持续按快门按钮并保持所需时间进行拍摄（这期间快门保持开放状态）</li>
</ul>
<p>需要注意的是：</p>
<ul>
<li>安装在三脚架上拍摄</li>
<li>拍摄烟花时，设定为手动对焦并对无限远对焦。使用不知道无限远位置的镜头时，预先用出现在相似位置的烟花决定对焦并拍摄（曝光时间越长，画面内的噪点越容易变得明显）</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>虽然说明书上的内容都比较基础，但其实把这些基本概念搞明白，然后能够灵活运用，就已经需要比较多的练习了。所以还是要踏踏实实一步一个脚印，多拍拍拍。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;先学会怎么用，再谈怎么用好，我作为第一次接触 α7II 的小白，还是老老实实从说明书学起，不然一开始就错了，后面就白瞎了。&lt;/p&gt;
    
    </summary>
    
      <category term="Life" scheme="http://wdxtub.com/categories/Life/"/>
    
    
      <category term="摄影" scheme="http://wdxtub.com/tags/%E6%91%84%E5%BD%B1/"/>
    
      <category term="基础" scheme="http://wdxtub.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="说明书" scheme="http://wdxtub.com/tags/%E8%AF%B4%E6%98%8E%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>【小土刀玩摄影】α 开拍</title>
    <link href="http://wdxtub.com/2016/11/12/alpha-7-tour-1/"/>
    <id>http://wdxtub.com/2016/11/12/alpha-7-tour-1/</id>
    <published>2016-11-12T00:35:48.000Z</published>
    <updated>2016-11-13T10:04:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>工作之后的第一个双十一，终于可以自在剁手了。买了觊觎已久的索尼微单 α7 II(ILCE-7M2)，决定要好好学学摄影，于是就有了这个「小土刀玩摄影」系列。目标嘛是开心就好，至于能走多远，就看个人造化咧。</p>
<a id="more"></a>
<hr>
<p>更新历史</p>
<ul>
<li>2016.11.12: 初稿完成</li>
<li>2016.11.13: 更新一个镜头</li>
</ul>
<h2 id="系列思路"><a href="#系列思路" class="headerlink" title="系列思路"></a>系列思路</h2><p>网上关于摄影的各种专业的帖子已经多如牛毛，我再搬运来搬运去其实没太多意思。思来想去，还是以第一人称的初学者心态，记录自己的探索例程比较有趣，可能对于同样想入门没入门的朋友有所帮助。于是给自己定个大概原则：不堆积专业术语和走老学究路线。摄影和写作一样，都是记录和表达的方式，我还是想把我在文字中的风格带到摄影中去，简简单单轻轻松松自带亲切感就挺好。</p>
<h2 id="我的相机们"><a href="#我的相机们" class="headerlink" title="我的相机们"></a>我的相机们</h2><p>因为体验过扛单反的痛苦，所以选购相机的时候，单反这一大类我就直接排除了（当然还有一个原因是穷）。而作为一个资深索粉当然要高唱着『索尼大法好』的同时努力维护『姨夫的微笑』(源于索尼的平井一夫)。思来想去，最后决定拿下粉色的 Nex C3（都是五年前的事儿了）</p>
<p><img src="/images/14789169744113.jpg" alt=""></p>
<p>因为是第一台相机，颜色也足够亮眼，从亚丁的五色海到华盛顿的方尖塔，几乎陪伴我去过各个地方。不过作为入门级别的相机，草草学习了基本的摄影知识便没有继续深入下去。</p>
<p>第二台相机是 2015 年给妈妈买的黑卡 RX100 M3，替换了一直服役但是我非常不满意的佳能卡片机。轻巧的机身加上手机遥控和可反转屏幕，基本成了妈妈出门聚会必带装备（当然后来还有了三脚架）。</p>
<p><img src="/images/14789181131240.jpg" alt=""></p>
<p>随着时间的推移，Nex C3 已经无法满足我的需求，但是不好意思开口找爸妈要求升级到全画幅，慢慢就转为了手残手机摄影党，直到这个双十一终于鸟枪换炮，拿下了我的第一个全画幅微单。</p>
<p><img src="/images/14789184775573.jpg" alt=""></p>
<p>至此，再也没有机会不好好去学习认真捣鼓手上的设备了，毕竟『买了就要用好』是我一贯的目标嘛。</p>
<h2 id="升级计划"><a href="#升级计划" class="headerlink" title="升级计划"></a>升级计划</h2><p>都说『摄影穷三代，单反毁一生』，虽然只是玩笑话，不过各种镜头确实比较贵倒是无可辩驳的事实。好在索尼的 E 卡口全画幅镜头群的数量不算特别多，我本身也是什么器材党（毕竟最重要的是镜头前和镜头后面的人，而不是器材本身），所以套机的狗头加上俩蔡司的定焦头应该就差不多了（右边那个基本上是必买的）：</p>
<p><img src="/images/14789190811280.jpg" alt=""></p>
<p>看了一堆测评之后，在狗头中找到了新鲜货：</p>
<p><img src="/images/14790313656721.jpg" alt=""></p>
<p>然后就是周边的一些配件了，主要是三脚架电池相机包，其他的就在日常拍拍拍中再慢慢看吧。不过我是不想买太多的，带着嘛拿着累，不带着嘛那为啥要买，所以还是要把钱花在那些真正需要的地方，好钢用在刀刃上。</p>
<h2 id="探索计划"><a href="#探索计划" class="headerlink" title="探索计划"></a>探索计划</h2><p>虽然之前也看过几本摄影相关教程，但是总体感觉并没有什么用，更何况现在也忘得差不多了。艺术类的技能其实是很难通过照本宣科学会的，更多的是一种感觉。当然一定的基础知识还是非常重要的，所以目前的打算大概是这样的：</p>
<ol>
<li>看说明书，先把怎么用搞明白</li>
<li>复习基本成像原理，遇到各种参数不会一头雾水</li>
<li>分解学习：构图、光影、曝光、色彩、后期</li>
<li>寻找审美，找自己喜欢的风格，多去看大师的作品</li>
<li>在每个步骤里都多尝试多拍，借此机会多出去走走看看</li>
</ol>
<p>刚开始玩摄影肯定有很多不懂的地方，希望各位老司机带带我！</p>
<h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><ul>
<li><a href="http://ww.xitek.com/" target="_blank" rel="external">色影无忌</a></li>
<li><a href="http://www.fengniao.com/" target="_blank" rel="external">蜂鸟网</a></li>
<li><a href="https://www.zhihu.com/topic/19551388" target="_blank" rel="external">知乎 - 摄影</a></li>
<li><a href="https://www.zhihu.com/topic/19559348/hot" target="_blank" rel="external">知乎 - 摄影技巧</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;工作之后的第一个双十一，终于可以自在剁手了。买了觊觎已久的索尼微单 α7 II(ILCE-7M2)，决定要好好学学摄影，于是就有了这个「小土刀玩摄影」系列。目标嘛是开心就好，至于能走多远，就看个人造化咧。&lt;/p&gt;
    
    </summary>
    
      <category term="Life" scheme="http://wdxtub.com/categories/Life/"/>
    
    
      <category term="学习" scheme="http://wdxtub.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="摄影" scheme="http://wdxtub.com/tags/%E6%91%84%E5%BD%B1/"/>
    
      <category term="爱好" scheme="http://wdxtub.com/tags/%E7%88%B1%E5%A5%BD/"/>
    
  </entry>
  
  <entry>
    <title>【架与构】1 系列概览</title>
    <link href="http://wdxtub.com/2016/11/09/arch-build-1/"/>
    <id>http://wdxtub.com/2016/11/09/arch-build-1/</id>
    <published>2016-11-08T23:45:12.000Z</published>
    <updated>2016-11-10T14:14:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>时隔八个月，【架与构】系列的第二篇文章终于和大家见面了。这段时间里，我参与了几个系统的开发，又独自设计实现了俩系统。在和不同部门的合作中，我逐步了解了从生产、硬件到知识产权、软件这一整套的流程，终于能以更高的视角去看待架构本身。在这里写下自己的想法，跟大家分享。</p>
<a id="more"></a>
<hr>
<p>更新历史</p>
<ul>
<li>2016.11.09: 完成初稿</li>
</ul>
<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>今年三月决定开始这个系列的写作时，我自己心理也是没底的，因为除了课本上的内容，我仅有的架构经验仅限于在大公司刻舟求剑以及在实验室搭脚手架，于是这个系列的写作便陷入了无限期的停摆之中。</p>
<p>工作之后，先是阅读了公司各大项目的源码，再是参与了几个系统的核心功能开发，之后又独立设计并实现了俩系统。虽然有些辛苦，但是快速把工程经验较弱这一短板补上了。遇到问题都可以在短时间内拿出一套较为合理、分工明确、可阶段性验证的解决方案。</p>
<p>能有这样的进步，需要特别感谢的是同事的倾囊相授和领导的充分信任，在遇到难题时可以并肩作战，让我有机会比较深入去了解公司的整体架构与业务流程，这对后续系统和架构的设计与搭建很有帮助。之后到需要我自己设计与搭建系统的时候，也并没有给我太多限制，对于这种不拘小节专注把事儿做好的态度，我是非常喜欢的。</p>
<p>既然学有所得，便想分享出来，整理思路的同时是很好的提炼与升华，更何况能以此与有志于此的朋友们交流讨论，一石二鸟，何乐不为？</p>
<h2 id="系列内容计划"><a href="#系列内容计划" class="headerlink" title="系列内容计划"></a>系列内容计划</h2><p>『架与构』这个系列原则上来说内容自由度是很高的，正因如此，才更需要一个比较完整的计划，不然东一榔头西一铲子，让人完全找不到重点。在自己学习和实践的过程中，很清晰意识到了『架与构』的痛点在哪里，于是，这个系列核心便是：</p>
<blockquote>
<p>结合对于架构的理论研究与实战经验，搭建从书本到现实的桥梁</p>
</blockquote>
<p>有了一定架构的实践经验之后，回过头来思考校园所学，发现其实各类架构和系统设计课程上的内容都是非常有价值的。但是最大的问题是，对于学生来说，这些经过提炼和抽象的核心概念，是接近于无法理解的，最终回到了『鸡生蛋蛋生鸡』的问题上。</p>
<p>那怎么办？正所谓最好的学习方法是『用』，概念需要在不断的实践中打磨，才能足够锋利。但是对于大部分对架构感兴趣并且想要入门的朋友来说，是很难有机会去直接参与到一个大系统的设计与架构中的。当然，我们可以自己做开源项目，或者是借鉴各大公司的架构相关分享，却容易因为架构涉及的知识面太广导致学着学着自己都不知道自己在干嘛了。</p>
<p>针对这个问题，我的一个尝试是把概念与实际案例与业务模型结合起来，通过引导大家思考大公司中不同业务逻辑及其对应的架构的差异，去真正理解架构本身，甚至能够突破架构，去思考业务的模型。而在理解了核心概念之后，反过来又可以据此来分析和优化已有的系统和架构。这样就把概念和实际联系了起来，大约不会再出现『这个概念我懂了但是没什么用』的感觉。</p>
<p>举个例子，为了给广大用户提供稳定的服务，并发架构的设计基本上是每个公司都无法绕开的。对于这个主题，我会怎么讲呢，基本的顺序是：</p>
<ol>
<li>从 CPU/GPU 的架构说起，解释并发与并行的差别，说明为什么需要并发，以及核心难点在哪里</li>
<li>为了解决这些难点，人们尝试了哪些方法，也就是具体的并发编程模型，比方说并行工作者模型、流水线模型和函数式并行模型。</li>
<li>介绍不同模型的实现方式，比方说流水线模型又包括事件驱动系统（Vert.x, Akka, Node.js）和 Actor/Channel 模型，也会简要介绍不同编程语言在解决并发问题上的思路与实现方式</li>
<li>挑选不同公司的不同业务进行简要分类分析，比如电商网站中的秒杀、聊天软件中的集中发红包或打车软件中的车辆实时调度，主要是理清业务场景和可能出现瓶颈以及需要注意的地方，简要进行业务量的估计</li>
<li>结合不同公司在开发者大会上的分享，说明架构的设计是如何去解决不同的业务场景的瓶颈，以及不同量级的数据需要如何去设计对应的架构。这之中，架构演变的介绍最有价值，我们可以通过分析每次变化去反推设计思路，最终用于自己的实践中</li>
</ol>
<p>通过这样五个步骤，基本就把概念-设计-实践整个串联了起来，既有理论也有工程，融会贯通产生 <code>1 + 1 &gt; 3</code> 的效果。</p>
<p>最后用八个月前写的一段来结尾吧，之所以把这个系列取名为『架与构』，是为了提醒自己设计和实现是不可分割的部分，『架』得再好，『构』不出来也没用。所谓『脚踏实地，仰望星空』，大概就是这个道理。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;时隔八个月，【架与构】系列的第二篇文章终于和大家见面了。这段时间里，我参与了几个系统的开发，又独自设计实现了俩系统。在和不同部门的合作中，我逐步了解了从生产、硬件到知识产权、软件这一整套的流程，终于能以更高的视角去看待架构本身。在这里写下自己的想法，跟大家分享。&lt;/p&gt;
    
    </summary>
    
      <category term="Technique" scheme="http://wdxtub.com/categories/Technique/"/>
    
    
      <category term="架构" scheme="http://wdxtub.com/tags/%E6%9E%B6%E6%9E%84/"/>
    
      <category term="系统" scheme="http://wdxtub.com/tags/%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="复杂" scheme="http://wdxtub.com/tags/%E5%A4%8D%E6%9D%82/"/>
    
  </entry>
  
  <entry>
    <title>Podcast 收听地图</title>
    <link href="http://wdxtub.com/2016/11/08/podcast-guide/"/>
    <id>http://wdxtub.com/2016/11/08/podcast-guide/</id>
    <published>2016-11-07T23:31:34.000Z</published>
    <updated>2016-11-08T00:11:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>播客(Podcast)是类似广播的网络声讯节目，如果博客(Blog)是文字的游戏，那么播客(Podcast) 则是声音的游戏。五花八门的节目类型，真的是用耳朵去『看』世界。这里跟大家分享一些我觉得非常不错的播客。</p>
<a id="more"></a>
<hr>
<p>更新记录</p>
<ul>
<li>2016.11.08: 初稿完成</li>
</ul>
<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>我一直在寻找一个解决方案，来利用好上班/上学通勤的这段时间，毕竟每天也有一两个小时呢。阅读文字条件不允许，歌曲总有听厌的时候，网络电台早上都是天气交通新闻。一番寻寻觅觅，播客可谓完美解决了这个问题。</p>
<p>转眼间接触播客也快五年了，和身边朋友聊天的时候发现其实这还是颇为小众的信息源。考虑自己目前也正在筹备播客节目，所以希望能有更多的朋友来听听看，感受另一种信息获取的方式，说不定就喜欢上了呢？</p>
<p>本文会不定期推荐一些我喜欢的节目（偏理工科），除了官方介绍外，也会有我自己的感受，希望大家喜欢。</p>
<h2 id="播客推荐"><a href="#播客推荐" class="headerlink" title="播客推荐"></a>播客推荐</h2><p>均可在 Podcast 应用中搜索并订阅。</p>
<h3 id="内核恐慌"><a href="#内核恐慌" class="headerlink" title="内核恐慌"></a>内核恐慌</h3><blockquote>
<p>《内核恐慌》(Kernel Panic) 是由 IPN 出品、吴涛和 Rio 做的播客，首播于 2014 年 10 月。号称硬核，可也没什么干货。想听的人听，不想听的人就别听。</p>
</blockquote>
<p>吴涛和 Rio 大概是我最喜欢的节目主持人了！声音很好听，跑题能力也是一流，但是字里行间能听出来对技术满满的热情与追求。节目中聊的话题五花八门，有种老司机带带我的感觉，从键盘到字体，从文件系统到如何找女朋友，从编码到 WWDC。总而言之，如果你是一个自认为比较有趣的技术人，那么内核恐慌绝对不应该错过。</p>
<h3 id="太医来了"><a href="#太医来了" class="headerlink" title="太医来了"></a>太医来了</h3><blockquote>
<p>《太医来了》由 IPN 出品、由前骨科医生初洋和妇产科医生田吉顺主持，是中文互联网第一档医生谈话类播客。节目里没有老专家讲养生，只有几个医生聊聊医院里的事儿，顺便给大家做做科普。</p>
</blockquote>
<p>田吉顺是知乎上的高质量的答主之一，如果你觉得光看图文回答不过瘾，那么这档节目就是听医生说事儿的最佳选择。医疗和健康问题，还是要多去听听看医生怎么说，而不是听养生节目忽悠。</p>
<h3 id="味之道"><a href="#味之道" class="headerlink" title="味之道"></a>味之道</h3><blockquote>
<p>《味之道》是由 IPN 出品、由席妙雅主持的美食播客，首播于 2014 年 6 月。美味是感性的体验，但同时需要开放的心态和眼界，以及精准的判断力。用味道来检验美食，不谈风月，不聊情怀。</p>
</blockquote>
<p>作为一个吃货，怎么吃，怎么好吃，都是必修课！如果平日工作太忙，不妨就听听专业人士的说法，毕竟咱们还可以按图索骥刻舟求剑嘛（这里贬义褒用）</p>
<h3 id="机核网-GADIO-游戏广播"><a href="#机核网-GADIO-游戏广播" class="headerlink" title="机核网 GADIO 游戏广播"></a>机核网 GADIO 游戏广播</h3><blockquote>
<p>国内首家游戏网络电台 最新最全的游戏新闻 热门游戏报道 游戏心得分享 以及业内最专业的游戏人访谈 涵盖所有游戏主机</p>
</blockquote>
<p>非常接地气且专业的游戏节目！素质高话题有趣涉猎范围广，唯一低的就是节操！如果你喜欢游戏，那么从这里可以找到游戏背后更有趣的故事。</p>
<h3 id="Teahour-fm"><a href="#Teahour-fm" class="headerlink" title="Teahour.fm"></a>Teahour.fm</h3><blockquote>
<p>Teahour.fm 由Terry，玎玎, Daniel, Kevin 和滚滚主持，会专注程序员感兴趣的话题，包括 Web 设计和开发，移动应用设计和开发，创业以及一切 Geek 的话题。</p>
</blockquote>
<p>这一档界面虽然更新比较慢，但是基本每次都会请 IT/互联网业界的大牛来分享经验和历程，对于我这种初出茅庐的新兵蛋子来说，简直就是快速升级的十全大补丸。唯一的问题在于主持人有点多，我常常听着听着就混乱了，建议还是带上嘉宾三人以内比较好。</p>
<h3 id="一刻-talks"><a href="#一刻-talks" class="headerlink" title="一刻 talks"></a>一刻 talks</h3><blockquote>
<p>「一刻talks」正在邀请世界上的思想领袖与实干家来分享他们的事业、故事创意和想法，这些来自世界各地不同领域的专业人才和深藏不露的绝妙素人，将带来极具前瞻性的话题，把思想精华浓缩在15分钟，讲述知识与创意的精髓，碰撞思想的火花。目前已累积1500则以上的精彩演讲，主题包罗万象，科学家、艺术家、哲学家、探险家、心理学家、商业领袖等各路有想法的人纷纷登台，观点“响亮”，要给世界一点言色！</p>
</blockquote>
<p>简单来说，可以理解为音频版的 TED，我一直觉得，即使是做技术，也需要有视野和大局观，说不定就发现新世界了呢对不对！</p>
<h3 id="静雅思听"><a href="#静雅思听" class="headerlink" title="静雅思听"></a>静雅思听</h3><blockquote>
<p>我们将城市大众，尤其是白领年轻人关心的一些热点问题，生活性、知识性及思想性的内容， 以MP3的形式提供给公众，让城市听众免费从我们的网站上下载下来，放在电脑或MP3中，在自己方便的时候收听，在所有现代城市人适合听，但不适合看的场合来听。内容涉及 ：历史、军事、健康保健、法制、情感、文化、汽车、旅游、生活常识、经济管理、 心理、医疗、营养、职业发展、教育、地理、科技等各个方面</p>
</blockquote>
<p>静雅思听是我最早接触的播客之一，也是我听得最久，甚至会专门下载来收藏的唯一的播客。内容非常丰富，天南海北五花八门，基本上来说，是听不完的，不过挑自己感兴趣的就好嘛！如果硬要说缺点，就是有些太专业了，像节目，不像前面几个是主持人唠唠嗑的感觉。播客这个事儿丰俭由人，挑自己喜欢的就好</p>
<h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><p>说了这么多，可能大家已经有点兴趣了，iOS 系统可以直接打开『播客(Podcast)』这个应用订阅收听，Android 在商店里搜索 Podcast 便可以从各种客户端中挑选一个自己喜欢的。以下说明来自 <a href="http://ipn.li/faq" target="_blank" rel="external">IPN</a></p>
<blockquote>
<p>在 iOS 上我们推荐 Castro。您也可以用苹果自家出的那个紫色图标的 Podcasts，它是预装在 iPhone 和 iPad 上的。</p>
<p>在安卓上我们推荐 Pocket Casts，但很遗憾国内安卓市场上的 Pocket Casts 均为盗版。若您无法在 Google Play 购买 Pocket Casts，我们推荐开源且免费的 AntennaPod。</p>
<p>在 Mac 和 Windows 上用 iTunes 就好。</p>
</blockquote>
<p>别犹豫了，听听看吧！</p>
<p>最后打个小广告，我也在筹备一个以我和各行各业的朋友闲聊各种不同有趣话题的播客节目，希望之后大家能赏脸听听看！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;播客(Podcast)是类似广播的网络声讯节目，如果博客(Blog)是文字的游戏，那么播客(Podcast) 则是声音的游戏。五花八门的节目类型，真的是用耳朵去『看』世界。这里跟大家分享一些我觉得非常不错的播客。&lt;/p&gt;
    
    </summary>
    
      <category term="Life" scheme="http://wdxtub.com/categories/Life/"/>
    
    
      <category term="博客" scheme="http://wdxtub.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Podcast" scheme="http://wdxtub.com/tags/Podcast/"/>
    
  </entry>
  
  <entry>
    <title>【聊聊无人机】捌 航空管理</title>
    <link href="http://wdxtub.com/2016/11/05/drone-thought-atm/"/>
    <id>http://wdxtub.com/2016/11/05/drone-thought-atm/</id>
    <published>2016-11-05T06:20:16.000Z</published>
    <updated>2016-11-15T23:03:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>无人机的出现，对于现有的航空管理提出了新的问题和挑战。不过在具体介绍如何管理无人机之前，我们先来看看人们目前是如何管理头上这片天空的。</p>
<a id="more"></a>
<hr>
<h2 id="空域划分"><a href="#空域划分" class="headerlink" title="空域划分"></a>空域划分</h2><p>说到管理，最先需要确定的就是规则和范围，不然大家有不同的理解，基本上很难达成一致。表现在空域管理中，最重要和最基础的部分就是空域的划分了。我们先来看看下图所示的美国空域划分的方法</p>
<p><img src="/images/14783273990967.jpg" alt=""></p>
<p>我们可以看到，美国的空域分成了 ABCDEG 六类，表格中内容比较多和杂，这里简单介绍一下每一类的基本信息：</p>
<ul>
<li>Class A: A 类空域指 18000 英尺（5490 米）以上的高度，是绝大多数客机巡航的区域，进入需要有 ATC(Air Traffic Control) Clearance 的保证（参考<a href="http://avstop.com/ac/flighttrainghandbook/atcclearances.html" target="_blank" rel="external">这里</a>）</li>
<li>Class B/C/D: BCD 三类空域指的不同繁忙程度的机场，流量越大的机场，所占据的空域和需要提供的服务越多，比方说 D 类机场甚至不需要强制要求雷达。</li>
<li>Class G: G 类空域是无管制空域，简单来说就是爱干嘛干嘛</li>
<li>Class E: 除了前面提到的几类，剩下的地方都属于 E 类空域</li>
</ul>
<p><a href="http://www.icao.int/Pages/default.aspx" target="_blank" rel="external">国际民航组织(ICAO)</a> 对空域的划分要更细致一些，还有一种 F 类空域，具体如下图所示（<a href="http://code7700.com/airspace_classification.html" target="_blank" rel="external">来源</a>）</p>
<p><img src="/images/14783346788763.jpg" alt=""></p>
<p>术语很多，还是来简单介绍下：</p>
<ul>
<li>A 级：所有航空器都需要以仪表飞行(IFR)，所有航空器由空管强制配备间隔</li>
<li>B 级：航空器可以仪表飞行(IFR)，目视飞行(VFR)或者是特别目视飞行(SVFR)。所有航空器由空管强制配备间隔</li>
<li>C 级：航空器可以仪表飞行(IFR)，目视飞行(VFR)或者是特别目视飞行(SVFR)飞行。所有航空器均需配备间隔，而目视飞行飞机由空管提供基本情报服务来避开其他目视飞行器</li>
<li>D 级：航空器可以仪表飞行(IFR)，目视飞行(VFR)或者是特别目视飞行(SVFR)飞行。IFR 航空器需配备间隔；而目视飞行飞机由空管提供基本情报服务来避开全部航空器</li>
<li>E 级：航空器可以仪表飞行(IFR)，目视飞行(VFR)或者是特别目视飞行(SVFR)飞行。IFR 航空器需配备间隔，而目视飞行飞机将会由空管提供基本情报服务来避开全部航空器，而且目视飞行不需要空管批准作飞行活动</li>
<li>F 级：航空器可以仪表飞行(IFR)，目视飞行(VFR)飞行。飞行器不需要空管批准作飞行活动。只有仪表飞行的飞行器才会由空管提供基本情报服务来避开其他航机，目视飞行(VFR)可以不联络空管或者监听频道</li>
<li>G 级：航空器可以仪表飞行(IFR)，目视飞行(VFR)飞行。飞行器不需要空管批准作飞行活动。所有航空器不会由空管提供间隔，需自行协调相互间的间隔。目视飞行(VFR)可以不联络空管或者监听频道</li>
</ul>
<p>一个简单的图例如下所示（<a href="https://ivao.aero/flightops/divprocedures.php?id=EG" target="_blank" rel="external">来源</a>），这里并未标出 F 和 G 级空域，是因为在 ICAO 的定义中，F 及 G级空域均属非管制空域。在这些空域，空中交通管制员如非必要都不干预空域的运作，但是仍然会提供该空域的基本情报。但是因为信息和监控的能力限制，ATC 无法保证安全间隔，需要靠飞机上的机载防撞系统(TCAS)和飞行员来维持最基本的安全。</p>
<p><img src="/images/14783346601749.jpg" alt=""></p>
<p>我们来结合上图把整个飞行过程串讲一遍：</p>
<ul>
<li>禁飞区和限飞区的优先级是最高的，必须遵守</li>
<li>飞机在机场管制空域时，基本服从塔台的调度</li>
<li>飞出机场管制空域后（也就是 BCD 三类空域），分为两种情况<ul>
<li>如果是仪表飞行(IFR)，进入 E 和 A 级空域时，仍然受到雷达监控和 ATC 管制</li>
<li>如果是目视飞行(VFR)，不能进入 A 级空域（也就是大部分飞机巡航的高度），但是在 E 级空域中可以随便飞（虽然大多数人是愿意接受 ATC 监控以接受对应服务的）</li>
</ul>
</li>
</ul>
<p>而在 G 级空域里的小机场和飞机，基本是自生自灭了。基本依靠视觉、无线电和固定的航线来保证安全，不过因为灵活度比较大，基本没有太大的问题。</p>
<p>前面介绍了美国和 ICAO 的空域划分方法，其他国家和地区的分法基本也是类似的，这里唯一需要首先弄清楚的是：空域的管理权到底在哪个部门手上。比方说美国的所有空域都由 FAA 统一监管，而中国及世界上其他大部分国家，因为空防压力，所有的空域都由军队统一管理。不要小看这一点，后面很多工作的差异都可以追根溯源于此。</p>
<h2 id="航线规划"><a href="#航线规划" class="headerlink" title="航线规划"></a>航线规划</h2><p>空中不像地面有实际的马路，但并不意味着空域资源是无限的。最初因为技术限制，飞机基本上智能按照规定的航线飞（不然能见度低的时候，肯定要出事儿）。虽然技术已经有了长足的进步，但是由于历史、政治、军事等等的考虑，大部分飞机还是按照航线飞的。</p>
<p>有航线就肯定会堵车，汽车还可以关闭发动机在路上等，但是飞机在天上『等』的成本是非常高的，所以我们肯定是希望能尽快落地，如果明确知道不能按时落地，那就不如先不要起飞，在地上等。</p>
<p>为了保证飞行安全，在起飞前需要确认的东西有太多太多，从天气到航路到各个机场的情况，一旦任何一个环节拥堵，基本上就需要『流量控制』了。当然，除了客观因素限制，空域管理系统的数据覆盖和规划能力也是重中之重，国内目前缺少一个能够在全国范围内提供实时自动化数据整合并做出航线规划的权威机构，在调度策略的选择上，肯定也是趋于保守的（毕竟还是安全第一）。</p>
<p>随着高铁的快速发展，铁道部的系统水平也在快速提高，相信在航空管理上，随着权责的梳理和资源的逐步进行，动不动就要『流量控制』的日子会越来越少。</p>
<p>这里顺带提一句，航空管理中的飞机的定位与工作人员的沟通其实也是一个非常复杂且有不同解决方案的问题。比方说</p>
<ul>
<li>飞机确定自己当前位置，类似于我们拿出手机定位。几个比较有代表性的方法有：<ul>
<li>地标领航，类似于我们确定朋友位置时问他们附近有哪些显眼的建筑</li>
<li>利用地面导航，如 <a href="https://zh.wikipedia.org/wiki/%E7%94%9A%E9%AB%98%E9%A2%91%E5%85%A8%E5%90%91%E4%BF%A1%E6%A0%87" target="_blank" rel="external">甚高频全向信标 VOR</a> / <a href="https://en.wikipedia.org/wiki/Distance_measuring_equipment" target="_blank" rel="external">测距仪 DME</a> / <a href="https://zh.wikipedia.org/wiki/%E6%AD%B8%E8%88%AA%E5%8F%B0" target="_blank" rel="external">无方向性信标台 NDB</a> / <a href="https://zh.wikipedia.org/wiki/%E4%BB%AA%E8%A1%A8%E7%9D%80%E9%99%86%E7%B3%BB%E7%BB%9F" target="_blank" rel="external">仪表降落系统 ILS</a> 等等（具体的含义感兴趣的同学可以自己查阅维基百科，这里不展开）</li>
<li>星基导航，比较先进的一种方式，基于 GPS 及类似设备提供位置导航。这不，我们的北斗系统也可以做这样的事情了（见<a href="http://www.caac.gov.cn/XWZX/MHYW/201610/t20161014_40141.html" target="_blank" rel="external">北斗系统将为全球民航提供中国导航</a>以及<a href="http://www.beidou.gov.cn/attach/2015/11/06/1.0.pdf" target="_blank" rel="external">北斗微型导航标准体系(1.0版)</a>）</li>
</ul>
</li>
<li>飞机确定其他飞机的相对位置，基本依靠 <a href="https://zh.wikipedia.org/zh/%E7%A9%BA%E4%B8%AD%E9%98%B2%E6%92%9E%E7%B3%BB%E7%BB%9F" target="_blank" rel="external">空中防撞系统 TCAS</a></li>
<li>地面人员确定飞机的位置，主要依靠机组位置报告、雷达或 <a href="https://en.wikipedia.org/wiki/Automatic_dependent_surveillance_%E2%80%93_broadcast" target="_blank" rel="external">ADS-B</a></li>
</ul>
<h2 id="中美欧差异"><a href="#中美欧差异" class="headerlink" title="中美欧差异"></a>中美欧差异</h2><p>中国、美国和欧洲因为各自地理、政治、历史、军事的考虑，在航空管理上有相似之处，也有许多差异。这种差异体现在航空管理系统（以及接下来会介绍的无人机交通管理系统）中，就产生了不同的发展思路。这里简单列举一些异同</p>
<ul>
<li>政府组织<ul>
<li>中国：中国民用航空局(CAAC)</li>
<li>欧洲：European Aviation Safety Agency(EASA)</li>
<li>美国：Federal Aviation Administration(FAA)</li>
</ul>
</li>
<li>空域管理归属<ul>
<li>中国：空军统一管理，20% 的空域由民航局『代管』</li>
<li>欧洲：跨国航线由 EASA 管理，国内的航线由本国航空机构管理</li>
<li>美国：由 FAA 统一管理，军方在不属于军事空域中训练需要向 FAA 申请</li>
</ul>
</li>
<li>管理思路<ul>
<li>中国：所有上天的都需要走申报流程，不存在所谓的 G 级空域（目前属于睁一只眼闭一只眼的状态）</li>
<li>欧洲：虽然有 EASA 统一管理，但是各成员国具体的执行比较灵活，差异性很大</li>
<li>美国：G 级空域内的飞行不受限制，其他区域飞行需要走一定的申报流程</li>
</ul>
</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>很多系统历经年代发展，有许多不合理的设计。无人机的空管系统作为一个新鲜事物能够抛开历史包袱，在兼容现有的系统的前提下，为整个空域的精细划分与管理带来新的动力。</p>
<p>注意，本文中提到的所有内容都是针对与有人驾驶的飞行器的，下一篇文章我带大家了解无人机交通管理的相关知识。</p>
<h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><ul>
<li><a href="http://www.atmb.net.cn/pic/2004122.pdf" target="_blank" rel="external">美国空域分类及目视运行</a></li>
<li><a href="http://www.z3z4.com/a/4m0l9o0" target="_blank" rel="external">空管 ATC 的历史和运行以及空域划分简介</a></li>
<li><a href="http://www.eaipchina.cn/Version/201512/Html/MaterialVersion.htm" target="_blank" rel="external">eAIP</a></li>
<li><a href="http://www.icao.int/Pages/default.aspx" target="_blank" rel="external">国际民航组织</a></li>
<li><a href="http://www.liveatc.net/" target="_blank" rel="external">Live Air Traffic - From Their Headsets to You</a></li>
<li><a href="https://skyvector.com/" target="_blank" rel="external">Sky Vector - Aeronautical Charts</a></li>
<li><a href="http://www.simbrief.com/home/" target="_blank" rel="external">simBrief - 航路查询</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无人机的出现，对于现有的航空管理提出了新的问题和挑战。不过在具体介绍如何管理无人机之前，我们先来看看人们目前是如何管理头上这片天空的。&lt;/p&gt;
    
    </summary>
    
      <category term="Technique" scheme="http://wdxtub.com/categories/Technique/"/>
    
    
      <category term="航空" scheme="http://wdxtub.com/tags/%E8%88%AA%E7%A9%BA/"/>
    
      <category term="规则" scheme="http://wdxtub.com/tags/%E8%A7%84%E5%88%99/"/>
    
  </entry>
  
  <entry>
    <title>【Flewn】穿越荒漠</title>
    <link href="http://wdxtub.com/2016/11/05/flewn/"/>
    <id>http://wdxtub.com/2016/11/05/flewn/</id>
    <published>2016-11-04T22:57:48.000Z</published>
    <updated>2016-11-05T00:46:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>与其说这是一个游戏，不如认为这是一本互动故事书，讲了关于环境、责任、爱与勇气的故事。</p>
<a id="more"></a>
<hr>
<h2 id="第一幕"><a href="#第一幕" class="headerlink" title="第一幕"></a>第一幕</h2><p>原文</p>
<blockquote>
<p>Old whale’s world had been turned all around.<br>What once was sky had been drained through the ground.<br>He grew weary on his three driftwood stilts.<br>As he made his way through the dry desert silts.<br>Old whale’s days dragged on and on.<br>He had walked as far as his beard had grown long.<br>He cared dearly for the fish on his back and had saved as many as he could possibly stack.<br>Lost and exhausted he wanted to cry.<br>But even saved the water welling up in his eye.</p>
</blockquote>
<p>因为气候变化，鲸鱼不得不踩着高跷，踏上了寻找海洋的旅程，它的背上承载着许许多多小鱼儿的生命，不能停下，也不能哭。</p>
<h2 id="第二幕"><a href="#第二幕" class="headerlink" title="第二幕"></a>第二幕</h2><p>原文</p>
<blockquote>
<p>With just sky, sun and mountains above, he could not find the ocean they love.<br>Beneath a great sky of blue, the mountains left them without a way through.<br>Old whale was sore deep down to his bones.<br>Each of his breaths were dried up old groans.<br>They could not turn around and return where they came.<br>Going back would be more of the endlessly same.<br>He had stretched himself out to the end of his length, yet pushed himself forward with the last of his strength.</p>
</blockquote>
<p>道阻且长，海洋不见踪影；无法回头，却也没办法再向前一步。</p>
<h2 id="飞吧"><a href="#飞吧" class="headerlink" title="飞吧"></a>飞吧</h2><blockquote>
<p>Frog and camel were searching the sea floor.<br>They found a rare fish and went looking for more.<br>They placed it in a bottle and tied it with rope.<br>The fish needed a home but they had little hope.<br>Frog told his friends about the whale he had found.<br>How he was carrying fish he had saved from the ground.<br>Frog’s friends could not believe a word he was saying and asked to be led to where the fallen whale was laying.</p>
</blockquote>
<p>青蛙和骆驼在寻找海平面的时候发现了小鱼儿和鲸鱼，带着将信将疑的朋友，来到了鲸鱼身边。</p>
<h2 id="第三幕"><a href="#第三幕" class="headerlink" title="第三幕"></a>第三幕</h2><p>原文</p>
<blockquote>
<p>As the animals arrived, they gathered around.<br>Each one sat quietly, not making a sound.<br>Old whale tried to sing them an old ocean song.<br>But his dry throat cracked and it sounded all wrong.<br>He wanted to tell them about a world full of love where his friends swam around him, below and above.<br>So he whispered a story about the world he once knew.<br>How he used to sing songs in the infinite blue, drifting along floating naked and free.<br>His home, he explained, is deep in the sea.</p>
</blockquote>
<p>悲伤的歌已太多，干涩的喉咙已无法再唱。</p>
<blockquote>
<p>The land-walking animals could not make out a word.<br>Yet the longing in old whale’s voice could be heard.<br>Old whale fell asleep as the animals reflected.<br>They wanted to help him and the fish he’d collected.<br>“Clearly”, they said, “we need to do what we can”.<br>So they thought long and hard and came up with a plan.<br>Their great balloon floated them on through the night.</p>
</blockquote>
<p>小动物们想了个办法，决定用热气球把鲸鱼送回大海。</p>
<blockquote>
<p>They were all exhausted with no ocean in sight.<br>Old whale felt something well up in his soul as the cold, dark clouds swallowed them whole.<br>The teardrop he had saved welled up in his eye, so he let it fall down from the starry black sky.<br>Sometimes you find that the world is kind.<br>When you open your heart and let your story be told, a strange universe will begin to unfold.<br>As the morning sky began to lighten, he grew a smile that spread across the horizon.</p>
</blockquote>
<p>总有些时候，你会觉得这个世界依然是可爱的。</p>
<blockquote>
<p>Tired, the animals stood by old whale’s side.<br>As they patiently waited for the rise of the tide, they spotted something floating out in the sea.<br>It looked like a rock, and on it, a tree.<br>The water had covered what once was land and what once was water had turned into sand.<br>The tree on elephant’s back was full of animals with wings and bushes, flowers, seeds and good things.<br>Old whale and elephant complemented on another.</p>
</blockquote>
<p>大象和鲸鱼，陆地与海洋，不变的是责任。</p>
<blockquote>
<p>In time, the animals built a new world with each other.<br>Old whale thought the ocean felt just like the skies.<br>He relaxed at last and closed his eyes.</p>
</blockquote>
<p><img src="/images/flewn.jpeg" alt="flewn"></p>
<p>完</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;与其说这是一个游戏，不如认为这是一本互动故事书，讲了关于环境、责任、爱与勇气的故事。&lt;/p&gt;
    
    </summary>
    
      <category term="Game" scheme="http://wdxtub.com/categories/Game/"/>
    
    
      <category term="游戏" scheme="http://wdxtub.com/tags/%E6%B8%B8%E6%88%8F/"/>
    
      <category term="故事" scheme="http://wdxtub.com/tags/%E6%95%85%E4%BA%8B/"/>
    
      <category term="全球变暖" scheme="http://wdxtub.com/tags/%E5%85%A8%E7%90%83%E5%8F%98%E6%9A%96/"/>
    
  </entry>
  
  <entry>
    <title>第二十一周 - Stand Up</title>
    <link href="http://wdxtub.com/2016/11/04/stand-up/"/>
    <id>http://wdxtub.com/2016/11/04/stand-up/</id>
    <published>2016-11-04T15:19:02.000Z</published>
    <updated>2016-11-04T16:28:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>Well, I know, you’ve been searching for a long, long time. You can’t find peace of mind. You’re waiting for answers.</p>
<a id="more"></a>
<hr>
<p>这是艰难的一周，但终究熬了过去，甚至可以说表现得不错。虽然夜深人静的时候仍然会想起病房里的场景，不过慢慢也就习惯了，我能做的就是带着爷爷的所有期待继续往前跑吧。很奇怪，往常写周记时总感觉自己滔滔不绝，这周却愣是敲不出几个字儿。既然如此，也就不勉强，随便说两句吧。</p>
<p>公司举办的篮球赛如期举行，不过相比于其他部门队员加拉拉队二三十人的庞大阵容，我们部门勉强凑出来的四分之三支球队自然是被打得落花流水。在场上我非常难受，很想做点什么，但是却什么都做不了，希望以后这样的时刻能少一点，我不喜欢这样的感觉。</p>
<p>昨天去看了电影『驴得水』，污污污了小半场之后剧情开始大起大落，演得好，看得心疼。虽然鸡汤里总说苦难是财富，但是绝望和仇恨真的可以摧毁一个人，影片中每一个人的变化都是如此残忍，让原本笑声不断的片场最终一片死寂，直到一声枪响宣告了最终的结局。</p>
<p>周五一如既往开会，这次和欧洲一个公司的 COO 简单聊了一下 GUTMA 的架构工作组的进度和未来计划。两个英语不是母语的人聊起天来都有些紧张，不过写了一个星期代码，有人聊聊天总是开心的。接下来应该会花多一点时间在 UTM 的相关项目上了，所以好消息大约是『聊聊无人机』系列可以继续写下去了。</p>
<p>仔细比较中国、美国和欧洲，就会发现这三个地方彼此有相似的地方，但与此同时又有非常明显的差异点。想要在世界范围内把工作做好，就离不开对不同文化的理解，很多时候不能简单的生搬硬套一刀切，更多是在利益的缝隙中斡旋，找到大家都能接受的方案。另外面对全新的事务，不同国情、不同组织架构都会对工作的展开带来极大的影响，好消息是能参与到规划未来的队伍中，不过能力越大责任越大，责任越大思考决策也需要更加审慎，还是要继续提高自己的硬实力。</p>
<p>二老板交代下来的临时任务估计再有一两周就可以收尾了，和领导沟通的确是一门艺术，我也在不断调整自己的工作方式，很多时候有些看起来『投其所好』的做法，目的其实是为了更快更好地做事情。术业有专攻，如果领导暂时不够理解自己在做的事情的难度和价值，就需要在沟通中努力去影响去展示，而不是躲在一边抱怨。既然事情交到我手上，那么当我交出去的那一天，一定是达到我自己的标准的一天，要做就做好，只有先证明自己是一个能做好事情的人，才有资格去选择自己要做的事情。</p>
<p>虽然任务不算特别难，但是在不到两周的时间完成系统构思设计与开发，对自己来说也是一个锻炼。可以照着设计师的稿子撸 CSS，可以自己设计前端的模板和接口，可以一口气完成逻辑层与数据层的设计、搭建与开发。且不论别人怎么看，对自己的信心是一个很大的提高，经过小半年的摸爬滚打，基本上把自己作为工程师的短板都补上了。从前学过的各种理论，在不同层次的实践中转换成了我的十八般武器。接下来的目标，一方面是成为团队内的『布道师』，另一方面就是努力去推动工程师文化。</p>
<p>部门合并之后，也慢慢了解了一些其他同事的工作，可能有些不客气，但是不少人做事情和思考的方法还是有很大提高的空间的。在开源运动蓬勃发展的今天，难点其实已经从如何开发变成了如何选择最合适的技术方案和架构。如果一直把自己局限在熟悉的技术和解决方案中，终究会被时代所淘汰（尤其是在快速更新换代的 IT 行业）。</p>
<p>程序员的理想国也许就是巴比伦的通天塔，虽然大概永远无法建成，但在一次又一次的尝试中留下来的精神和物质财富，才是最重要的。想起之前在非常小众的 Windows Phone 平台上做『英雄联盟百科』的日子，得到官方推荐当然高兴，但最让我开心的是玩家喜欢，我也因此交了许多朋友，他们会觉得会写代码很酷，甚至也最终投身其中，我觉得就是情怀。</p>
<p>When. Can’t keep his mind on nothing else. He’d trade the world for a good thing he’s found.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Well, I know, you’ve been searching for a long, long time. You can’t find peace of mind. You’re waiting for answers.&lt;/p&gt;
    
    </summary>
    
      <category term="Gossip" scheme="http://wdxtub.com/categories/Gossip/"/>
    
    
      <category term="工作" scheme="http://wdxtub.com/tags/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="周记" scheme="http://wdxtub.com/tags/%E5%91%A8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>【Go 之旅】II Go 编码风格指南</title>
    <link href="http://wdxtub.com/2016/11/02/go-style-guide/"/>
    <id>http://wdxtub.com/2016/11/02/go-style-guide/</id>
    <published>2016-11-02T14:09:10.000Z</published>
    <updated>2016-11-04T14:12:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文结合 Effective Go 与自己做项目的一些实践经验，来聊聊 Go 的编码风格指南。</p>
<a id="more"></a>
<hr>
<h2 id="系列文章"><a href="#系列文章" class="headerlink" title="系列文章"></a>系列文章</h2><p>Go 作为一门非常工程向的语言，虽然比较年轻，但是已经让我很开心了，我想，这应该是我最近会持续投入的一门语言。用这个系列跟大家分享我的学习之路。</p>
<ul>
<li><a href="http://wdxtub.com/2016/08/11/golang-first-step/">I Go 快速入门</a></li>
<li><a href="http://wdxtub.com/2016/11/02/go-style-guide/">II Go 编码风格指南</a></li>
<li><a href="http://wdxtub.com/2016/08/15/learn-go-the-hard-way/">III 我的笨办法学 Go</a></li>
<li><a href="http://wdxtub.com/2016/08/24/go-plane-1/">IV 项目实战：一起看飞机 - 项目介绍</a></li>
<li><a href="http://wdxtub.com/2016/08/24/go-plane-2/">V 项目实战：一起看飞机 - 后台</a></li>
<li><a href="http://wdxtub.com/2016/08/25/go-plane-3/">VI 项目实战：一起看飞机 - 客户端</a></li>
</ul>
<h2 id="编码规范"><a href="#编码规范" class="headerlink" title="编码规范"></a>编码规范</h2><p>虽然 Go 自带的 <code>fmt</code> 工具已经解决了大部分排版的问题，但是在命名规范上仍旧有一些要求。另外，Go 的哲学与传统的面向对象的编程语言也有不一致的地方（如 Java），需要进行理解和适应。</p>
<p>之所以要强调编程规范，不仅仅是想要通过一个统一的约定减少代码的理解成本，更是通过引导来帮助大家接受 Go 的特性和风格，而不是简单用 Java 或者 C++ 的思路来写 Go（不然为什么不去写 Java/C++ 呢）</p>
<h3 id="命名"><a href="#命名" class="headerlink" title="命名"></a>命名</h3><p><strong>包名应为小写单词</strong></p>
<p>不应有下划线或者混合大小写。正确示例 <code>controllers</code>, <code>models</code>, <code>routers</code>, <code>views</code></p>
<p><strong>全局变量即参数采用驼峰式命名</strong></p>
<ul>
<li>全局变量：驼峰式，首字母大写（如果不可导出，则首字母小写）</li>
<li>参数传递：驼峰式，首字母小写</li>
</ul>
<p><strong>局部变量采用下划线形式</strong></p>
<p>例如</p>
<figure class="highlight go"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *SettingsController)</span> <span class="title">Post</span><span class="params">()</span></span> &#123;</div><div class="line">	_ftype := c.GetString(<span class="string">"formtype"</span>)</div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>采用全部大写或者全部小写来表示缩写单词</strong></p>
<p>比如对于url这个单词，不要使用</p>
<p>UrlPony<br>而要使用</p>
<p>urlPony 或者 URLPony  </p>
<p><strong>单个函数的接口名以 <code>er</code> 为后缀</strong></p>
<p>如 <code>Reader</code>, <code>Writer</code>，其具体的实现则去掉 <code>er</code>，如</p>
<figure class="highlight go"><table><tr><td class="code"><pre><div class="line"><span class="keyword">type</span> Reader <span class="keyword">interface</span> &#123;</div><div class="line">    Read(p []<span class="keyword">byte</span>) (n <span class="keyword">int</span>, err error)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>两个函数的接口名综合两个函数名</strong>，如</p>
<figure class="highlight go"><table><tr><td class="code"><pre><div class="line"><span class="keyword">type</span> WriteFlusher <span class="keyword">interface</span> &#123;</div><div class="line">    Write([]<span class="keyword">byte</span>) (<span class="keyword">int</span>, error)</div><div class="line">    Flush() error</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>三个以上函数的接口名类似于结构体名</strong>，如</p>
<figure class="highlight go"><table><tr><td class="code"><pre><div class="line"><span class="keyword">type</span> Car <span class="keyword">interface</span> &#123;</div><div class="line">    Start([]<span class="keyword">byte</span>) </div><div class="line">    Stop() error</div><div class="line">    Recover()</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>结构体方法参数名</strong></p>
<p>统一采用单字母 <code>p</code> 而不是 <code>this</code>, <code>me</code> 或者 <code>self</code>，如</p>
<figure class="highlight go"><table><tr><td class="code"><pre><div class="line"><span class="keyword">type</span> T <span class="keyword">struct</span>&#123;&#125; </div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *T)</span><span class="title">Get</span><span class="params">()</span></span>&#123;&#125;</div></pre></td></tr></table></figure>
<h3 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h3><p><strong><code>if</code> 接受初始化语句</strong></p>
<p>约定如下方式建立局部变量</p>
<figure class="highlight go"><table><tr><td class="code"><pre><div class="line"><span class="keyword">if</span> err := file.Chmod(<span class="number">0664</span>); err != <span class="literal">nil</span> &#123;</div><div class="line">    <span class="keyword">return</span> err</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong><code>for</code> 采用短声明建立局部变量</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><div class="line">sum := <span class="number">0</span></div><div class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</div><div class="line">    sum += i</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong><code>range</code> 如果只需要第一项（key），就丢弃第二个</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><div class="line"><span class="keyword">for</span> key := <span class="keyword">range</span> m &#123;</div><div class="line">    <span class="keyword">if</span> key.expired() &#123;</div><div class="line">        <span class="built_in">delete</span>(m, key)</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong><code>range</code> 如果只需要第二项，则把第一项置为下划线</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><div class="line">sum := <span class="number">0</span></div><div class="line"><span class="keyword">for</span> _, value := <span class="keyword">range</span> array &#123;</div><div class="line">    sum += value</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>一旦有错误发生，马上返回</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><div class="line">f, err := os.Open(name)</div><div class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</div><div class="line">    <span class="keyword">return</span> err</div><div class="line">&#125;</div><div class="line">d, err := f.Stat()</div><div class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</div><div class="line">    f.Close()</div><div class="line">    <span class="keyword">return</span> err</div><div class="line">&#125;</div><div class="line">codeUsing(f, d)</div></pre></td></tr></table></figure>
<p><strong>不要滥用 <code>panic</code></strong></p>
<p>不要使用 <code>panic</code> 来做正常的错误处理，应当使用 <code>error</code> 和 多个返回值来进行。</p>
<p><strong>错误消息全小写</strong></p>
<p>错误处理中的字符串应该都是小写，这样在诸如 <code>log.Print(&quot;Reading %s: %v&quot;, filename, err)</code> 不会出现奇怪的大写。</p>
<p><strong>不要忽略错误</strong></p>
<p>如果一个函数的返回值包括 <code>err</code>，那么不要使用 <code>_</code> 来忽略它，而应该去检查函数是否执行成功，如果不成功则执行对应的错误处理并返回，只有在确实不希望出现的情况下才使用 <code>panic</code></p>
<p><strong>无论是参数列表还是返回值，最好加上名称，方便理解</strong>（尤其是在有同类型的多个参数的时候）</p>
<p>比如 <code>func (f *Foo) Location() (float64, float64, error)</code> 就不如</p>
<figure class="highlight go"><table><tr><td class="code"><pre><div class="line"><span class="comment">// Location returns f's latitude and longitude.</span></div><div class="line"><span class="comment">// Negative values mean south and west, respectively.</span></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="params">(f *Foo)</span> <span class="title">Location</span><span class="params">()</span> <span class="params">(lat, long <span class="keyword">float64</span>, err error)</span></span></div></pre></td></tr></table></figure>
<p>来得清晰</p>
<h3 id="参数传递"><a href="#参数传递" class="headerlink" title="参数传递"></a>参数传递</h3><ul>
<li>对于少量数据，不要传递指针</li>
<li>对于大量数据的struct可以考虑使用指针</li>
<li>传入参数是map，slice，chan不要传递指针<ul>
<li>因为map，slice，chan是引用类型，不需要传递指针的指针</li>
</ul>
</li>
</ul>
<h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p><strong>每个包都应该有一个包注释，位于 package 之前。</strong>如果同一个包有多个文件，只需要在一个文件中编写即可，如：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><div class="line"><span class="comment">// Package models 包含应用所需的数据结构及对应的方法</span></div><div class="line"><span class="keyword">package</span> models</div></pre></td></tr></table></figure>
<p><strong>每个以大写字母开头（即可以导出）的方法应该有注释，且已该函数名开头。</strong>如：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><div class="line"><span class="comment">// Get 会响应对应路由转发过来的 get 请求</span></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *CrewController)</span> <span class="title">Get</span><span class="params">()</span></span> &#123;</div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="常见技巧"><a href="#常见技巧" class="headerlink" title="常见技巧"></a>常见技巧</h2><h3 id="声明切片"><a href="#声明切片" class="headerlink" title="声明切片"></a>声明切片</h3><p>使用 <code>var t []string</code> 而不是 <code>t := []string{}</code> 来声明一个切片，这样如果切片从来没有使用的话，就不会对其分配内存</p>
<h3 id="延期执行"><a href="#延期执行" class="headerlink" title="延期执行"></a>延期执行</h3><p>Go的defer语句用来调度一个函数调用（被延期的函数），使其在执行defer的函数即将返回之前才被运行。这是一种不寻常但又很有效的方法，用于处理类似于不管函数通过哪个执行路径返回，资源都必须要被释放的情况。典型的例子是对一个互斥解锁，或者关闭一个文件。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><div class="line"><span class="comment">// Contents returns the file's contents as a string.</span></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">Contents</span><span class="params">(filename <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">string</span>, error)</span></span> &#123;</div><div class="line">    f, err := os.Open(filename)</div><div class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">""</span>, err</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">defer</span> f.Close()  <span class="comment">// f.Close will run when we're finished.</span></div><div class="line"></div><div class="line">    <span class="keyword">var</span> result []<span class="keyword">byte</span></div><div class="line">    buf := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">100</span>)</div><div class="line">    <span class="keyword">for</span> &#123;</div><div class="line">        n, err := f.Read(buf[<span class="number">0</span>:])</div><div class="line">        result = <span class="built_in">append</span>(result, buf[<span class="number">0</span>:n]...) <span class="comment">// append is discussed later.</span></div><div class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</div><div class="line">            <span class="keyword">if</span> err == io.EOF &#123;</div><div class="line">                <span class="keyword">break</span></div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> <span class="string">""</span>, err  <span class="comment">// f will be closed if we return here.</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">string</span>(result), <span class="literal">nil</span> <span class="comment">// f will be closed if we return here.</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>对类似 <code>Close</code> 这样的函数调用进行延期，有两个好处。首先，其确保了你不会忘记关闭文件，如果你之后修改了函数增加一个新的返回路径，会很容易犯这样的错。其次，这意味着关闭操作紧挨着打开操作，这比将其放在函数结尾更加清晰。</p>
<p>被延期执行的函数，它的参数（包括接收者，如果函数是一个方法）是在 <code>defer</code> 执行的时候被求值的，而不是在调用执行的时候。这样除了不用担心变量随着函数的执行值会改变，这还意味着单个被延期执行的调用点可以延期多个函数执行。这里有一个简单的例子。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><div class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">5</span>; i++ &#123;</div><div class="line">    <span class="keyword">defer</span> fmt.Printf(<span class="string">"%d "</span>, i)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>被延期的函数按照 LIFO 的顺序执行，所以这段代码会导致在函数返回时打印出 <code>4 3 2 1 0</code>。</p>
<h2 id="重点理解"><a href="#重点理解" class="headerlink" title="重点理解"></a>重点理解</h2><ul>
<li><a href="http://www.kancloud.cn/kancloud/effective/72207" target="_blank" rel="external">数据 - new 与 make</a></li>
<li><a href="http://www.kancloud.cn/kancloud/effective/72210" target="_blank" rel="external">接口与方法</a></li>
<li><a href="http://www.kancloud.cn/kancloud/effective/72212" target="_blank" rel="external">内嵌 Embedding</a></li>
<li><a href="http://www.kancloud.cn/kancloud/effective/72213" target="_blank" rel="external">并发 - Goroutines 与 Channels</a></li>
<li><a href="http://www.kancloud.cn/kancloud/effective/72214" target="_blank" rel="external">错误处理</a></li>
</ul>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="http://www.hellogcc.org/effective_go.html" target="_blank" rel="external">Effective Go 中文版</a></li>
<li><a href="https://golang.org/doc/effective_go.html" target="_blank" rel="external">Effective Go</a></li>
<li><a href="https://github.com/golang/go/wiki/CodeReviewComments" target="_blank" rel="external">Go Code Review Comments</a></li>
<li><a href="http://kiritor.github.io/2015/06/05/GolangPrjManager/" target="_blank" rel="external">Golang工程管理</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文结合 Effective Go 与自己做项目的一些实践经验，来聊聊 Go 的编码风格指南。&lt;/p&gt;
    
    </summary>
    
      <category term="Technique" scheme="http://wdxtub.com/categories/Technique/"/>
    
    
      <category term="编码" scheme="http://wdxtub.com/tags/%E7%BC%96%E7%A0%81/"/>
    
      <category term="Go" scheme="http://wdxtub.com/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>惜别</title>
    <link href="http://wdxtub.com/2016/10/30/reluctance-to-part/"/>
    <id>http://wdxtub.com/2016/10/30/reluctance-to-part/</id>
    <published>2016-10-30T01:50:01.000Z</published>
    <updated>2016-11-01T14:03:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>在病房里最大的感受不是气味和声音，而是深入骨髓的无助。监视仪不断的报警声和爷爷颤抖的心电图像永不停息的敲击，直到发条走完，一切归于寂静。</p>
<a id="more"></a>
<hr>
<p>二零一六年十月三十日九时五十分许，爷爷的旅途在病床上走到了尽头，终究还是没有等到孙媳妇和四世同堂，甚至都没能认出我，意识清醒地跟我说句话。我不知道该做什么，看着监视器里没有了呼吸和心跳，感觉特别不真实。几个月前还跟我们一起吃饭喝酒的爷爷，忽然去了另外的地方。</p>
<p>我知道春夏秋冬和阴晴圆缺，也知道生老病死和轮回循环。但是站在病房中病床前，看着呼吸急促的爷爷，除了盯着监视器上闪烁着的数字，我的大脑一片空白。于我，再也无法给予；于他，再也无法接受。从高铁站赶往医院的路上，的士司机说原先的两座旧桥都被拆了，要年底才能复建完成。两座旧桥的名字也许会留下，但是它们已是不存在了，曾经的存在也不存在了。</p>
<p>奶奶信佛，今早我去敬菩萨时许下的愿望，可能还没来得及传达过去便已失去了意义。我看着爷爷曾经住过的房间，试图去寻找过往快乐与痛苦的痕迹，但现在看来都已不重要了。爷爷离开家住进医院的一个月时间，在病床上的努力和挣扎终于可以停歇了，毕竟面对死亡，每个人都只能独自上场。因为『生』的欲望，『死』往往变得艰难、痛苦与漫长。</p>
<p>最后的日子里，爷爷大约已无法说完整的话。情况好转时的喜悦与恶化时的痛苦，都只能通过眼神来传递了，直到有一天最后的一扇窗户也被关上，光越来越暗淡，接着，便被无尽的黑暗笼罩。我们再努力去呼喊，爷爷也只有条件反射的反应了。</p>
<p>爷爷心跳骤然加快我便有了不好的预感，随后各项生命指标便开始断崖式下跌，从心跳到血压再到呼吸。虽然在医生的抢救和药物的支持下从悬崖边爬了上来，但终究回天乏术。我出生时爷爷大约已开始了退休生活，虽然聚少离多，但他依然在以他的方式跟我同行。现在他停下来了，他喜爱的象棋与麻将，他晒着太阳摘过的豆芽和豆角，他抽的烟戒的烟与喝的酒，都在那一瞬间消散了。</p>
<blockquote>
<p>当我们不知道终点何在时，我们就不能真正了解和理解过程是什么；但等到达终点，这过程又已经结束了。也许只有先知才能预先站在终点说话。 – 止庵《惜别》</p>
</blockquote>
<p>正因为不知道终点在哪里，所以总会觉得黑暗过去之后便是光明，但令人绝望的是，这仅有的光明，也只是让黑暗更黑一些罢了。爷爷最后走得安详，也许是意识到自己已无力挣扎，便不再挣扎了。我倒是希望爷爷真的解脱了，毕竟就我看来，最后的日子里，剩下的只有煎熬折磨了。</p>
<p>医院报『病危』之后，前些天爷爷的眼睛竟恢复了神采，像小孩子般滴溜溜转，似乎在好奇地打量着这个世界，也许是『回光返照』吧。我不忍心看，我总觉得不去看，火焰便不会熄灭。爸爸说，爷爷之前迷迷糊糊提起要回家、下雨了收衣服和见到了他的爸爸妈妈，虽说是封建迷信，但怕是已经在经历常说的临终前『过电影』的阶段了。</p>
<p>不知道爷爷看到了什么，又想到了什么。我看到越发驼背的奶奶、穿上白衣服的父亲和一直坚强却忍不住留下泪水的姑妈，对生活和生命本身有了更真切的认识。</p>
<p>生命只有一次，很多时候一旦错过，便再无相逢之时。有什么想做的事儿就去做，有什么喜欢的人就去爱，有什么未完成的梦想就去追逐。但归根结底，健康最重要，牙缝里省不出钱，睡眠也不是无息贷款。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在病房里最大的感受不是气味和声音，而是深入骨髓的无助。监视仪不断的报警声和爷爷颤抖的心电图像永不停息的敲击，直到发条走完，一切归于寂静。&lt;/p&gt;
    
    </summary>
    
      <category term="Life" scheme="http://wdxtub.com/categories/Life/"/>
    
    
      <category term="告别" scheme="http://wdxtub.com/tags/%E5%91%8A%E5%88%AB/"/>
    
      <category term="亲情" scheme="http://wdxtub.com/tags/%E4%BA%B2%E6%83%85/"/>
    
      <category term="病房" scheme="http://wdxtub.com/tags/%E7%97%85%E6%88%BF/"/>
    
  </entry>
  
  <entry>
    <title>第二十周 - 像梦一样自由</title>
    <link href="http://wdxtub.com/2016/10/28/free-as-dream/"/>
    <id>http://wdxtub.com/2016/10/28/free-as-dream/</id>
    <published>2016-10-28T15:58:16.000Z</published>
    <updated>2016-10-28T23:12:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>我要像梦一样自由，像天空一样坚强。在这曲折蜿蜒的路上，体验生命的意义。</p>
<a id="more"></a>
<hr>
<p>这周特别漫长，一是因为被调到了陌生的楼层有些不适应，二是因为在研发老大的眼皮底下做项目一点都不敢懈怠。虽说这周更换了带头像的新工牌人逢喜事精神爽，但是工作和生活忽然都有了如此大的变动，很开心，却也明白更艰难的挑战要一个接一个来临了。</p>
<p>从前天真地觉得，怎么会无法平衡工作和生活呢？当自己真正开始为项目们负责之后才意识到，做需求改 bug 其实是最最简单的工作了。跨团队跨部门跨国沟通各级汇报资源整合协调努力推动项目才是最难的，也确确实实需要时间来磨练。</p>
<p>我现在能做的，恐怕就是把经手的每一件事情做到最好。遇到同一个问题，看看自己的思维方式和老司机相比有什么差距，并以此为方向去努力提高自己。就我目前的观察来看，我从研发老大身上看到的是一种骨气和自豪，能自己做就不依赖别人，遇到问题可以一针见血找到关键所在，不会被其他事情所干扰。</p>
<p>暂且抛开经验不说，这种『舍我其谁』的气势是任何一个优秀的工程师都应该具备的，既然决定了要做这件事儿，就要利用一切能利用的资源去推动，做什么没有困难呢，兵来将挡水来土掩嘛。</p>
<p>现在回头看看，这周其实颇为高产。花了一个星期把之前放了快一年的内部项目做了大概，因为之前做数据平台的时候已经积累的足够的经验，这次开新项目从架构到数据结构再到整体的思路基本胸有成竹，除了前端界面略微『复古』外，基本对自己是满意的（有机会的话会专门来写写如何一个人做项目）。周五开了个『大』会，一大早回公司订会议室准备材料，虽然比较辛苦，但是只要做的努力有价值，这都可以忽略不计。</p>
<p>从中学到了很多东西，除了再一次深刻认识到了中国、欧洲、美国做事情方式和考虑问题角度不同外，了解了更多信息之后也对商业竞争这事儿有了全新的认识。很多时候其实大家都知道彼此下一步要做什么，嘴炮可能一时有用，但是归根到底比的就是硬实力。</p>
<p>硬实力落实到技术上，其实就是研发能力和工程能力。研发有的时候可能需要灵感乍现，但是工程方面其实基本都有比较好的最佳实践。至于哪门语言是最优秀的编程语言，大团队内是否需要进行语言和框架层面的统一，可能在上古时代影响比较大。在现在这个面向 google/github/stackoverflow 编程的时代，反而是根据团队现状以及具体的工程需求来决定到底要用什么样的技术。如果硬要夹带点私货的话，我依然坚持动态语言不适合大项目这个看法。凡事都有个度，过犹不及呀。</p>
<p>另外一个有意思的事情是我加入了 GUTMA(如下图所示)下属的 UTM 架构工作组，大约是加入其中的第二个中国人。自己都难以想象，居然在几个月的时间内从一个无知懵懂的学生成为操心大家头顶上这片天空的工作人员。真是『一个人的命运当然要靠个人奋斗，也要考虑历史的行程』。</p>
<p><img src="/images/14776720002950.jpg" alt=""></p>
<p>说没有压力是骗人的，每天上下班的走路和跑步就是我最好的解压方式了。有的时候绕一点路看起来是更远了，其实是更近了。</p>
<p>不由得想起网友的问题：回国还是留美？于我，回国，为了更精彩的人生。</p>
<p>我要像梦一样自由，像大地一样宽容。在这艰辛放逐的路上，点亮生命的光芒。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我要像梦一样自由，像天空一样坚强。在这曲折蜿蜒的路上，体验生命的意义。&lt;/p&gt;
    
    </summary>
    
      <category term="Gossip" scheme="http://wdxtub.com/categories/Gossip/"/>
    
    
      <category term="工作" scheme="http://wdxtub.com/tags/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="周记" scheme="http://wdxtub.com/tags/%E5%91%A8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>异化的一千零二十四</title>
    <link href="http://wdxtub.com/2016/10/24/unhuman-1024/"/>
    <id>http://wdxtub.com/2016/10/24/unhuman-1024/</id>
    <published>2016-10-24T15:11:40.000Z</published>
    <updated>2016-10-24T23:51:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>编程其实是一个『异化』的过程，但是程序员绝不应以此为由活在梦中，而应该像『喜剧之王』中周星驰的一句话：其实，我是一名工程师。</p>
<a id="more"></a>
<hr>
<h2 id="一"><a href="#一" class="headerlink" title="一"></a>一</h2><p>计算机最初的原型几乎都是手摇式计算器，它们能做的基本上只是四则运算。但是无论是从帕斯卡到莱布尼兹再到巴贝奇，他们的心都很大，想着的是利用机器模仿人类的思维。</p>
<p>近年来，因为计算能力得到巨大提升而成为耀眼领域的深度学习，其实从某种意义上来说，打了人类自己的脸。这宣告着我们试图把人类思维公式化的尝试式微，或者说，思维本身在人类目前的技术水平下，根本无法找到一条类似质能方程 $E=MC^2$ 这样的公式。从计算机视觉到人工智能，深度学习都快速达到了原本的方法难以企及的高度。</p>
<p>不觉得很奇妙吗？人类思维这个黑盒，想要通过制造白盒来了解和模仿自己的黑盒，最终却造出来了另一个黑盒。就拿人脸识别来说，用深度学习可以做到极低的错误率，但问题是我们还是不能精确知道人是如何认出他人的。</p>
<h2 id="零"><a href="#零" class="headerlink" title="零"></a>零</h2><p>现代计算机因为硬件的设计是建立在二进制这个地基之上的，归根结底 0 与 1 就是一切。因为二进制，另一套思维方式被建立了起来，生活中我们提到『凑个整』，一定是凑成诸如 $10,10^2,10^3,10^4$ 这样的『整』，但是对于程序来说，凑个整就是 $2^8(256),2^{10}(1024)$，这也正是 10 月 24 被当做『程序员节』的来历（之一）。</p>
<p>这就是『异化』的开始，想成为各种高手，一定是需要能以计算机的方式去思考问题的，而这种思考角度本身也潜移默化影响着每一个程序员。借用 Robin 在<a href="http://mp.weixin.qq.com/s?src=3&amp;timestamp=1477351573&amp;ver=1&amp;signature=CqVs5kozdnyTKNNDgdUIoIiqLLDaTqeY8pEZPIEvt7KvBodz0RsUa-MW9KBtuHQ5TpdNgghnmVmUnwqVn1xHFPO8*tJRum99YNWEUeLsnAFyIoAg46S-mFtAQYdBbHorfEpqPBi0WnhT2gmr*AYhLQJ7bke9mAFHIe8cJT7djJU=" target="_blank" rel="external">从我做起 - 抵制1024程序员节</a>一文中的描述：</p>
<blockquote>
<p>主流的程序员往往是这样的「性格单纯、待人以诚；高智商，对技术有追求，孜孜不倦的学习；工作认真负责，任劳任怨，拙于表现自己；生活简单，对家庭负责。」</p>
</blockquote>
<p>但是当一次又一次听到别人跟我说『没想到你居然是程序员』的时候，我意识到了问题的严重性 —— 大家眼中『程序员』的形象并不怎么样。</p>
<h2 id="二"><a href="#二" class="headerlink" title="二"></a>二</h2><p>在学校这个相对封闭的环境中，因为总有机会让大家互相了解，所以因为『贴标签』带来的刻板印象相对来说会好一些。但是在工作和生活中，可能一次『装疯卖傻』就会让一部分人认为你是『真疯真傻』，可能一次疏漏就会给人感觉你是一个不太靠得住的人。</p>
<p>所以像程序员这样孜孜不倦自黑的群体不多见了，圈子内自黑是趣味，但是慢慢传到圈外，就不是『自黑』，是『真黑』了。从中关村（海淀黄庄）地铁站的光头率到各类和程序员相亲的帖子，程序员在自嘲的同时，也把自己的『异化』给放大了。</p>
<p>试想，公司请 AV 女性来『鼓励』程序员，员工们吃瓜群众乐在其中，但是在外人看来，少不了『噢，程序员好这口』的感觉。一听到程序员，就想到『猥琐、好色、古板、死宅』的绝不是少数，至于『钱多话少死的早』，其实都算是比较客气的说法了。</p>
<p>但问题是我们并不是这样的。</p>
<h2 id="四"><a href="#四" class="headerlink" title="四"></a>四</h2><p>如果可以的话，我想甩掉程序员的名号。我是一名工程师，我的工作是发现问题、勇于尝试、解决问题。工程师不想一辈子卖糖水呢，而是要一起去改变世界。</p>
<p>工程师可以靠谱敢担当，可以顽强有梦想，可以有一身腱子肉、可以大方得体、可以有礼貌风度。最近的热门电视剧中的『计算机学霸』帅气小鲜肉，总算是给我们扳回了一局，工程师同样也可以成为偶像。</p>
<p>最好的工程师一定不是不吃人间烟火的，而是从群众中来，到群众中去的。</p>
<p>毕竟，我是一名工程师啊！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;编程其实是一个『异化』的过程，但是程序员绝不应以此为由活在梦中，而应该像『喜剧之王』中周星驰的一句话：其实，我是一名工程师。&lt;/p&gt;
    
    </summary>
    
      <category term="Gossip" scheme="http://wdxtub.com/categories/Gossip/"/>
    
    
      <category term="程序员" scheme="http://wdxtub.com/tags/%E7%A8%8B%E5%BA%8F%E5%91%98/"/>
    
      <category term="工程师" scheme="http://wdxtub.com/tags/%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
      <category term="1024" scheme="http://wdxtub.com/tags/1024/"/>
    
  </entry>
  
  <entry>
    <title>第十九周 - We Can Be Heroes</title>
    <link href="http://wdxtub.com/2016/10/22/we-can-be-heroes/"/>
    <id>http://wdxtub.com/2016/10/22/we-can-be-heroes/</id>
    <published>2016-10-22T02:31:20.000Z</published>
    <updated>2016-10-22T04:44:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>I remember, when the days are tough and I heard distant thunders. I was so afraid that I could not see what’s right.</p>
<a id="more"></a>
<hr>
<p>每次去看《湄公河行动》都会被片尾曲深深打动，终于在票房破十亿的时候在官方微博发布了『We Can Be Heroes』这首歌，于是就成了日常单曲循环的曲目。之所以喜欢，唱得好是一方面，但最重要的是歌词。不像大部分主旋律一路高歌猛进，歌词描述的是在迷茫和恐惧中慢慢找到方向，或者说正是因为迷茫，所以才更显得坚定。</p>
<p>临近周末又来了台风，不过这次是从惠州登陆的，所以翘首以盼的红色警报最终并没有出现，好在风雨并不算太大。钢筋混凝土把人与自然隔离，人们却要用落地玻璃窗营造一种贴近自然的假象。外面风雨再大，传进来的大约也只有声音，午休时躺在行军床上看着窗外雨水交织，莫名有种冲动，架个滑翔伞在大雨中穿梭，真正彻底冲刷一次自己。</p>
<p>台风来的前一天，出人意料的是好天气，便抓紧机会跑了一次步。大工地一般的南山区是断然没有『空山新雨后』的感觉的，硬要说有，那只能是『天气晚来秋』了。台风走的晚上，雨停了风小了，穿着拖鞋看着满地树叶，心想着要是能有个地方看星星多好。</p>
<p>比天气变化更快的是工作的变化，我决定仿写一段话来表达我的感觉：</p>
<blockquote>
<p>人呐就都不知道，自己就不可以预料。一个人的命运啊，当然要靠自我奋斗，但是也要考虑到历史的行程，我绝对不知道，初出茅庐怎么把我选去面圣了，所以领导同志跟我讲话，说『中央都决定啦，你停下手上的工作，来做这个紧急任务』。实在也不是谦虚，我连另请高明都还没来得及说，所以后来我就在心底念了两句诗，叫『苟利国家生死以，岂因祸福避趋之』。</p>
</blockquote>
<p>于是我就从原来的楼层往上搬了七层，开始了字面上和实际上『面圣』的日子。实话说，感觉很奇怪，原先和其他开发在一起打打闹闹敲代码，忽然把我放到一堆分管各个业务的老大中间，看着她们业务繁忙人来人往一会接一个会，恐怕我还需要适应个几天。</p>
<p>同事帮我总结了一下，来公司之后几乎都是在一个人负责整个项目，一个好处是少了很多沟通成本，另一个好处（也可能是坏处）是所有的责任都只有自己承担，丝毫没有甩锅的机会。当然，成长也是很快的，必须去思考如何把事情做得更好，如何跟各个部门合作，如何让项目顺利走下去。</p>
<p>现在有这么一个极好的机会可以近距离前辈和老司机们是如何工作和思考的，甚至还有近水楼台的优势可以方便请教。虽然肯定是要比之前工作强度大，但仔细想想，这是很好的展示自己能力的机会，要好好利用每一次机会，用实际行动证明自己是值得信任且能把事情做到超出预期的。当然不是说要去可以表现什么的，而是真正要走心，哪怕别人感受不到，至少自己交出去的工作是对得起自己的，足矣。</p>
<p>最后，不由得想起了一本名字不太正经但是内容无比纯真的小说<a href="http://wdxtub.com/2014/09/11/with-ran-jing-clip/">《和空姐同居的日子》</a>的作者在后记里写的这么一段话：</p>
<blockquote>
<p>每个人都有发表自己观点的权力，同样我也有。三年之后的我依旧很“愚蠢”地继续相信现实中的某个角落会存在美好的事物，用这样的心态继续写这个故事。 希望这个故事可以继续感动和我一样“愚蠢”的朋友，并且让更多的人“愚蠢”起来。</p>
</blockquote>
<p>从高中起一直翻来覆去看这本书的我，怕是很长一段时间会这样『愚蠢』下去吧，也挺好的。</p>
<p>A fighter fights his fight. A dreamer dreams his dream. Cause we can be heroes, Sometimes.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I remember, when the days are tough and I heard distant thunders. I was so afraid that I could not see what’s right.&lt;/p&gt;
    
    </summary>
    
      <category term="Gossip" scheme="http://wdxtub.com/categories/Gossip/"/>
    
    
      <category term="工作" scheme="http://wdxtub.com/tags/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="周记" scheme="http://wdxtub.com/tags/%E5%91%A8%E8%AE%B0/"/>
    
      <category term="变化" scheme="http://wdxtub.com/tags/%E5%8F%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>W.I.S.E. 计划</title>
    <link href="http://wdxtub.com/2016/10/17/wise-plan/"/>
    <id>http://wdxtub.com/2016/10/17/wise-plan/</id>
    <published>2016-10-17T13:09:10.000Z</published>
    <updated>2016-10-17T15:29:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>W.I.S.E. 的全称是 Wdxtub’s InSight Engine，是一个我做了快五年的梦，现在，我终于准备好了。</p>
<a id="more"></a>
<hr>
<p>W.I.S.E. 是一个引擎，通过收集互联网中的相关信息和我个人的各种行为，帮助我高效完成『信息筛选 -&gt; 知识提取 -&gt; 洞悉洞察』这一整套流程，辅助我把自己的思维强度和学习能力提高到更高层次。</p>
<p>正如名字所暗示的那样，这是一个非常个性化的应用，对使用者有比较高的要求。在基本的功能完成之后，我会邀请一些小伙伴参与内测，看看这套流程是否真正有效。具体的开发过程我也会以系列文章的形式分享给大家，可以从中以下知识：</p>
<ul>
<li>极简主义的思想及行为指南</li>
<li>Linux / Unix 的基本概念和常用命令</li>
<li>自然语言处理、推荐系统、爬虫、知识图谱、数据可视化</li>
<li>Web 服务、关系型与非关系型数据库、缓存、安全、网络模型</li>
<li>接口设计、客户端开发、SDK 接入、界面与交互设计</li>
</ul>
<p>让我们先跑一下题，看看为什么我会想要做 W.I.S.E. 这个项目</p>
<h2 id="W-I-S-E-前世"><a href="#W-I-S-E-前世" class="headerlink" title="W.I.S.E. 前世"></a>W.I.S.E. 前世</h2><p>无论是本科还是研究生，一到要决定毕业设计的时候，我那颗不务正业的心就开始沸腾。虽然一直以来都在做图形图像相关的研究，但说来奇怪，学生生涯中唯二的毕业论文都跟图形图像没有半点关系。本科的时候做的是自动问答引擎，比方说我输入『中国的首都是哪里』，那么引擎给出的答案应该是『北京』。研究生的时候做的是一个叫 WKK 的东西，全称是 Wdx’s Knowledge Kit，当时我沉醉于构建自己的知识图谱，满脑子想着是如何形成『信息/知识闭环』。</p>
<p>当然，这两次尝试都不能算成功，堪堪做到可 demo 的程度，便被毕业的假期勾走了魂儿。现在想想，如果说本科的尝试带我走入了知识表示的大门，那么研究生的尝试则是一次结合极简主义的化学反应。</p>
<p>WKK 是一个很有野心的项目（感兴趣的朋友应该从附录就能看得出来），试图通过一系列智能化处理把一整套极简主义的行为方式融入到日常的生活学习中，尤其是希望在我很在意的几个方面（笔记、写作、读书）上形成『闭环』。因为毕业设计的时间比原先计划的少了半年，很多工作仅仅做到了『能用』，离『好用』还有一大段距离。本想着找时间完善，无奈直到今天都没有鼓起勇气重新开始。</p>
<p>WKK 留给我的『遗产』很多，主要有三部分：</p>
<p>第一是 JARVIS 这个组件（就是钢铁侠里的智能助理的名字），包括中英文的自然语言处理、笔记和书籍的推荐以及互联网信息抓取三大功能。自己做过一次，现在对于自然语言处理、推荐系统和爬虫都有了一定认识。</p>
<p>第二是笔记系统，也就是结合文件/文件夹，基于 Markdown 和 GTD 的一套体系。虽然这个系统随着时间的推移基本上已经完全变了模样，但是一切的开始还是要源于 WKK 这个项目。Github 中从 WDXPeak 到 Note 1.0/2.0/3.0，都可以看做是这套系统的延伸。</p>
<p>第三是各种功能模块，比方说 Kindle/Evernote/Web 相关的各种脚本以及基本的推送服务。尤其是 Kindle 相关脚本，我现在依然在使用。</p>
<p>虽然 WKK 早已停止开发，但是对于更高效的信息处理、知识获取和能力转化的追求从未停止。最近一直在做数据平台相关的工作，今天上班路上思考<a href="http://wdxtub.com/2016/10/13/data-scientist-engineer-guide/">《数据科学工程师指南》</a>一文中提到的『自我数据管理平台』的时候忽然想起 WKK。</p>
<p>于是，W.I.S.E. 这个新项目就此诞生。</p>
<h2 id="W-I-S-E-今生"><a href="#W-I-S-E-今生" class="headerlink" title="W.I.S.E. 今生"></a>W.I.S.E. 今生</h2><p>起名字是软件工程中最难的问题，推敲许久，终于确定了使用 W.I.S.E. 作为项目的名称，一来是自带『聪明』的意思，二来其全称 Wdxtub’s InSight Engine 恰好特别符合项目的主题。InSight 可以看作是 Knowledge 的下一形态，意味着是 WKK 的继承者和超越者，Engine 则说明这是一个引擎（对，又回到了本科毕业设计的思路），给各种应用提供强劲动力。</p>
<p>预计的技术栈为：</p>
<ul>
<li>Vue.js</li>
<li>Go, Beego</li>
<li>Elasticsearch, MySQL, Redis</li>
<li>Nginx</li>
<li>Web/Mac/iOS/Android/Windows<ul>
<li>预计很长一段时间都只会有 Web 版本，后面的平台看心情</li>
</ul>
</li>
</ul>
<p>核心功能有：</p>
<ul>
<li>信息聚合：博客、微博、豆瓣、知乎、Kindle</li>
<li>内容分析：笔记、日志、书籍</li>
<li>推荐系统：音乐、电影、书籍</li>
<li>生活相关：饮食、习惯、运动、重要事件/节点追踪</li>
</ul>
<p>看起来内容很多，其实这都是『闭环』中的一部分，现在没有了时间限制，就一点一点慢慢做吧。更多详情会同步更新到博客和 Github 中，今天就算是正式启动了！</p>
<h2 id="附录-阐述-WKK-思想的文档"><a href="#附录-阐述-WKK-思想的文档" class="headerlink" title="附录: 阐述 WKK 思想的文档"></a>附录: 阐述 WKK 思想的文档</h2><h3 id="Wdxtub’s-Knowledge-Kit"><a href="#Wdxtub’s-Knowledge-Kit" class="headerlink" title="Wdxtub’s Knowledge Kit"></a>Wdxtub’s Knowledge Kit</h3><p>This is a local machine tool that help me collect valuable information from the specific web sources, manage all my notes and turn them into knowledge.</p>
<h4 id="Background-Why-I-make-WKK"><a href="#Background-Why-I-make-WKK" class="headerlink" title="Background - Why I make WKK"></a>Background - Why I make WKK</h4><p>The quick development of computer and Internet bring us a brand new life style. After several years of “smart” life, I feel frustrated to find out that I’m trapped in a digital castle which has lots of beautiful rooms. The rooms are so beautiful that most of the time I don’t want to leave. But if one day I lose my smart phone or my computer breaks down, the great castle disappears and life becomes really tough.</p>
<p>On one hand, my castle is my home that makes me feel comfortable. But on the other hand, the castle is my prison which keeps me inside. The longer I have lived there, the harder I can get rid of it.</p>
<p>In my opinion, instead of becoming a beautiful castle that lock me down, those smart devices should be the tools that help me lead a life with more choices and opportunities. As it is, I make this tool to give myself more freedom to be who I am. It is the tool that learns to suit me, not I learn to use the tool.</p>
<p>With the help of WKK, I want to connect all my digital devices with ease and find the relations between all my notes as well as ebooks. It is a magic box that mix books, news, websites and notes together and organize them in a natural way so that I can search and unify them easily. This is the process of building my framework of knowledge.</p>
<h4 id="Philosophy-What-is-the-main-focus-of-WKK"><a href="#Philosophy-What-is-the-main-focus-of-WKK" class="headerlink" title="Philosophy - What is the main focus of WKK"></a>Philosophy - What is the main focus of WKK</h4><p>The main focus of WKK is Minimalism. It is a different life style from what I lead now.</p>
<p>Minimalism is a tool that can assist you in finding freedom. Freedom from fear. Freedom from worry. Freedom from overwhelm. Freedom from guilt. Freedom from depression. Freedom from the trappings of the consumer culture we’ve built our lives around. Real freedom.</p>
<p>So I want to make WKK as simple and elegant as possible, the less dependency the better. In that case, I can put more energy to those things that really matters.</p>
<p>Besides minimalism. There are another six keywords for WKK:</p>
<p>Personal, Smart, Automatic, Efficient, Sharing, Creating</p>
<p>Minimalism has helped us:</p>
<ul>
<li>Eliminate our discontent</li>
<li>Reclaim our time</li>
<li>Live in the moment</li>
<li>Pursue our passions</li>
<li>Discover our missions</li>
<li>Experience real freedom</li>
<li>Create more, consume less</li>
<li>Focus on our health</li>
<li>Grow as individuals</li>
<li>Contribute beyond ourselves</li>
<li>Rid ourselves of excess stuff</li>
<li>Discover purpose in our lives</li>
</ul>
<h4 id="Reason-Why-WKK-is-good"><a href="#Reason-Why-WKK-is-good" class="headerlink" title="Reason - Why WKK is good"></a>Reason - Why WKK is good</h4><ol>
<li>Offline. My knowledge base doesn’t rely on the Internet. The core of WKK works even without Internet. So I don’t have to worry about the environments. Battery is the limit.</li>
<li>Lightweight. The minimal requirements is just a text editor. I don’t need specific software to use WKK. Python is the only requirement for running most of the features of WKK. Less dependencies, Longer battery time.</li>
<li>Elegant. With the help of markdown and pandoc, I can generate beautiful documents with markup plain text. Still no need to use other applications, just a text editor. With a better note mechanism, I can take note with more efficiency and transfer to knowledge more easily.</li>
<li>Automatic. Most of the dirty work will be done automatically. WKK is the tool that make me feel better.</li>
<li>Portable. No private format or strange arrangement. WKK uses directories and files to manage everything. So it’s highly portable.</li>
<li>Smart. WKK will learn my habits and find useful information related to specific topics. I don’t have to waste so much time on filtering informations everyday.</li>
</ol>
<h4 id="Technique-What-is-the-Core-of-WKK"><a href="#Technique-What-is-the-Core-of-WKK" class="headerlink" title="Technique - What is the Core of WKK"></a>Technique - What is the Core of WKK</h4><p>As WKK need to handle Chinese and English at the same time. A robust method is what I need. The core of WKK is a high speed web crawler, a directory-based local server and a analyzing/recommending system. Most of the codes are written in python which means I can enable/disable them easily. Here is some of the package I use for WKK:</p>
<ul>
<li>Scrapy: The web crawler</li>
<li>Flask: The web framework</li>
<li>Jieba: Chinese words segmentation</li>
<li>NLTK: Language toolkit from Stanford</li>
<li>word2vec</li>
<li>Pattern</li>
<li>Gensim</li>
<li>Scikit-learn</li>
<li>PyBrain</li>
<li>NumPy, SciPy, Matplotlib</li>
</ul>
<p>And several other packages</p>
<h4 id="Feature-What-can-I-do-with-WKK"><a href="#Feature-What-can-I-do-with-WKK" class="headerlink" title="Feature - What can I do with WKK"></a>Feature - What can I do with WKK</h4><p>Here are the features that WKK support:</p>
<ul>
<li>Procedure<ul>
<li>Collect: Notes, RSS, Wiki, News, Social Network</li>
<li>Improve: Detect Categories, Extract Keywords, Generate Label</li>
<li>Arrange: Topic Analysis, Note Linking</li>
<li>Connect: Build Knowledge Base, Find Connections</li>
</ul>
</li>
<li>Markdown<ul>
<li>Generate Catalog</li>
<li>Convert to mobi/epub/pdf/html</li>
<li>Customized CSS</li>
<li>Support Latex math expressions</li>
<li>(TODO)other markup language support</li>
</ul>
</li>
<li>Note System<ul>
<li>HTML to Markdown(from the Internet)</li>
<li>Link to different notes</li>
<li>Theme note, consist of several notes and form a key idea</li>
<li>Topic Crawler, update related topics from rss/blog/weibo everyday</li>
<li>Auto Tag</li>
<li>Auto Keywords</li>
<li>Similar Note</li>
<li>GTD style arrangement(Inbox Folder, Knowledge Folder)</li>
<li>Note Rating</li>
<li>Import/Export to different application(e.g. evernote)</li>
<li>Recommend related books according to the content of the notes</li>
<li>Generate Knowledge Graph</li>
<li>Find keywords for ebooks</li>
</ul>
</li>
</ul>
<h4 id="Resource-Something-that-make-WKK-even-better"><a href="#Resource-Something-that-make-WKK-even-better" class="headerlink" title="Resource - Something that make WKK even better"></a>Resource - Something that make WKK even better</h4><p>Here is the list that support WKK:</p>
<ul>
<li>NLTK</li>
<li>Flask</li>
<li>Machine Translation</li>
<li>Note cluster</li>
<li>Multi-document generic text summarization</li>
</ul>
<h3 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h3><p>WKK is the main digital tool for minimalism life. I used to use the following applications to take notes record my ideas and arrange my ebooks:</p>
<ul>
<li>Evernote: Collect notes from Internet and wechat</li>
<li>Wunderlist: GTD tool</li>
<li>Calibre: ebook management</li>
</ul>
<p>But these days I has so many digital devices:</p>
<ul>
<li>Android Phone</li>
<li>iPhone</li>
<li>Windows Phone</li>
<li>iPad</li>
<li>Kindle</li>
<li>Windows Notebook</li>
<li>Macbook</li>
</ul>
<p>It is so difficult to find a tool that can connect those different platforms together with user-friendly applications. A more common situation is that some of them work well on some platform but different platforms have their own logics which make things complex.</p>
<p>What’s more, with the mentioned applications, different kinds of data are separate. They are not connected! If notes are not connected, how can I extract the relations between them. If there’s no relations, how can I turn them into knowledge?</p>
<p>So what do I need?</p>
<ul>
<li>A directory-based markdown(plain text) note system<ul>
<li>I can take notes, write blogs, etc</li>
<li>Don’t need to install anything to use the basic function. A portable disk can be my whole knowledge base</li>
</ul>
</li>
<li>All platforms covered import and export toolkit<ul>
<li>I can easily continue my work in different devices and situations</li>
<li>Easily integrated with cloud service such as Github and Dropbox</li>
</ul>
</li>
<li>Automatic Information Crawler<ul>
<li>Given specific topic, find related books and news</li>
<li>Concept definition from wiki</li>
</ul>
</li>
<li>Relation Finder<ul>
<li>Find similar notes or web information</li>
<li>Extract Keywords</li>
<li>Logic Combiner among different topics</li>
</ul>
</li>
</ul>
<p>This is why I make WKK.</p>
<h3 id="Philosophy"><a href="#Philosophy" class="headerlink" title="Philosophy"></a>Philosophy</h3><p>Minimalism is a tool used to rid yourself of life’s excess in favor of focusing on what’s important so you can find happiness, fulfillment, and freedom.</p>
<p>When I know minimalism, it seems that what I have been pursuing for such a long time finally got an answer. So I want to make WKK in a minimalism way.</p>
<ul>
<li><strong>Personal</strong>: Except for the common language database from the internet, all the training data is my notes, my reading as well as my notes. As it is, WKK will be a very personal toolkit that knows your language pattern and favorite topics.</li>
<li><strong>Smart</strong>: The best part of WKK is that the longer I use it, the better it understands me. With the help of researches on big data, it can give me useful recommendations related to the topics and themes I’m interested in.</li>
<li><strong>Automatic</strong>: Tools are the helper that do most of the dirty work for human. So is WKK. Most of the features can work automatically as if it doesn’t exist. I can just use it in a natural way. The only thing I need to do is focusing on learning and thinking. The rest will be handled by WKK automatically.</li>
<li><strong>Efficient</strong>: There are so much information every moment everyday: Mail, News, Twitter, Facebook, Weibo, Wechat, etc. WKK helps me to gather all the information together and gives me a daily report so that I don’t need to waste so much time on filtering information. WKK did it for me.</li>
<li><strong>Sharing</strong>: It’s so easy to share my notes or knowledge with others with the help of WKK. Here is the supported formats: html, epub, mobi, azw3, pdf, jpg, email, etc.</li>
<li><strong>Creating</strong>: With the knowledge graph generated by WKK. I can find related topics and themes easily. With new connections, new thoughts and ideas can always be available in my brain.</li>
</ul>
<p>Here is the philosophy of WKK, also the philosophy of minimalism in my mind.</p>
<h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><ul>
<li><a href="https://github.com/wdxtub/wise-api" target="_blank" rel="external">wdxtub/wise-api</a></li>
<li><a href="https://github.com/wdxtub/wkk" target="_blank" rel="external">wdxtub/wkk - wdx’s knowledge kit</a></li>
<li><a href="https://github.com/wdxtub/wkk/wiki" target="_blank" rel="external">wkk wiki</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;W.I.S.E. 的全称是 Wdxtub’s InSight Engine，是一个我做了快五年的梦，现在，我终于准备好了。&lt;/p&gt;
    
    </summary>
    
      <category term="Technique" scheme="http://wdxtub.com/categories/Technique/"/>
    
    
      <category term="开源" scheme="http://wdxtub.com/tags/%E5%BC%80%E6%BA%90/"/>
    
      <category term="个人" scheme="http://wdxtub.com/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>我与匹兹堡</title>
    <link href="http://wdxtub.com/2016/10/16/me-and-pittsburgh/"/>
    <id>http://wdxtub.com/2016/10/16/me-and-pittsburgh/</id>
    <published>2016-10-16T08:28:30.000Z</published>
    <updated>2016-11-05T05:54:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>今晚的月亮特别圆特别亮，不知怎么的，忽然想起在匹兹堡的日子，作此文以念。</p>
<a id="more"></a>
<hr>
<h2 id="系列文章"><a href="#系列文章" class="headerlink" title="系列文章"></a>系列文章</h2><p>在匹兹堡学习生活的记录，每周有一首主题曲，周记的开头和结尾均为歌词，16 年春季学期已完结</p>
<ul>
<li><a href="http://wdxtub.com/2016/01/14/morning-sun/">第一周 - Morning Sun</a></li>
<li><a href="http://wdxtub.com/2016/01/22/welcome/">第二周 - Welcome</a></li>
<li><a href="http://wdxtub.com/2016/01/29/die-internationale/">第三周 - Die Internationale</a></li>
<li><a href="http://wdxtub.com/2016/02/05/small-town/">第四周 - 鹿港小镇</a></li>
<li><a href="http://wdxtub.com/2016/02/12/conqueror/">第五周 - Conqueror</a></li>
<li><a href="http://wdxtub.com/2016/02/19/used-to-be/">第六周 - 曾经的你</a></li>
<li><a href="http://wdxtub.com/2016/02/27/fake-sadhu/">第七周 - 假行僧</a></li>
<li><a href="http://wdxtub.com/2016/03/04/walkway/">第八周 - 请走人行道</a></li>
<li><a href="http://wdxtub.com/2016/03/11/dark-fear/">第九周 - 怕黑</a></li>
<li><a href="http://wdxtub.com/2016/03/18/deacon-blue/">第十周 - Deacon Blue</a></li>
<li><a href="http://wdxtub.com/2016/03/25/rhythm-inspiration/">第十一周 - 声律启蒙</a></li>
<li><a href="http://wdxtub.com/2016/04/02/the-fun/">第十二周 - 正趣果上果</a></li>
<li><a href="http://wdxtub.com/2016/04/08/sword-man/">第十三周 - 笑傲江湖</a></li>
<li><a href="http://wdxtub.com/2016/04/15/wind-cloud/">第十四周 - 风云</a></li>
<li><a href="http://wdxtub.com/2016/04/21/the-north/">第十五周 - 北国</a></li>
<li><a href="http://wdxtub.com/2016/04/28/in-a-flash/">第十六周 - 一瞬间</a></li>
<li><a href="http://wdxtub.com/2016/05/08/what-is-next/">第十七周 - 接下来如何</a></li>
</ul>
<p>番外</p>
<ul>
<li><a href="http://wdxtub.com/2016/05/12/nigara-falls/">尼亚加拉大瀑布 - 难忘时光</a></li>
<li><a href="http://wdxtub.com/2016/05/14/before-graduation/">写在毕业之前 - 大圣归来</a></li>
<li><a href="http://wdxtub.com/2016/05/26/cmu-life/">CMU 酸甜苦辣 - 在路上</a></li>
<li><a href="http://wdxtub.com/2016/10/16/me-and-pittsburgh/">我与匹兹堡</a></li>
</ul>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>一座城市是否宜居，只有真正住过一段时间才知道。匹兹堡很慢，修水管要一个多月；匹兹堡很快，一场大雨就可以入冬。匹兹堡很坚硬，依稀留有钢铁之城的印记；匹兹堡很柔软，像一头扎进雪堆。匹兹堡很悠闲，花儿自在绽放；匹兹堡很紧张，学生们行色匆匆。</p>
<p>关于匹兹堡，回忆很多。也许是因为异国他乡，也许是因为小半年的冬天，也许怀念的是那时候的自己，那时候的心情。</p>
<p>我记得每周去超市的路，有下雨后的泥泞，有大太阳的坚硬，有雪化又冻结的冰。路上的小学校与校车，路上的小公园与秋千，路上的棒球场与亭子。贪心地买太多东西，一路吭哧吭哧扛回家，往冰箱里放的时候却比谁都开心。看着各种各样的零食哪个都想试一试，最后还是觉得辣芒果最有意思。</p>
<p>我记得春夏秋冬，走过跑过太多次，看着绿叶变成红叶，看着红叶铺满地，然后便是寒冬。半年肃杀后迸发的春天特别美好，不怕人自顾自找东西吃的小鸟，呆头呆脑爬上树的松鼠，小山坡上闲散找东西吃的鹿，草坪中争相抬头的小黄花，夹杂着毛绒绒随风飘摇的蒲公英，落花似雪，雪化了，春天才真的开始了。能清楚回想起看得见摸得着的生机盎然，真想就这么在路边坐一下午。</p>
<p>我记得 Fifth 6224，我记得不好开门的钥匙，每次要闭着眼睛用心感受才能开开门；我记得四个炉子，下面两个好用，右上角的常常打不着；我记得帐篷里的日日夜夜；我记得用纸箱子堆成的桌子和电视架。</p>
<p>我记得要做 71D 和 71B 回学校；我记得学院楼的天台和负零点五层的休息室，大家聚在一起学习打闹，一言不合就去草坪上飞飞盘。我记得像迷宫一样在各个楼之间穿梭的路线；我记得在教授家的晚餐；我记得中国超市每个货架的位置；我记得各种在努力的朋友。</p>
<p>我记得华盛顿山的夜景和日出；我记得沿着河走的微风；我记得一个人在大巴上饿着的肚子；我记得大雪后堆起的雪人；我记得隔一两个月就换一次的发型，尝试了光头和莫西干头。</p>
<p>认识了很多人，走过了很多地方，发现很多想看的景色，千辛万苦真的只是为了看一眼，去呼吸一下，就足够了，对吧。</p>
<p>不得不说，真是有些想大家了，尤其是我两个可爱的室友，找时间再给你们做一顿饭吧。</p>
<p>附 weirang 的看图写话节选。</p>
<p><img src="/images/weirang2.jpeg" alt="weirang2"></p>
<p><img src="/images/weirang3.jpeg" alt="weirang3"></p>
<p>今天看看，仿佛又回到了那个搭着帐篷的客厅，摊在懒人沙发上，想让时间停下。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今晚的月亮特别圆特别亮，不知怎么的，忽然想起在匹兹堡的日子，作此文以念。&lt;/p&gt;
    
    </summary>
    
      <category term="Life" scheme="http://wdxtub.com/categories/Life/"/>
    
    
      <category term="生活" scheme="http://wdxtub.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="匹兹堡" scheme="http://wdxtub.com/tags/%E5%8C%B9%E5%85%B9%E5%A0%A1/"/>
    
      <category term="回忆" scheme="http://wdxtub.com/tags/%E5%9B%9E%E5%BF%86/"/>
    
  </entry>
  
  <entry>
    <title>第十八周 - 和自己赛跑的人</title>
    <link href="http://wdxtub.com/2016/10/15/compete-with-myself/"/>
    <id>http://wdxtub.com/2016/10/15/compete-with-myself/</id>
    <published>2016-10-14T16:07:10.000Z</published>
    <updated>2016-10-14T17:05:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>人有时候需要一点点刺激，人有时候需要一点点打击，在那时候我们身边都有一卡车的难题，不知道成功的意义就在超越自已。</p>
<a id="more"></a>
<hr>
<p>七天到底有多长！国庆的七天像纳米，国庆后的七天像光年。翻看自己的朋友圈和微博，发现这周的生活已经退化到只剩下跑步和写文章，于是拉着同事去日式甜品屋喝清酒，可惜略淡，不够消愁。</p>
<p>天气变凉，跑步上班终于成为了可能。穿着小背心，不跑那么快，也不会出太多汗，到公司换件衣服就行。到下班肌肉刚好恢复，再跑步下班，轻松愉快。工作间歇做俯卧撑计划也继续坚持着，今天终于突破了 300 大关。新作息适应了大半周，算是找到了比较好的节奏。</p>
<p>目前暂定是：周一周五走路上班，周二三四跑步上下班，配上每天 300 个俯卧撑，其他可以灵活安排。十点半左右睡觉，五点半左右起床，七点半左右动身去公司。具体效果怎么样，坚持个六周看看。</p>
<p>今天因为负责的系统集中爆发了几个大问题，折腾到十点多才下班。这周除了忙里偷闲完善和重构了另一个项目的 Go 代码外，基本都在还之前的技术债了。痛定思痛大约是</p>
<ul>
<li>第三方服务是不靠谱的，动不动改个字段什么的，让人欲哭无泪</li>
<li>系统设计好是非常干净的，增加新功能和维护旧功能应该都不需要太多改动</li>
<li>重构系统一定要从底层数据开始，大部分系统的根源问题就是数据结构设计太过随意</li>
<li>塞翁失马，借此机会把系统的性能和稳定性以及文档和流程的规范性都提高了几个档次。正所谓好地基才能盖高楼</li>
<li>常用的动态语言我都撸了个遍，写代码的时候特别分裂，蛇形驼峰傻傻分不清楚。但是十八般武艺即使稀松，也比不会好哇，至少能解决问题</li>
<li>又要当测试又要当运维又要当产品经理还要被知识产权部门借去干活，感觉身体被掏空，这里有很多东西值得学习，我得慢慢消化消化</li>
<li>摸爬滚打中依稀看到了发展方向，在这个青黄不接的阶段，只能一个人当五个人用了</li>
<li>多看经典计算机类书籍真的是能少走太多太多弯路，很多糟糕设计不是因为没经验，就是因为书读得太少，思考得太少</li>
<li>低水平的争论毫无意义，无非是在很糟糕和一般糟糕中选择。正确的方式是不管他们，直接拿出一个优秀的设计。这么说，很多人的能力和态度还不足以认识到优秀和槽糕之间的差距</li>
<li>重复造轮子是颇为吃力不讨好的事情，但是如果真的觉得自己能造出更好的轮子，那么果断不要妥协</li>
</ul>
<p>最后说说写书的进度吧，初稿的网站基本搭建完成，在慢慢更新中。不过光第一章就重写了三次了，果然到第三个版本自己才比较满意了，虽然这几乎占据了我所有的业余时间，不过能有机会真正去做好一件事情，还是很令人激动的。重写的过程也是重新思考的过程，我终于找到了一条和绝大多数课本不一样的路，希望能带来一点新意。</p>
<p>我们都是和自己赛跑的人，为了更好的未来拼命努力，争取一种意义非凡的胜利；为了更好的明天拼命努力，前方没有终点，奋斗永不停息。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;人有时候需要一点点刺激，人有时候需要一点点打击，在那时候我们身边都有一卡车的难题，不知道成功的意义就在超越自已。&lt;/p&gt;
    
    </summary>
    
      <category term="Gossip" scheme="http://wdxtub.com/categories/Gossip/"/>
    
    
      <category term="工作" scheme="http://wdxtub.com/tags/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="周记" scheme="http://wdxtub.com/tags/%E5%91%A8%E8%AE%B0/"/>
    
      <category term="七天" scheme="http://wdxtub.com/tags/%E4%B8%83%E5%A4%A9/"/>
    
  </entry>
  
  <entry>
    <title>数据科学工程师指南</title>
    <link href="http://wdxtub.com/2016/10/13/data-scientist-engineer-guide/"/>
    <id>http://wdxtub.com/2016/10/13/data-scientist-engineer-guide/</id>
    <published>2016-10-13T12:50:32.000Z</published>
    <updated>2016-10-13T12:51:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>公司的数据部门通常有三种角色：数据科学家、数据工程师和架构工程师，但许多事实证明这样的分类方法既不科学也不高效。结合工作中的经验，我认为『数据科学工程师』这一角色才是发展方向。这里我们来聊聊什么是，以及如何成为一个优秀的数据科学工程师。</p>
<a id="more"></a>
<hr>
<h2 id="为什么需要数据科学工程师"><a href="#为什么需要数据科学工程师" class="headerlink" title="为什么需要数据科学工程师"></a>为什么需要数据科学工程师</h2><p>关于数据科学部门的现状，<a href="https://mp.weixin.qq.com/s?__biz=MzA4OTk5OTQzMg==&amp;mid=2449231402&amp;idx=1&amp;sn=8de7356f8ccfa65ebfd0ae50b37a98f8" target="_blank" rel="external">《工程师要不要写ETL？——教你构建高效的算法/数据科学部门》</a>一文已经把最大的痛点写了出来，</p>
<p>总结归纳一下这部分，简单来说就是『数据科学家』没有工程思维，『数据工程师』没有统计思维，『架构工程师』成了运维人员。大家的目标都不一致，整个部门运作起来摩擦力当然是巨大的。</p>
<p>如何解决这个看似无解的问题呢？上文中提出的方案是工程师制造积木，数据科学家拼积木，但是这对数据科学家和工程师本身都提出了极高的要求，对于小团队来说，也很难找出一条分界线来划分科学家与工程师。</p>
<h2 id="什么是数据科学工程师"><a href="#什么是数据科学工程师" class="headerlink" title="什么是数据科学工程师"></a>什么是数据科学工程师</h2><p>我决定换一个思路，与其划分边界，不如模糊边界。于是，数据科学工程师这个角色就成了自然而然的选择。那么数据科学工程师的基本要求是什么呢？至少应该满足下面的要求，并在某一方面有深入思考与实践：</p>
<ul>
<li>对业务逻辑和过程的理解和参与</li>
<li>对平台、服务和框架工作机制的基本理解</li>
<li>能够在已有系统的条件制约下，针对具体问题，利用数据给出解决方案</li>
<li>有足够的工程思维，在设计解决方案的时候考虑到性能、抽象、泛化以及复用</li>
<li>如果是偏工程的，那么在开发过程中需要考虑到数据上可能的需求</li>
<li>如果是偏数据科学的，那么在数据的整个生命流程能够重复利用平台和服务</li>
<li>数据全栈，从 ETL 到最终的数据分析每一步都要参与都能参与</li>
</ul>
<p>这样一来，每个人都能互相理解和认同彼此的工作，即使人数不多，也足以成为一支极具战斗力的团队。依照个人在不同领域的优势进行扬长避短，而不是利用固定的角色来限制发展。</p>
<p><strong>但是，这个角色的门槛非常高，需要在学术界和工业界都有一定经验，更需要有一定的商业嗅觉，最重要的是一颗开放且不断学习的心。</strong></p>
<h2 id="如何成为优秀的数据科学工程师"><a href="#如何成为优秀的数据科学工程师" class="headerlink" title="如何成为优秀的数据科学工程师"></a>如何成为优秀的数据科学工程师</h2><p>首先要强调的是，全知全能的人大约是不存在的，放到数据科学工程师这里同样如此，本文中的数据科学工程师，更倾向于把数据和分析结果真正应用到产品中这个方向（另一个方向是提供商业分析支持，这需要对市场、商业、金融和运营有比较深入的理解，我不太了解，暂时不涉及）。简单来说就是原来『数据科学家』和『数据工程师』两者的结合。</p>
<p>至于『如何成为』这类的问题，大约是有标准答案的，坚持刻意练习与思考总结，理论结合实践，向优秀前辈学习。不过这种漂亮话说出来没啥用，听起来也没啥用。</p>
<p>我这里倒有一个简单易行的办法：做一个自我数据管理平台。通过实际『做』来真正『学』，在不知不觉中『成为』数据科学工程师。</p>
<p>为什么这个主意不错呢？有以下几个原因：</p>
<ul>
<li>自己是开发者，借助现有工具一点一点搭建平台，能够接触开发各个环节的各个方面</li>
<li>自己是产品经理，如何设计系统的功能和配套界面，如何在开发资源有限的条件下进行取舍，能够学会判断需求的优先级与排期</li>
<li>自己是数据经理，需要收集什么数据，收集回来的数据怎么用，能够从自身角度出发去思考数据对于产品和用户的意义</li>
<li>自己是用户，需要在日常使用中发现不足，给出可行的意见和建议</li>
</ul>
<p>在我看来，没有什么比全程参与更能学到东西了，虽然每一环节都是『输入-&gt;处理-&gt;输出』，但是知道每个环节是如何处理的，更能协调好各个部分的效率和功能，让一加一大于三。</p>
<p>具体来说，能做要做的东西太多了，比如：</p>
<ul>
<li>真正把产品用起来，热爱产品<ul>
<li>每天关注数据，思考规模、趋势与关系</li>
</ul>
</li>
<li>保持好奇心与想象力，深入思考，找到那些不太明显但是非常重要的需求<ul>
<li>学会转换视角，从不同角度去解读数据</li>
</ul>
</li>
<li>接入自己在不同社交网站上的数据，对我来说就是微博、知乎、豆瓣和博客了<ul>
<li>根据这些数据分析和挖掘自己的行为，优化自己的时间安排</li>
<li>监测自己每天的工作和学习情况</li>
<li>根据自己的信息收集情况做一些推荐和信息筛选</li>
</ul>
</li>
<li>搭建系统时设计架构，开发功能时梳理流程</li>
<li>结合数据挖掘、机器学习等相关技术建立预测与跟踪体系</li>
<li>如何解释结果是一个大问题（即让数据成为证据）</li>
<li>数据可视化与跨界思考能力</li>
</ul>
<p>上面所说的内容，也就对应于下面的技能集。</p>
<h2 id="数据科学工程师技能集"><a href="#数据科学工程师技能集" class="headerlink" title="数据科学工程师技能集"></a>数据科学工程师技能集</h2><p>参考 Swami Chandrasekaran 制作的数据科学家地铁图，根据自己的理解进行了重新分类和总结（注：知识点不是百分百全）</p>
<h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><ul>
<li>线性代数基础（主要是矩阵及相关知识）</li>
<li>基本数据结构（哈希、二叉树、图）</li>
<li>关系代数、关系型数据库与非关系型数据库（内积、外积、叉乘、NoSQL）</li>
<li>CAP 理论</li>
<li>分布式基础（分片、集群）</li>
<li>信息论与熵</li>
<li>基本的报告、商业智能及分析</li>
<li>JSON 和 XML 格式</li>
<li>正则表达式</li>
<li>计算机系统运行机制</li>
<li>基础计算机学科：操作系统、计算机网络</li>
<li>Linux 的基本使用</li>
</ul>
<h3 id="统计"><a href="#统计" class="headerlink" title="统计"></a>统计</h3><ul>
<li>了解各类数据集与获取方式</li>
<li>基本统计信息（均值、中位数、范围、标准差、方差、直方图）</li>
<li>概率论、贝叶斯理论、随机变量、概率密度函数、累积分布函数、连续分布（正态、泊松、高斯）</li>
<li>数据倾斜、方差分析、中心极限定理、蒙特卡洛方法、假设检验、最小二乘法</li>
<li>最大似然估计、核密度估计、回归分析、协方差、皮尔逊相关、各类距离度量（欧拉距离）</li>
</ul>
<h3 id="编程"><a href="#编程" class="headerlink" title="编程"></a>编程</h3><ul>
<li>面向对象</li>
<li>接口设计</li>
<li>Python / Go / Java / Shell</li>
<li>基本算法</li>
<li>读取各类数据</li>
<li>使用软件包</li>
</ul>
<h3 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a>机器学习</h3><ul>
<li>机器学习基础知识</li>
<li>监督学习、非监督学习、半监督学习、强化学习</li>
<li>训练集与测试集</li>
<li>分类器、预测器、过拟合、偏差</li>
<li>分类：决策树、Boosting、朴素贝叶斯、K 近邻</li>
<li>回归：Logistic 回归、线性回归、感知机</li>
<li>聚类：K-Means</li>
<li>神经网络、SVM</li>
<li>情感分析、协同过滤、实体识别</li>
</ul>
<h3 id="数据处理流程"><a href="#数据处理流程" class="headerlink" title="数据处理流程"></a>数据处理流程</h3><ul>
<li>ETL 过程</li>
<li>MapReduce 基本理解</li>
<li>Hadoop 生态(Zookeeper, HDFS)</li>
<li>Spark 生态</li>
<li>NoSQL 数据库(MongoDB, Cassandra)</li>
<li>云服务的使用</li>
<li>各类配套工具：Flume, Scrapy 等等</li>
<li>数据可视化</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>真正动手去做一个像样的产品，并且真正用起来才是最锻炼人的。不要限制自己，其实没有条条框框，想做，就去试试。</p>
<p>唯一要注意的就是，累了的时候，想想那时意气风发豪情万丈的自己，别停下。</p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://www.zhihu.com/question/20625467" target="_blank" rel="external">什么是好的数据科学家</a></li>
<li><a href="https://www.zhihu.com/question/21592677" target="_blank" rel="external">如何成为一名数据科学家</a></li>
<li><a href="https://www.zhihu.com/question/26894983" target="_blank" rel="external">数据科学家/统计学家应该养成哪些好习惯</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA4OTk5OTQzMg==&amp;mid=2449231402&amp;idx=1&amp;sn=8de7356f8ccfa65ebfd0ae50b37a98f8" target="_blank" rel="external">工程师要不要写ETL？——教你构建高效的算法/数据科学部门</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;公司的数据部门通常有三种角色：数据科学家、数据工程师和架构工程师，但许多事实证明这样的分类方法既不科学也不高效。结合工作中的经验，我认为『数据科学工程师』这一角色才是发展方向。这里我们来聊聊什么是，以及如何成为一个优秀的数据科学工程师。&lt;/p&gt;
    
    </summary>
    
      <category term="Technique" scheme="http://wdxtub.com/categories/Technique/"/>
    
    
      <category term="工程" scheme="http://wdxtub.com/tags/%E5%B7%A5%E7%A8%8B/"/>
    
      <category term="数据" scheme="http://wdxtub.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
      <category term="理论" scheme="http://wdxtub.com/tags/%E7%90%86%E8%AE%BA/"/>
    
  </entry>
  
</feed>
